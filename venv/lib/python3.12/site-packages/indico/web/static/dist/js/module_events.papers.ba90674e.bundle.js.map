{"version":3,"file":"js/module_events.papers.ba90674e.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/papers/client/js/actions.js","webpack:///indico/modules/events/papers/client/js/models.js","webpack:///indico/modules/events/papers/client/js/selectors.js","webpack:///indico/modules/events/papers/client/js/components/PaperFiles.jsx","webpack:///indico/modules/events/papers/client/js/components/PaperMetadata.jsx","webpack:///indico/modules/events/papers/client/js/components/PaperContent.jsx","webpack:///indico/modules/events/papers/client/js/components/PaperDecisionForm.jsx","webpack:///indico/modules/events/papers/client/js/components/TimelineHeader.jsx","webpack:///indico/modules/events/papers/client/js/components/CommentForm.jsx","webpack:///indico/modules/events/papers/client/js/components/GroupReviewForm.module.scss?e629","webpack:///indico/modules/events/papers/client/js/components/GroupReviewForm.jsx","webpack:///indico/modules/events/papers/client/js/components/PaperReviewForm.jsx","webpack:///indico/modules/events/papers/client/js/components/RevisionJudgment.jsx","webpack:///indico/modules/events/papers/client/js/components/RevisionComment.jsx","webpack:///indico/modules/events/papers/client/js/components/RevisionReview.jsx","webpack:///indico/modules/events/papers/client/js/components/RevisionTimeline.jsx","webpack:///indico/modules/events/papers/client/js/components/SubmitRevision.jsx","webpack:///indico/modules/events/papers/client/js/components/TimelineItem.jsx","webpack:///indico/modules/events/papers/client/js/components/Paper.jsx","webpack:///indico/modules/events/papers/client/js/reducers.js","webpack:///indico/modules/events/papers/client/js/index.js","webpack:///indico/modules/events/papers/client/js/setup.jsx"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport commentActionsURL from 'indico-url:papers.api_comment_actions';\nimport createCommentURL from 'indico-url:papers.api_create_comment';\nimport createReviewURL from 'indico-url:papers.api_create_review';\nimport judgePaperURL from 'indico-url:papers.api_judge_paper';\nimport paperInfoURL from 'indico-url:papers.api_paper_details';\nimport resetPaperStateURL from 'indico-url:papers.api_reset_paper_state';\nimport updateReviewURL from 'indico-url:papers.api_update_review';\n\nimport {indicoAxios} from 'indico/utils/axios';\nimport {ajaxAction, submitFormAction} from 'indico/utils/redux';\n\nexport const FETCH_PAPER_DETAILS_REQUEST = 'papers/FETCH_PAPER_DETAILS_REQUEST';\nexport const FETCH_PAPER_DETAILS_SUCCESS = 'papers/FETCH_PAPER_DETAILS_SUCCESS';\nexport const FETCH_PAPER_DETAILS_ERROR = 'papers/FETCH_PAPER_DETAILS_ERROR';\n\nexport const RESET_PAPER_JUDGMENT_REQUEST = 'papers/RESET_PAPER_JUDGMENT_REQUEST';\nexport const RESET_PAPER_JUDGMENT_SUCCESS = 'papers/RESET_PAPER_JUDGMENT_SUCCESS';\nexport const RESET_PAPER_JUDGMENT_ERROR = 'papers/RESET_PAPER_JUDGMENT_ERROR';\n\nexport const DELETE_COMMENT_REQUEST = 'papers/DELETE_COMMENT_REQUEST';\nexport const DELETE_COMMENT_SUCCESS = 'papers/DELETE_COMMENT_SUCCESS';\nexport const DELETE_COMMENT_ERROR = 'papers/DELETE_COMMENT_ERROR';\n\nexport function fetchPaperDetails(eventId, contributionId) {\n  return ajaxAction(\n    () => indicoAxios.get(paperInfoURL({event_id: eventId, contrib_id: contributionId})),\n    FETCH_PAPER_DETAILS_REQUEST,\n    FETCH_PAPER_DETAILS_SUCCESS,\n    FETCH_PAPER_DETAILS_ERROR\n  );\n}\n\nexport function resetPaperJudgment(eventId, contributionId) {\n  return ajaxAction(\n    () => indicoAxios.delete(resetPaperStateURL({event_id: eventId, contrib_id: contributionId})),\n    RESET_PAPER_JUDGMENT_REQUEST,\n    [RESET_PAPER_JUDGMENT_SUCCESS, () => fetchPaperDetails(eventId, contributionId)],\n    RESET_PAPER_JUDGMENT_ERROR\n  );\n}\n\nexport function createComment(eventId, contributionId, commentData) {\n  const params = {\n    event_id: eventId,\n    contrib_id: contributionId,\n  };\n\n  return submitFormAction(\n    () => indicoAxios.post(createCommentURL(params), commentData),\n    null,\n    () => fetchPaperDetails(eventId, contributionId),\n    null\n  );\n}\n\nexport function updateComment(eventId, contributionId, revisionId, commentId, commentData) {\n  const params = {\n    event_id: eventId,\n    contrib_id: contributionId,\n    revision_id: revisionId,\n    comment_id: commentId,\n  };\n\n  return submitFormAction(\n    () => indicoAxios.patch(commentActionsURL(params), commentData),\n    null,\n    () => fetchPaperDetails(eventId, contributionId),\n    null\n  );\n}\n\nexport function deleteComment(eventId, contributionId, revisionId, commentId) {\n  const params = {\n    event_id: eventId,\n    contrib_id: contributionId,\n    revision_id: revisionId,\n    comment_id: commentId,\n  };\n  return ajaxAction(\n    () => indicoAxios.delete(commentActionsURL(params)),\n    DELETE_COMMENT_REQUEST,\n    [DELETE_COMMENT_SUCCESS, () => fetchPaperDetails(eventId, contributionId)],\n    DELETE_COMMENT_ERROR,\n    data => ({commentId, ...data})\n  );\n}\n\nexport function judgePaper(eventId, contributionId, judgmentData) {\n  return submitFormAction(\n    () =>\n      indicoAxios.post(\n        judgePaperURL({event_id: eventId, contrib_id: contributionId}),\n        judgmentData\n      ),\n    null,\n    () => fetchPaperDetails(eventId, contributionId),\n    null\n  );\n}\n\nexport function createReview(eventId, contributionId, group, reviewData) {\n  return submitFormAction(\n    () =>\n      indicoAxios.post(\n        createReviewURL({event_id: eventId, contrib_id: contributionId, review_type: group}),\n        reviewData\n      ),\n    null,\n    () => fetchPaperDetails(eventId, contributionId),\n    null\n  );\n}\n\nexport function updateReview(eventId, contributionId, revisionId, reviewId, reviewData) {\n  return submitFormAction(\n    () =>\n      indicoAxios.post(\n        updateReviewURL({\n          event_id: eventId,\n          contrib_id: contributionId,\n          revision_id: revisionId,\n          review_id: reviewId,\n        }),\n        reviewData\n      ),\n    null,\n    () => fetchPaperDetails(eventId, contributionId),\n    null\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nexport const PaperState = {\n  accepted: 'accepted',\n  rejected: 'rejected',\n  submitted: 'submitted',\n  to_be_corrected: 'to_be_corrected',\n};\n\nexport const CommentVisibility = {\n  judges: 'judges',\n  reviewers: 'reviewers',\n  contributors: 'contributors',\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {createSelector} from 'reselect';\n\nimport {RequestState} from 'indico/utils/redux';\n\nimport {PaperState} from './models';\n\nexport const isFetchingInitialPaperDetails = state =>\n  state.paper.requests.details.state === RequestState.STARTED && !state.paper.details;\nexport const isPaperStateResetInProgress = state =>\n  state.paper.requests.resetState.state === RequestState.STARTED;\nexport const isDeletingComment = state =>\n  state.paper.requests.deleteComment.state === RequestState.STARTED;\n\nexport const isEventLocked = state => state.paper.details.event.isLocked;\nexport const getCurrentUser = state => state.staticData.user;\nexport const getPaperDetails = state => state.paper.details;\nexport const getPaperEvent = state => state.paper.details.event;\nexport const getPaperContribution = state => state.paper.details.contribution;\n\nexport const getReviewingQuestions = createSelector(\n  getPaperEvent,\n  ({cfp}) => ({\n    layout: cfp.layoutReviewQuestions,\n    content: cfp.contentReviewQuestions,\n  })\n);\nexport const canJudgePaper = createSelector(\n  getPaperDetails,\n  getPaperEvent,\n  ({isInFinalState, canJudge}, {isLocked}) => !isLocked && !isInFinalState && canJudge\n);\nexport const canReviewPaper = createSelector(\n  getPaperDetails,\n  getPaperEvent,\n  ({isInFinalState, canReview}, {isLocked}) => !isLocked && !isInFinalState && canReview\n);\nexport const canSubmitNewRevision = createSelector(\n  getPaperDetails,\n  getPaperEvent,\n  ({canSubmitProceedings, canManage, state: {name: stateName}}, {isLocked}) =>\n    !isLocked && stateName === PaperState.to_be_corrected && (canManage || canSubmitProceedings)\n);\nexport const canCommentPaper = createSelector(\n  getPaperDetails,\n  getPaperEvent,\n  ({isInFinalState, canComment}, {isLocked}) => !isLocked && !isInFinalState && canComment\n);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function PaperFiles({fullWidth, files}) {\n  return (\n    <ul className={`paper-files flexrow f-wrap f-a-center ${fullWidth ? 'full-width' : ''}`}>\n      {files.map(file => (\n        <li key={file.id}>\n          <a\n            href={file.downloadURL}\n            className={`attachment paper-file i-button text-color borderless ${file.icon}`}\n          >\n            <span className=\"title truncate-text\">{file.filename}</span>\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nPaperFiles.propTypes = {\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      filename: PropTypes.string.isRequired,\n      icon: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  fullWidth: PropTypes.bool,\n};\n\nPaperFiles.defaultProps = {\n  fullWidth: false,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {getPaperDetails} from '../selectors';\n\nexport default function PaperMetadata() {\n  const {\n    lastRevision: {id, submittedDt, submitter},\n  } = useSelector(getPaperDetails);\n\n  const date = (\n    <a className=\"paper-metadata-dt\" href={`#block-info-${id}`}>\n      <time dateTime={serializeDate(submittedDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}>\n        {serializeDate(submittedDt, 'LL')}\n      </time>\n    </a>\n  );\n\n  return (\n    <div className=\"paper-metadata flexrow f-j-end\">\n      <Translate>\n        Submitted on <Param name=\"date\" value={date} /> by{' '}\n        <Param name=\"submitter\" value={submitter.fullName} />\n      </Translate>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport {getPaperDetails} from '../selectors';\n\nimport PaperFiles from './PaperFiles';\nimport PaperMetadata from './PaperMetadata';\n\nexport default function PaperContent() {\n  const {\n    lastRevision: {spotlightFile, files},\n  } = useSelector(getPaperDetails);\n  const onlySpotlightFile = files.length === 1;\n  let content;\n\n  if (spotlightFile) {\n    content = (\n      <>\n        <div\n          key={`spotlight-file-${spotlightFile.id}`}\n          className={`flexrow f-a-center spotlight-file i-button text-color borderless paper-file ${\n            onlySpotlightFile ? 'full-width' : ''\n          }`}\n        >\n          <a\n            href={spotlightFile.downloadURL}\n            className={`attachment spotlight-file-name flexrow f-a-center truncate-text ${spotlightFile.icon}`}\n          >\n            <span className=\"title truncate-text\">{spotlightFile.filename}</span>\n          </a>\n        </div>\n        {!onlySpotlightFile && (\n          <PaperFiles\n            key=\"paper-files\"\n            files={files.filter(file => file.id !== spotlightFile.id)}\n          />\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div key=\"paper-files\" className=\"paper-files-list flexrow f-a-baseline\">\n        <div className=\"paper-files-list-label f-self-no-shrink\">\n          <Translate>Paper files</Translate>\n        </div>\n        <PaperFiles files={files} fullWidth />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"paper-content flexcol\">\n      <div className=\"flexrow\">{content}</div>\n      <PaperMetadata />\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React, {useCallback} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Form} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {FinalDropdown, FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {judgePaper} from '../actions';\nimport {PaperState} from '../models';\nimport {canJudgePaper, getCurrentUser, getPaperDetails, isEventLocked} from '../selectors';\n\nimport './PaperDecisionForm.module.scss';\n\nexport default function PaperDecisionForm() {\n  const dispatch = useDispatch();\n  const {\n    event: {id: eventId},\n    contribution: {id: contributionId},\n    state,\n  } = useSelector(getPaperDetails);\n  const isLocked = useSelector(isEventLocked);\n  const currentUser = useSelector(getCurrentUser);\n  const canJudge = useSelector(canJudgePaper);\n\n  const submitPaperJudgment = useCallback(\n    async (formData, form) => {\n      const rv = await dispatch(judgePaper(eventId, contributionId, formData));\n      if (rv.error) {\n        return rv.error;\n      }\n      setTimeout(() => form.reset(), 0);\n    },\n    [dispatch, eventId, contributionId]\n  );\n\n  if (isLocked || !canJudge) {\n    return null;\n  }\n\n  const actionOptions = {\n    [PaperState.accepted]: {\n      value: 'accept',\n      text: Translate.string('Accept'),\n    },\n    [PaperState.rejected]: {\n      value: 'reject',\n      text: Translate.string('Reject'),\n    },\n  };\n\n  if (state.name === PaperState.submitted) {\n    actionOptions[PaperState.to_be_corrected] = {\n      value: 'to_be_corrected',\n      text: Translate.string('To be corrected'),\n    };\n  }\n\n  return (\n    <div\n      id=\"proposal-decision-box\"\n      className=\"i-timeline i-timeline-item\"\n      styleName=\"paper-decision-box\"\n    >\n      <UserAvatar user={currentUser} />\n      <div className=\"i-timeline-item-box footer-only header-indicator-left review-form\">\n        <div className=\"i-box-footer\">\n          <FinalForm\n            onSubmit={submitPaperJudgment}\n            initialValues={{action: 'accept', comment: ''}}\n            subscription={{}}\n          >\n            {fprops => (\n              <Form onSubmit={fprops.handleSubmit}>\n                <FinalDropdown\n                  name=\"action\"\n                  options={Object.values(actionOptions)}\n                  selection\n                  required\n                />\n                <FinalTextArea\n                  name=\"comment\"\n                  placeholder={Translate.string('Leave a comment for the submitter...')}\n                />\n                <FinalSubmitButton label={Translate.string('Judge')} disabledUntilChange={false} />\n              </Form>\n            )}\n          </FinalForm>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport contributionDisplayURL from 'indico-url:contributions.display_contribution';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {MathJax} from 'indico/react/components';\nimport {Param, Translate} from 'indico/react/i18n';\n\nexport default function TimelineHeader({children, contribution, state, submitter, eventId}) {\n  return (\n    <>\n      <div className=\"submission-title flexrow\">\n        <MathJax>\n          <h3 className=\"f-self-strech\">\n            {contribution.title} <span className=\"submission-id\">#{contribution.friendlyId}</span>\n            {contribution.code && <span className=\"submission-code\">{contribution.code}</span>}\n          </h3>\n        </MathJax>\n      </div>\n      <div className=\"paper-public\">\n        <div className=\"review-summary flexrow f-a-baseline\">\n          <div className=\"review-summary-badge\">\n            <div className={`i-tag ${state.cssClass}`}>{state.title}</div>\n          </div>\n          <div className=\"review-summary-content f-self-stretch\">\n            <div>\n              <Translate>\n                <Param name=\"submitterName\" value={submitter.fullName} wrapper={<strong />} />{' '}\n                submitted for the contribution{' '}\n                <Param\n                  name=\"contributionLink\"\n                  value={contribution.title}\n                  wrapper={\n                    <a\n                      href={contributionDisplayURL({\n                        event_id: eventId,\n                        contrib_id: contribution.id,\n                      })}\n                    />\n                  }\n                />\n              </Translate>{' '}\n            </div>\n          </div>\n        </div>\n        <div className=\"review-item-content\">{children}</div>\n      </div>\n    </>\n  );\n}\n\nTimelineHeader.propTypes = {\n  contribution: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    friendlyId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n  }).isRequired,\n  state: PropTypes.shape({\n    cssClass: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  submitter: PropTypes.shape({\n    fullName: PropTypes.string.isRequired,\n  }).isRequired,\n  eventId: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useSelector} from 'react-redux';\nimport {Button, Form} from 'semantic-ui-react';\n\nimport {FinalDropdown, FinalInput, FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {canJudgePaper, canReviewPaper} from '../selectors';\n\n/**\n * @param {Function} onSubmit - function invoked on the form submission\n * @param {Function} onToggleExpand - function called every time the text input gets/loses focus\n * @param {Object} comment - object with the data used to prefill the form's initial values\n * @param {Boolean} expanded - whether the form should be expanded on the initial render\n */\nexport default function CommentForm({onSubmit, onToggleExpand, comment, expanded}) {\n  const [commentFormVisible, setCommentFormVisible] = useState(expanded);\n  const canReview = useSelector(canReviewPaper);\n  const canJudge = useSelector(canJudgePaper);\n  const InputComponent = commentFormVisible ? FinalTextArea : FinalInput;\n  const inputProps = commentFormVisible\n    ? {autoFocus: true}\n    : {\n        onFocus: () => {\n          setCommentFormVisible(true);\n          onToggleExpand(true);\n        },\n      };\n\n  const handleSubmit = async (formData, form) => {\n    const error = await onSubmit(formData, form);\n    if (error) {\n      return error;\n    }\n\n    setCommentFormVisible(false);\n    if (onToggleExpand) {\n      onToggleExpand(false);\n    }\n\n    setTimeout(() => form.reset(), 0);\n  };\n\n  const visibilityOptions = {\n    judges: {\n      value: 'judges',\n      text: Translate.string('Visible only to judges'),\n    },\n    reviewers: {\n      value: 'reviewers',\n      text: Translate.string('Visible to reviewers and judges'),\n    },\n    contributors: {\n      value: 'contributors',\n      text: Translate.string('Visible to contributors, reviewers and judges'),\n    },\n  };\n\n  if (!canJudge) {\n    delete visibilityOptions.judges;\n  }\n\n  const initialValues = comment ? {comment: comment.text} : {};\n  // users who can't review the paper don't have the required permissions to change the comment's visibility,\n  // thus there is no point in setting the initial value for the \"visibility\" field\n  if (canReview) {\n    initialValues.visibility =\n      comment && comment.visibility ? comment.visibility.name : Object.keys(visibilityOptions)[0];\n  }\n\n  return (\n    <div className=\"f-self-stretch\">\n      <FinalForm\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        subscription={{submitting: true}}\n      >\n        {fprops => (\n          <Form onSubmit={fprops.handleSubmit}>\n            <InputComponent\n              {...inputProps}\n              name=\"comment\"\n              placeholder={Translate.string('Leave a comment...')}\n              required={commentFormVisible}\n            />\n            {commentFormVisible && (\n              <>\n                {canReview && (\n                  <FinalDropdown\n                    name=\"visibility\"\n                    options={Object.values(visibilityOptions)}\n                    selection\n                    required\n                  />\n                )}\n                <Form.Group style={{marginBottom: 0}} inline>\n                  <FinalSubmitButton\n                    label={\n                      comment ? Translate.string('Update comment') : Translate.string('Comment')\n                    }\n                  />\n                  <Button\n                    disabled={fprops.submitting}\n                    content={Translate.string('Cancel')}\n                    onClick={() => {\n                      setCommentFormVisible(false);\n                      if (onToggleExpand) {\n                        onToggleExpand(false);\n                      }\n                      fprops.form.reset();\n                    }}\n                  />\n                </Form.Group>\n              </>\n            )}\n          </Form>\n        )}\n      </FinalForm>\n    </div>\n  );\n}\n\nCommentForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onToggleExpand: PropTypes.func,\n  comment: PropTypes.shape({\n    text: PropTypes.string,\n    visibility: PropTypes.shape({\n      name: PropTypes.oneOf(['judges', 'reviewers', 'contributors']).isRequired,\n    }),\n  }),\n  expanded: PropTypes.bool,\n};\n\nCommentForm.defaultProps = {\n  onToggleExpand: null,\n  comment: null,\n  expanded: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"group-review-form\":\"events-papers-client-js-components-___GroupReviewForm-module__group-review-form___QGxzX\",\"question-field\":\"events-papers-client-js-components-___GroupReviewForm-module__question-field___n8Cys\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useSelector} from 'react-redux';\nimport {Button, Form, Popup} from 'semantic-ui-react';\n\nimport {FinalRating} from 'indico/react/components/ReviewRating';\nimport {\n  FinalDropdown,\n  FinalInput,\n  FinalRadio,\n  FinalTextArea,\n  FinalSubmitButton,\n} from 'indico/react/forms';\nimport {Param, Translate} from 'indico/react/i18n';\n\nimport {getReviewingQuestions, getPaperEvent} from '../selectors';\n\nimport './GroupReviewForm.module.scss';\n\nconst actionOptions = [\n  {\n    value: 'accept',\n    text: Translate.string('Accept'),\n  },\n  {\n    value: 'reject',\n    text: Translate.string('Reject'),\n  },\n  {\n    value: 'to_be_corrected',\n    text: Translate.string('To be corrected'),\n  },\n];\n\nfunction ReviewingQuestion({question: {id, isRequired, fieldType, fieldData}}) {\n  const {\n    cfp: {\n      ratingRange: [minScore, maxScore],\n    },\n  } = useSelector(getPaperEvent);\n  const fieldName = `question_${id}`;\n\n  if (fieldType === 'text') {\n    const Component = fieldData.multiline ? FinalTextArea : FinalInput;\n    const props = {'data-max-words': fieldData.maxWords, 'maxLength': fieldData.maxLength};\n    return <Component name={fieldName} required={isRequired} {...props} />;\n  } else if (fieldType === 'bool') {\n    return (\n      <Form.Group>\n        <FinalRadio\n          name={fieldName}\n          required={isRequired}\n          label={Translate.string('Yes')}\n          value=\"yes\"\n        />\n        <FinalRadio\n          name={fieldName}\n          required={isRequired}\n          label={Translate.string('No')}\n          value=\"no\"\n        />\n      </Form.Group>\n    );\n  } else if (fieldType === 'rating') {\n    return (\n      <FinalRating name={fieldName} required={isRequired} max={maxScore} min={minScore} allowNull />\n    );\n  } else {\n    throw new Error(`Unsupported field type: ${fieldType}`);\n  }\n}\n\nReviewingQuestion.propTypes = {\n  question: PropTypes.object.isRequired,\n};\n\n/**\n *\n * @param {Object} group - object with the info about the reviewing group\n * @param {Object} review - object with the data used to prefill the form's initial values\n * @param {Function} onSubmit - function invoked on the form submission\n * @param {Function} onCancel - function invoked once the user decides to stop filling in the form\n */\nexport default function GroupReviewForm({group, review, onSubmit, onCancel}) {\n  const questions = useSelector(getReviewingQuestions)[group.name];\n  const renderQuestions = () => {\n    return questions.map((question, index) => {\n      return (\n        <Popup\n          key={question.id}\n          position=\"left center\"\n          content={question.description}\n          disabled={!question.description}\n          trigger={\n            <div className=\"flexrow question-row\">\n              <div>\n                <span className=\"question-index\">{index + 1}</span>\n              </div>\n              <div className=\"question-text f-self-stretch\">\n                {question.title}\n                {question.isRequired && (\n                  <Popup\n                    trigger={<i className=\"question-required\"> *</i>}\n                    content={Translate.string('Rating this question is mandatory')}\n                    position=\"bottom center\"\n                  />\n                )}\n              </div>\n              <div styleName=\"question-field\">\n                <ReviewingQuestion question={question} />\n              </div>\n            </div>\n          }\n        />\n      );\n    });\n  };\n\n  const initialValues = {};\n  if (review) {\n    initialValues.proposed_action = review.proposedAction.name;\n    initialValues.comment = review.comment;\n\n    for (const {value, question} of review.ratings) {\n      if (question.fieldType === 'bool') {\n        initialValues[`question_${question.id}`] = value ? 'yes' : 'no';\n      } else {\n        initialValues[`question_${question.id}`] = value;\n      }\n    }\n  }\n\n  return (\n    <FinalForm onSubmit={onSubmit} subscription={{submitting: true}} initialValues={initialValues}>\n      {fprops => (\n        <Form onSubmit={fprops.handleSubmit} styleName=\"group-review-form\">\n          {!review && (\n            <>\n              <div className=\"form-preface\">\n                <Translate>\n                  Reviewing in{' '}\n                  <Param\n                    name=\"group\"\n                    value={group.title}\n                    wrapper={<div className=\"review-group truncate-text\" />}\n                  />\n                </Translate>\n              </div>\n              {questions.length !== 0 && (\n                <div className=\"titled-rule\">\n                  <Translate>Ratings</Translate>\n                </div>\n              )}\n            </>\n          )}\n          {questions.length !== 0 && <div className=\"review-questions\">{renderQuestions()}</div>}\n          <div className=\"titled-rule\">\n            <Translate>Proposal</Translate>\n          </div>\n          <FinalDropdown\n            name=\"proposed_action\"\n            options={actionOptions}\n            placeholder={Translate.string('Propose an action')}\n            selection\n            required\n          />\n          <FinalTextArea\n            name=\"comment\"\n            placeholder={Translate.string(\n              'You may leave a comment (only visible to reviewers and judges)...'\n            )}\n            nullIfEmpty\n          />\n          <Form.Group>\n            <FinalSubmitButton\n              label={review ? Translate.string('Change review') : Translate.string('Submit review')}\n              disabledUntilChange\n            />\n            <Button onClick={onCancel} disabled={fprops.submitting}>\n              <Translate>Cancel</Translate>\n            </Button>\n          </Form.Group>\n        </Form>\n      )}\n    </FinalForm>\n  );\n}\n\nGroupReviewForm.propTypes = {\n  group: PropTypes.shape({\n    name: PropTypes.oneOf(['content', 'layout']).isRequired,\n    title: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n  }).isRequired,\n  review: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func,\n};\n\nGroupReviewForm.defaultProps = {\n  review: null,\n  onCancel: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React, {useCallback, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Dropdown, Icon} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {unsortedArraysEqual} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {createComment as createCommentAction, createReview, updateReview} from '../actions';\nimport {canCommentPaper, canReviewPaper, getPaperDetails, getCurrentUser} from '../selectors';\n\nimport CommentForm from './CommentForm';\nimport GroupReviewForm from './GroupReviewForm';\n\nimport './PaperReviewForm.module.scss';\n\nexport default function PaperReviewForm() {\n  const {\n    event: {id: eventId},\n    contribution: {id: contributionId},\n    lastRevision,\n    isInFinalState,\n  } = useSelector(getPaperDetails);\n  const {reviewerData} = lastRevision;\n  const [commentFormExpanded, setCommentFormExpanded] = useState(false);\n  const [reviewGroup, setReviewGroup] = useState(null);\n  const user = useSelector(getCurrentUser);\n  const canComment = useSelector(canCommentPaper);\n  const canReview = useSelector(canReviewPaper);\n  const dispatch = useDispatch();\n\n  const reviewGroups = reviewerData.groups.map(group => group.name);\n  const reviewedGroups = reviewerData.reviewedGroups.map(group => group.name);\n\n  const createComment = useCallback(\n    async formData => {\n      const rv = await dispatch(createCommentAction(eventId, contributionId, formData));\n      if (rv.error) {\n        return rv.error;\n      }\n    },\n    [dispatch, eventId, contributionId]\n  );\n\n  const renderReviewTrigger = () => {\n    return (\n      <div className=\"review-trigger flexrow\">\n        <span className=\"comment-or-review\">\n          <Translate>or</Translate>\n        </span>\n        {reviewGroups.length === 1 ? (\n          <Button onClick={() => setReviewGroup(reviewGroups[0])}>\n            {reviewGroups[0] in reviewerData.reviews ? (\n              <Translate>Change review</Translate>\n            ) : (\n              <Translate>Review</Translate>\n            )}\n          </Button>\n        ) : (\n          <Dropdown\n            text={\n              unsortedArraysEqual(reviewGroups, reviewedGroups)\n                ? Translate.string('Change reviews')\n                : Translate.string('Review')\n            }\n            button\n          >\n            <Dropdown.Menu>\n              {reviewerData.groups.map(group => (\n                <Dropdown.Item key={group.name} onClick={() => setReviewGroup(group.name)}>\n                  <span>{group.title}</span>\n                  {group.name in reviewerData.reviews && <Icon name=\"checkmark\" floated=\"right\" />}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        )}\n      </div>\n    );\n  };\n\n  const renderForm = () => {\n    if (reviewGroup) {\n      const group = reviewerData.groups.find(item => item.name === reviewGroup);\n      const review = reviewerData.reviews[reviewGroup] || null;\n\n      return (\n        <GroupReviewForm\n          review={review}\n          group={group}\n          onCancel={() => setReviewGroup(null)}\n          onSubmit={async formData => {\n            const action = review\n              ? updateReview(eventId, contributionId, lastRevision.id, review.id, formData)\n              : createReview(eventId, contributionId, group.name, formData);\n\n            const rv = await dispatch(action);\n            if (rv.error) {\n              return rv.error;\n            }\n            setReviewGroup(null);\n          }}\n        />\n      );\n    } else if (canComment) {\n      return (\n        <div className=\"flexrow\">\n          <CommentForm onSubmit={createComment} onToggleExpand={setCommentFormExpanded} />\n          {/*\n            Show the \"Review\" button only if\n            1. CommentForm is not focused\n            2. There is at least one review type\n            3. The paper is not in the final state\n            4. The current user can review the paper\n          */}\n          {!commentFormExpanded &&\n            reviewGroups.length > 0 &&\n            !isInFinalState &&\n            canReview &&\n            renderReviewTrigger()}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"i-timeline-item review-timeline-input\" styleName=\"review-input\">\n      <UserAvatar user={user} />\n      <div className=\"i-timeline-item-box footer-only header-indicator-left\">\n        <div className=\"i-box-footer\" style={{overflow: 'visible'}}>\n          {renderForm()}\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Confirm, Icon, Popup} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {resetPaperJudgment} from '../actions';\nimport {PaperState} from '../models';\nimport {getPaperDetails, isPaperStateResetInProgress} from '../selectors';\n\nexport default function RevisionJudgment({revision}) {\n  const {state, judge, isLastRevision, judgmentCommentHtml, judgmentDt} = revision;\n  const {event, contribution, canJudge} = useSelector(getPaperDetails);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const isResetInProgress = useSelector(isPaperStateResetInProgress);\n  const dispatch = useDispatch();\n\n  if (state === PaperState.submitted) {\n    return null;\n  }\n\n  return (\n    <div className=\"i-timeline-item\">\n      <UserAvatar user={judge} />\n      <div className=\"i-timeline-item-box header-indicator-left\">\n        <div className=\"i-box-header flexrow\">\n          <div className=\"f-self-stretch\">\n            {state === PaperState.accepted && (\n              <Translate>\n                <Param name=\"judgeName\" value={judge.fullName} wrapper={<strong />} /> accepted this\n                paper.\n              </Translate>\n            )}\n            {state === PaperState.rejected && (\n              <Translate>\n                <Param name=\"judgeName\" value={judge.fullName} wrapper={<strong />} /> rejected this\n                paper.\n              </Translate>\n            )}\n            {state === PaperState.to_be_corrected && (\n              <Translate>\n                <Param name=\"judgeName\" value={judge.fullName} wrapper={<strong />} /> asked for\n                changes.\n              </Translate>\n            )}{' '}\n            <time dateTime={serializeDate(judgmentDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}>\n              {serializeDate(judgmentDt, 'LL')}\n            </time>\n          </div>\n          {canJudge && isLastRevision && (\n            <>\n              <div>\n                <Popup\n                  position=\"bottom center\"\n                  offset={[0, 5]}\n                  content={Translate.string('Reset judgment')}\n                  trigger={\n                    <Icon link className=\"undo\" color=\"red\" onClick={() => setConfirmOpen(true)} />\n                  }\n                />\n              </div>\n              <Confirm\n                size=\"tiny\"\n                header={Translate.string('Confirm the operation')}\n                open={confirmOpen}\n                closeOnDimmerClick={!isResetInProgress}\n                closeOnEscape={!isResetInProgress}\n                content={Translate.string(\n                  'Do you really want to reset the judgment? This operation is irreversible.'\n                )}\n                onCancel={() => setConfirmOpen(false)}\n                onConfirm={async () => {\n                  const rv = await dispatch(resetPaperJudgment(event.id, contribution.id));\n                  if (!rv.error) {\n                    setConfirmOpen(false);\n                  }\n                }}\n                cancelButton={\n                  <Button content={Translate.string('Cancel')} disabled={isResetInProgress} />\n                }\n                confirmButton={\n                  <Button\n                    content={Translate.string('Reset judgment')}\n                    disabled={isResetInProgress}\n                    loading={isResetInProgress}\n                    negative\n                  />\n                }\n                closeIcon={!isResetInProgress}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"i-box-content\">\n          {state === PaperState.accepted && <Translate>The paper was accepted.</Translate>}\n          {state === PaperState.rejected && <Translate>The paper was rejected.</Translate>}\n          {state === PaperState.to_be_corrected && (\n            <Translate>The paper requires changes.</Translate>\n          )}\n          {judgmentCommentHtml && (\n            <>\n              <div className=\"titled-rule\">\n                <Translate>Comment</Translate>\n              </div>\n              <div dangerouslySetInnerHTML={{__html: judgmentCommentHtml}} />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRevisionJudgment.propTypes = {\n  revision: PropTypes.object.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Confirm, Popup} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {getChangedValues} from 'indico/react/forms';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {deleteComment, updateComment as updateCommentAction} from '../actions';\nimport {CommentVisibility} from '../models';\nimport {getPaperContribution, getPaperEvent, isDeletingComment} from '../selectors';\n\nimport CommentForm from './CommentForm';\n\nexport default function RevisionComment({comment, revision}) {\n  const dispatch = useDispatch();\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const {id: eventId} = useSelector(getPaperEvent);\n  const {id: contributionId} = useSelector(getPaperContribution);\n  const isDeletingCommentInProgress = useSelector(isDeletingComment);\n\n  const updateComment = async (formData, form) => {\n    const rv = await dispatch(\n      updateCommentAction(\n        eventId,\n        contributionId,\n        revision.id,\n        comment.id,\n        getChangedValues(formData, form)\n      )\n    );\n    if (rv.error) {\n      return rv.error;\n    }\n  };\n\n  return (\n    <div className=\"i-timeline-item\">\n      <UserAvatar user={comment.user} />\n      <div className=\"flexrow i-timeline-item-content\">\n        <div className=\"i-timeline-item-box header-indicator-left\">\n          <div className=\"i-box-header flexrow\" style={{display: isEditing ? 'none' : 'flex'}}>\n            <div className=\"f-self-stretch\">\n              <Translate>\n                <Param name=\"userName\" value={comment.user.fullName} wrapper={<strong />} /> left a\n                comment\n              </Translate>{' '}\n              {comment.visibility.name !== CommentVisibility.contributors && (\n                <Popup\n                  trigger={\n                    <i\n                      className={`review-comment-visibility ${comment.visibility.name} icon-shield`}\n                    />\n                  }\n                  content={comment.visibility.title}\n                  position=\"bottom center\"\n                />\n              )}{' '}\n              <time\n                dateTime={serializeDate(comment.createdDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}\n              >\n                {serializeDate(comment.createdDt, 'LL')}\n              </time>\n              {comment.modifiedDt && (\n                <Popup\n                  trigger={\n                    <span className=\"review-comment-edited\">\n                      {' '}\n                      · <Translate>edited</Translate>\n                    </span>\n                  }\n                  content={Translate.string('On {modificationDate} by {modifiedBy}', {\n                    modificationDate: serializeDate(comment.modifiedDt, 'LL'),\n                    modifiedBy: comment.modifiedBy.fullName,\n                  })}\n                  position=\"bottom center\"\n                />\n              )}\n            </div>\n            {comment.canEdit && (\n              <div className=\"review-comment-action hide-if-locked\">\n                <Popup\n                  position=\"bottom center\"\n                  content={Translate.string('Edit comment')}\n                  trigger={\n                    <a className=\"i-link icon-edit\" onClick={() => setIsEditing(!isEditing)} />\n                  }\n                />{' '}\n                <Popup\n                  position=\"bottom center\"\n                  content={Translate.string('Remove comment')}\n                  trigger={<a onClick={() => setConfirmOpen(true)} className=\"i-link icon-cross\" />}\n                />\n                <Confirm\n                  size=\"tiny\"\n                  header={Translate.string('Remove comment')}\n                  open={confirmOpen}\n                  content={Translate.string('Are you sure you want to remove this comment?')}\n                  onCancel={() => setConfirmOpen(false)}\n                  closeOnDimmerClick={!isDeletingCommentInProgress}\n                  closeOnEscape={!isDeletingCommentInProgress}\n                  onConfirm={async () => {\n                    const rv = await dispatch(\n                      deleteComment(eventId, contributionId, revision.id, comment.id)\n                    );\n                    if (!rv.error) {\n                      setConfirmOpen(false);\n                    }\n                  }}\n                  cancelButton={\n                    <Button\n                      content={Translate.string('Cancel')}\n                      disabled={isDeletingCommentInProgress}\n                    />\n                  }\n                  confirmButton={\n                    <Button\n                      content={Translate.string('Remove comment')}\n                      loading={isDeletingCommentInProgress}\n                      disabled={isDeletingCommentInProgress}\n                      negative\n                    />\n                  }\n                  closeIcon={!isDeletingCommentInProgress}\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"i-box-content js-form-container\">\n            {isEditing ? (\n              <CommentForm\n                onSubmit={updateComment}\n                onToggleExpand={visible => {\n                  if (!visible) {\n                    setIsEditing(false);\n                  }\n                }}\n                comment={comment}\n                expanded\n              />\n            ) : (\n              <div className=\"markdown-text\" dangerouslySetInnerHTML={{__html: comment.html}} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRevisionComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  revision: PropTypes.object.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Popup, Transition} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {ReviewRating} from 'indico/react/components';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {updateReview as updateReviewAction} from '../actions';\nimport {getPaperDetails} from '../selectors';\n\nimport GroupReviewForm from './GroupReviewForm';\n\nexport default function RevisionReview({review, revision}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [showRatings, setShowRatings] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    contribution: {id: contributionId},\n    event: {\n      id: eventId,\n      cfp: {\n        ratingRange: [minScore, maxScore],\n      },\n    },\n  } = useSelector(getPaperDetails);\n  const wrapper = (\n    <span className={`bold underline semantic-text ${review.proposedAction.cssClass}`} />\n  );\n  const renderQuestionAnswer = rating => {\n    if (rating.question.fieldType === 'bool') {\n      if (rating.value !== null) {\n        return rating.value ? Translate.string('Yes') : Translate.string('No');\n      }\n      return null;\n    } else if (rating.question.fieldType === 'rating') {\n      return <ReviewRating min={minScore} max={maxScore} value={rating.value} disabled />;\n    } else {\n      return rating.value;\n    }\n  };\n  const updateReview = async formData => {\n    const rv = await dispatch(\n      updateReviewAction(eventId, contributionId, revision.id, review.id, formData)\n    );\n    if (rv.error) {\n      return rv.error;\n    }\n    setIsEditing(false);\n  };\n\n  return (\n    <div id={`proposal-review-${review.id}`} className=\"i-timeline-item\">\n      <UserAvatar user={review.user} />\n      <div className=\"flexrow i-timeline-item-content\">\n        <div className=\"i-timeline-item-metadata\">\n          <div className=\"f-self-stretch\">\n            <Translate>\n              <Param name=\"reviewerName\" value={review.user.fullName} wrapper={<strong />} /> left a\n              review\n            </Translate>{' '}\n            <Popup\n              trigger={\n                <i className={`review-comment-visibility ${review.visibility.name} icon-shield`} />\n              }\n              content={review.visibility.title}\n              position=\"bottom center\"\n            />{' '}\n            <time\n              dateTime={serializeDate(review.createdDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}\n            >\n              {serializeDate(review.createdDt, 'LL')}\n            </time>\n            {review.modifiedDt && (\n              <>\n                {' '}\n                ·{' '}\n                <Popup\n                  trigger={\n                    <span className=\"review-comment-edited\">\n                      <Translate>edited</Translate>\n                    </span>\n                  }\n                  content={serializeDate(review.modifiedDt, 'LL')}\n                  position=\"bottom center\"\n                />\n              </>\n            )}\n          </div>\n          <div className=\"review-group truncate-text\">\n            <span>{review.group.title}</span>\n          </div>\n        </div>\n        <div\n          data-no-comment={!review.comment}\n          className={`i-timeline-item-box header-indicator-top ${\n            !review.comment && !showRatings && !isEditing ? 'header-only' : ''\n          }`}\n        >\n          {!isEditing && (\n            <div className=\"i-box-header flexrow\">\n              <div className=\"review-badges\">\n                {review.proposedAction.name === 'accept' && (\n                  <Translate>\n                    Proposed to{' '}\n                    <Param name=\"actionName\" wrapper={wrapper}>\n                      accept\n                    </Param>\n                  </Translate>\n                )}\n                {review.proposedAction.name === 'reject' && (\n                  <Translate>\n                    Proposed to{' '}\n                    <Param name=\"actionName\" wrapper={wrapper}>\n                      reject\n                    </Param>\n                  </Translate>\n                )}\n                {review.proposedAction.name === 'to_be_corrected' && (\n                  <Translate>\n                    Proposed to{' '}\n                    <Param name=\"actionName\" wrapper={wrapper}>\n                      correct\n                    </Param>\n                  </Translate>\n                )}{' '}\n                {review.ratings.length > 0 && (\n                  <>\n                    {review.score !== null && (\n                      <Translate>\n                        · score{' '}\n                        <Param\n                          name=\"prettyScore\"\n                          value={review.score}\n                          wrapper={\n                            <span\n                              className=\"highlight bold semantic-text\"\n                              title={Translate.string('Score: {score} / {maxScore}', {\n                                score: review.score,\n                                maxScore,\n                              })}\n                            />\n                          }\n                        />\n                      </Translate>\n                    )}\n                    {' ('}\n                    <a className=\"toggle-link\" onClick={() => setShowRatings(!showRatings)}>\n                      <span>\n                        {showRatings ? (\n                          <Translate>hide ratings</Translate>\n                        ) : (\n                          <Translate>show ratings</Translate>\n                        )}\n                      </span>\n                    </a>\n                    )\n                  </>\n                )}\n              </div>\n              {review.canEdit && (\n                <div className=\"review-comment-actions\">\n                  <Popup\n                    position=\"right center\"\n                    content={Translate.string('Edit review')}\n                    trigger={<a className=\"i-link icon-edit\" onClick={() => setIsEditing(true)} />}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n          <div className=\"i-box-content\">\n            {isEditing ? (\n              <GroupReviewForm\n                group={review.group}\n                review={review}\n                onSubmit={updateReview}\n                onCancel={() => setIsEditing(false)}\n              />\n            ) : (\n              <>\n                <Transition\n                  visible={review.ratings.length !== 0 && showRatings}\n                  animation=\"slide down\"\n                  duration={50}\n                >\n                  <div className=\"ratings-details\">\n                    <ul className=\"review-questions\">\n                      {review.ratings.map((rating, index) => (\n                        <li key={`rating-${rating.question.id}-${rating.id}`} className=\"flexrow\">\n                          <div>\n                            <span className=\"question-index\">{index + 1}</span>\n                          </div>\n                          <div className=\"question-text f-self-stretch\">\n                            {rating.question.title}\n                          </div>\n                          <div>{renderQuestionAnswer(rating)}</div>\n                        </li>\n                      ))}\n                    </ul>\n                    {review.comment && (\n                      <div className=\"titled-rule\">\n                        <Translate>Comment</Translate>\n                      </div>\n                    )}\n                  </div>\n                </Transition>\n                {review.comment && (\n                  <div\n                    className=\"markdown-text\"\n                    dangerouslySetInnerHTML={{__html: review.commentHtml}}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRevisionReview.propTypes = {\n  review: PropTypes.object.isRequired,\n  revision: PropTypes.object.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport RevisionComment from './RevisionComment';\nimport RevisionJudgment from './RevisionJudgment';\nimport RevisionReview from './RevisionReview';\n\nfunction renderTimelineItem(item, revision) {\n  if (item.timelineItemType === 'judgment') {\n    return <RevisionJudgment key={`${item.createdDt}-${revision.id}`} revision={revision} />;\n  } else if (item.timelineItemType === 'comment') {\n    return <RevisionComment key={item.id} revision={revision} comment={item} />;\n  } else if (item.timelineItemType === 'review') {\n    return <RevisionReview key={item.id} review={item} revision={revision} />;\n  }\n}\n\nexport default function RevisionTimeline({revision}) {\n  return revision.timeline.map(item => renderTimelineItem(item, revision));\n}\n\nRevisionTimeline.propTypes = {\n  revision: PropTypes.object.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport submitRevisionURL from 'indico-url:papers.api_submit_revision';\n\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {FileSubmission} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nimport {fetchPaperDetails} from '../actions';\nimport {PaperState} from '../models';\nimport {getCurrentUser, getPaperDetails} from '../selectors';\n\nexport default function SubmitRevision() {\n  const {\n    state: {name: stateName},\n    event: {id: eventId},\n    contribution: {id: contributionId},\n  } = useSelector(getPaperDetails);\n  const [files, setFiles] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const currentUser = useSelector(getCurrentUser);\n  const dispatch = useDispatch();\n\n  if (stateName !== PaperState.to_be_corrected) {\n    return null;\n  }\n\n  const submitFiles = async () => {\n    setSubmitting(true);\n\n    const headers = {'content-type': 'multipart/form-data'};\n    const formData = new FormData();\n\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n\n    try {\n      await indicoAxios.post(\n        submitRevisionURL({event_id: eventId, contrib_id: contributionId}),\n        formData,\n        {headers}\n      );\n    } catch (e) {\n      handleAxiosError(e);\n      return;\n    } finally {\n      setSubmitting(false);\n    }\n\n    setFiles([]);\n    dispatch(fetchPaperDetails(eventId, contributionId));\n  };\n\n  return (\n    <div\n      className=\"i-timeline-item\"\n      id=\"proposal-revision-submission-box\"\n      style={{position: 'relative', zIndex: -1}}\n    >\n      <UserAvatar user={currentUser} />\n      <div className=\"i-timeline-item-box header-indicator-left\">\n        <div className=\"i-box-header flexrow\">\n          <Translate>Upload corrected revision</Translate>\n        </div>\n        <div className=\"i-box-content\">\n          <FileSubmission onChange={newFiles => setFiles(newFiles)} disabled={submitting} />\n          <Button\n            onClick={submitFiles}\n            content={Translate.string('Submit new revision')}\n            style={{marginTop: 10}}\n            disabled={files.length === 0 || submitting}\n            loading={submitting}\n            primary\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {Transition} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {canCommentPaper, canReviewPaper, canSubmitNewRevision, getPaperDetails} from '../selectors';\n\nimport PaperReviewForm from './PaperReviewForm';\nimport RevisionJudgment from './RevisionJudgment';\nimport RevisionTimeline from './RevisionTimeline';\nimport SubmitRevision from './SubmitRevision';\n\nexport default function TimelineItem({block}) {\n  const {submitter, isLastRevision, number, submittedDt, files, timeline} = block;\n  const submitterName = submitter.isSystem ? Translate.string('A user') : submitter.fullName;\n  const canComment = useSelector(canCommentPaper);\n  const canReview = useSelector(canReviewPaper);\n  const canSubmitRevision = useSelector(canSubmitNewRevision);\n  const paper = useSelector(getPaperDetails);\n  const [visible, setVisible] = useState(isLastRevision);\n\n  return (\n    <>\n      <div className=\"i-timeline\">\n        <div className=\"i-timeline-item\">\n          <UserAvatar user={submitter} />\n          <div\n            className={`i-timeline-item-box header-indicator-left ${!visible ? 'header-only' : ''}`}\n            id={`block-info-${block.id}`}\n          >\n            <div className=\"i-box-header flexrow\">\n              <div className=\"f-self-stretch\">\n                <Translate>\n                  <Param name=\"submitterName\" value={submitterName} wrapper={<strong />} />{' '}\n                  submitted paper revision <Param name=\"revisionNumber\" value={`#${number}`} />\n                </Translate>{' '}\n                <time\n                  dateTime={serializeDate(submittedDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}\n                >\n                  {serializeDate(submittedDt, 'LL')}\n                </time>\n              </div>\n              {!isLastRevision && (\n                <a className=\"block-info-link i-link\" onClick={() => setVisible(!visible)}>\n                  {visible ? (\n                    <Translate>Hide old revision</Translate>\n                  ) : (\n                    <Translate>Show old revision</Translate>\n                  )}\n                </a>\n              )}\n            </div>\n            <Transition animation=\"slide down\" duration={50} visible={visible || isLastRevision}>\n              <div className=\"i-box-content submission-info\">\n                <ul className=\"file-list\">\n                  {_.sortBy(files, 'filename').map(file => (\n                    <li className=\"truncate-text\" key={file.id}>\n                      <a href={file.downloadURL} className={`attachment ${file.icon}`}>\n                        {' '}\n                        <span className=\"title\">{file.filename}</span>\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </Transition>\n          </div>\n        </div>\n      </div>\n      <Transition animation=\"slide down\" duration={50} visible={visible || isLastRevision}>\n        <div className=\"i-timeline\" style={{zIndex: isLastRevision ? 1 : 0}}>\n          {(timeline.length > 0 || (!paper.isInFinalState && canReview) || canComment) && (\n            <div className=\"i-timeline with-line\">\n              <div className=\"i-timeline-connect-up\" />\n              <RevisionTimeline revision={block} />\n              {isLastRevision && (canComment || canReview) && <PaperReviewForm />}\n            </div>\n          )}\n          {isLastRevision && (\n            <>\n              <div className=\"i-timeline to-separator-wrapper\">\n                <div className=\"i-timeline-connect-down to-separator\" />\n              </div>\n              <div className=\"i-timeline-separator\" />\n              {canSubmitRevision && <SubmitRevision />}\n              {paper.isInFinalState && <RevisionJudgment revision={block} />}\n            </>\n          )}\n        </div>\n      </Transition>\n    </>\n  );\n}\n\nTimelineItem.propTypes = {\n  block: PropTypes.object.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport editableDetailsURL from 'indico-url:event_editing.api_editable';\nimport fileTypesURL from 'indico-url:event_editing.api_file_types';\nimport editableURL from 'indico-url:event_editing.editable';\n\nimport PropTypes from 'prop-types';\nimport React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Icon, Loader, Step} from 'semantic-ui-react';\n\nimport EditableSubmissionButton from 'indico/modules/events/editing/editing/EditableSubmissionButton';\nimport {\n  fileTypePropTypes,\n  uploadablePropTypes,\n} from 'indico/modules/events/editing/editing/timeline/FileManager/util';\nimport {EditableType} from 'indico/modules/events/editing/models';\nimport TimelineContent from 'indico/modules/events/reviewing/components/TimelineContent';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate, Param} from 'indico/react/i18n';\n\nimport {fetchPaperDetails} from '../actions';\nimport {PaperState} from '../models';\nimport {getPaperDetails, isFetchingInitialPaperDetails} from '../selectors';\n\nimport PaperContent from './PaperContent';\nimport PaperDecisionForm from './PaperDecisionForm';\nimport TimelineHeader from './TimelineHeader';\nimport TimelineItem from './TimelineItem';\n\nexport default function Paper({eventId, contributionId}) {\n  const dispatch = useDispatch();\n  const paper = useSelector(getPaperDetails);\n  const isInitialPaperDetailsLoading = useSelector(isFetchingInitialPaperDetails);\n  const {data: fileTypes, loading: isFileTypesLoading} = useIndicoAxios(\n    fileTypesURL({event_id: eventId, type: EditableType.paper}),\n    {\n      unhandledErrors: [404], // if editing module is disabled\n      camelize: true,\n    }\n  );\n  const {data: editable, loading: isEditableLoading} = useIndicoAxios(\n    editableDetailsURL({\n      event_id: eventId,\n      contrib_id: contributionId,\n      type: EditableType.paper,\n    }),\n    {\n      unhandledErrors: [404, 403], // if there is no editable yet (404) or viewed by a paper reviewer (403)\n      camelize: true,\n    }\n  );\n\n  useEffect(() => {\n    dispatch(fetchPaperDetails(eventId, contributionId));\n  }, [dispatch, contributionId, eventId]);\n\n  if (isInitialPaperDetailsLoading || isFileTypesLoading || isEditableLoading) {\n    return <Loader active />;\n  } else if (!paper) {\n    return null;\n  }\n\n  const {\n    contribution,\n    lastRevision: {submitter, files},\n    revisions,\n    state,\n    isInFinalState,\n    canSubmitProceedings,\n    editingEnabled,\n    editingOpen,\n  } = paper;\n\n  const isEditingEnabled = editingEnabled && editingOpen && !!fileTypes;\n\n  return (\n    <>\n      <TimelineHeader\n        contribution={contribution}\n        state={state}\n        submitter={submitter}\n        eventId={eventId}\n      >\n        <PaperContent />\n      </TimelineHeader>\n      {canSubmitProceedings && isEditingEnabled && (\n        <PaperSteps\n          isInFinalState={isInFinalState}\n          isRejected={state.name === PaperState.rejected}\n          hasEditable={!!editable}\n          fileTypes={fileTypes}\n          uploadableFiles={files}\n          editableURL={editableURL({\n            event_id: eventId,\n            contrib_id: contributionId,\n            type: EditableType.paper,\n          })}\n        />\n      )}\n      <TimelineContent itemComponent={TimelineItem} blocks={revisions} />\n      <PaperDecisionForm />\n    </>\n  );\n}\n\nPaper.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  contributionId: PropTypes.number.isRequired,\n};\n\nfunction PaperSteps({\n  isInFinalState,\n  isRejected,\n  hasEditable,\n  // eslint-disable-next-line no-shadow\n  editableURL,\n  fileTypes,\n  uploadableFiles,\n}) {\n  const {event, contribution} = useSelector(getPaperDetails);\n\n  return (\n    <Step.Group fluid>\n      <Step active={!isInFinalState} completed={isInFinalState}>\n        <Icon name=\"copy outline\" />\n        <Step.Content>\n          <Step.Title>\n            <Translate>Peer Reviewing</Translate>\n          </Step.Title>\n          <Step.Description style={{marginBottom: 0}}>\n            {isInFinalState ? (\n              <Translate>The paper was reviewed</Translate>\n            ) : (\n              <Translate>Your paper is under review</Translate>\n            )}\n          </Step.Description>\n        </Step.Content>\n      </Step>\n      <Step active={isInFinalState} completed={hasEditable} disabled={isRejected}>\n        <Icon name=\"pencil alternate\" />\n        <Step.Content>\n          <Step.Title>\n            {hasEditable || !isInFinalState || isRejected ? (\n              <Translate>Submit for Editing</Translate>\n            ) : (\n              <EditableSubmissionButton\n                eventId={event.id}\n                contributionId={contribution.id}\n                contributionCode={contribution.code}\n                fileTypes={{[EditableType.paper]: fileTypes}}\n                uploadableFiles={uploadableFiles.map(({id, ...rest}) => ({...rest, paperId: id}))}\n                text={Translate.string('Submit for editing')}\n              />\n            )}\n          </Step.Title>\n          {hasEditable && (\n            <Step.Description style={{marginBottom: 0}}>\n              <Translate>\n                The paper was{' '}\n                <Param name=\"url\" wrapper={<a href={editableURL} />}>\n                  submitted\n                </Param>{' '}\n                for editing\n              </Translate>\n            </Step.Description>\n          )}\n        </Step.Content>\n      </Step>\n    </Step.Group>\n  );\n}\n\nPaperSteps.propTypes = {\n  isInFinalState: PropTypes.bool.isRequired,\n  isRejected: PropTypes.bool.isRequired,\n  hasEditable: PropTypes.bool.isRequired,\n  editableURL: PropTypes.string,\n  fileTypes: PropTypes.arrayOf(PropTypes.shape(fileTypePropTypes)).isRequired,\n  uploadableFiles: PropTypes.arrayOf(PropTypes.shape(uploadablePropTypes)),\n};\n\nPaperSteps.defaultProps = {\n  uploadableFiles: [],\n  editableURL: undefined,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {combineReducers} from 'redux';\n\nimport {camelizeKeys} from 'indico/utils/case';\nimport {requestReducer} from 'indico/utils/redux';\n\nimport * as paperActions from './actions';\n\nexport default combineReducers({\n  requests: combineReducers({\n    details: requestReducer(\n      paperActions.FETCH_PAPER_DETAILS_REQUEST,\n      paperActions.FETCH_PAPER_DETAILS_SUCCESS,\n      paperActions.FETCH_PAPER_DETAILS_ERROR\n    ),\n    resetState: requestReducer(\n      paperActions.RESET_PAPER_JUDGMENT_REQUEST,\n      paperActions.RESET_PAPER_JUDGMENT_SUCCESS,\n      paperActions.RESET_PAPER_JUDGMENT_ERROR\n    ),\n    deleteComment: requestReducer(\n      paperActions.DELETE_COMMENT_REQUEST,\n      paperActions.DELETE_COMMENT_SUCCESS,\n      paperActions.DELETE_COMMENT_ERROR\n    ),\n  }),\n  details: (state = null, action) => {\n    switch (action.type) {\n      case paperActions.FETCH_PAPER_DETAILS_SUCCESS:\n        return camelizeKeys(action.data);\n      default:\n        return state;\n    }\n  },\n});\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global setupListGenerator:false, setupTableSorter:false, setupSearchBox:false, enableIfChecked:false */\n\nimport 'indico/modules/events/reviews';\n\nimport setupReactPaperTimeline from './setup';\n\n(function(global) {\n  global.setupPaperAssignmentList = function setupPaperAssignmentList() {\n    const filterConfig = {\n      itemHandle: 'tr',\n      listItems: '#assignment-list tbody tr',\n      term: '#search-input',\n      state: '#filtering-state',\n      placeholder: '#filter-placeholder',\n    };\n\n    setupTableSorter('#assignment-list .tablesorter');\n    enableIfChecked('#assignment-list', 'input[name=contribution_id]', '.js-enable-if-checked');\n    setupListGenerator(filterConfig);\n\n    $('#assignment-list .tablesorter').on(\n      'mouseover',\n      '.title-column .vertical-aligner, .track-column .vertical-aligner',\n      function() {\n        const title = $(this);\n        // Show a qtip if the text is ellipsized\n        if (this.offsetWidth < this.scrollWidth) {\n          title.qtip({hide: 'mouseout', content: title.text(), overwrite: false}).qtip('show');\n        }\n      }\n    );\n  };\n\n  global.setupReviewingAreaList = function setupReviewingAreaList(options) {\n    options = $.extend(\n      {\n        hasPapers: false,\n      },\n      options\n    );\n\n    if (options.hasPapers) {\n      let filterConfig = {\n        itemHandle: 'div.contribution-row',\n      };\n      if (options.list === 'to-review') {\n        filterConfig = $.extend(\n          {\n            listItems: '#to-review-list div.contribution-row',\n            term: '#search-input-to-review',\n            state: '#filtering-state-to-review',\n            placeholder: '#filter-placeholder-to-review',\n          },\n          filterConfig\n        );\n      } else {\n        filterConfig = $.extend(\n          {\n            listItems: '#reviewed-list div.contribution-row',\n            term: '#search-input-reviewed',\n            state: '#filtering-state-reviewed',\n            placeholder: '#filter-placeholder-reviewed',\n          },\n          filterConfig\n        );\n      }\n      const applySearchFilters = setupSearchBox(filterConfig);\n      applySearchFilters();\n    }\n  };\n\n  global.setupCallForPapersPage = function setupCallForPapersPage(options) {\n    if (options.hasPapers) {\n      const filterConfig = {\n        itemHandle: 'div.contribution-row',\n        listItems: 'div.paper-contribution-list div.contribution-row',\n        term: '#search-input',\n        state: '#filtering-state',\n        placeholder: '#filter-placeholder',\n      };\n\n      const applySearchFilters = setupSearchBox(filterConfig);\n      applySearchFilters();\n    }\n  };\n\n  global.setupConflictsList = function setupConflictsList() {\n    const $conflictListTooltip = $('.js-assign-dialog .name-column .affiliation > span');\n    $conflictListTooltip.qbubble({\n      show: {\n        event: 'mouseover',\n      },\n      hide: {\n        fixed: true,\n        delay: 100,\n        event: 'mouseleave',\n      },\n      position: {\n        my: 'left center',\n        at: 'right center',\n      },\n      content: {\n        text() {\n          const $this = $(this);\n          const html = $('<div>');\n          const title = $('<strong>', {text: $(this).data('title')});\n          html.append(title);\n          if ($this.is('.js-count-label')) {\n            const list = $('<ul>', {class: 'qbubble-item-list'});\n            const items = Object.values($this.data('items'));\n            $.each(items, function(i, val) {\n              const item = $('<li>');\n              item.append(\n                $('<a>', {text: val[0], href: val[1]})\n                  .attr('target', '_blank')\n                  .attr('rel', 'noopener noreferrer')\n              );\n              list.append(item);\n            });\n            html.append(list);\n          }\n          return html;\n        },\n      },\n    });\n  };\n})(window);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  setupReactPaperTimeline();\n});\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport createReduxStore from 'indico/utils/redux';\n\nimport Paper from './components/Paper';\nimport paperReducers from './reducers';\n\nexport default () => {\n  const rootElement = document.querySelector('.paper-timeline');\n  if (!rootElement) {\n    return;\n  }\n\n  const eventId = parseInt(rootElement.dataset.eventId, 10);\n  const contributionId = parseInt(rootElement.dataset.contribId, 10);\n  const initialData = {\n    staticData: {\n      user: {\n        fullName: Indico.User.fullName,\n        avatarURL: Indico.User.avatarURL,\n      },\n    },\n  };\n  const store = createReduxStore('paper-timeline', {paper: paperReducers}, initialData);\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <Paper eventId={eventId} contributionId={contributionId} />\n    </Provider>,\n    rootElement\n  );\n};\n"],"names":["commentActionsURL","_buildFlaskURL","bind","endpoint","rules","args","converters","comment_id","contrib_id","event_id","revision_id","defaults","trace","data","isDynamic","createCommentURL","createReviewURL","review_type","judgePaperURL","paperInfoURL","resetPaperStateURL","updateReviewURL","review_id","FETCH_PAPER_DETAILS_REQUEST","FETCH_PAPER_DETAILS_SUCCESS","FETCH_PAPER_DETAILS_ERROR","RESET_PAPER_JUDGMENT_REQUEST","RESET_PAPER_JUDGMENT_SUCCESS","RESET_PAPER_JUDGMENT_ERROR","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_ERROR","fetchPaperDetails","eventId","contributionId","ajaxAction","indicoAxios","get","deleteComment","revisionId","commentId","params","delete","_objectSpread","updateReview","reviewId","reviewData","submitFormAction","post","PaperState","accepted","rejected","submitted","to_be_corrected","CommentVisibility","judges","reviewers","contributors","isFetchingInitialPaperDetails","state","paper","requests","details","RequestState","STARTED","isPaperStateResetInProgress","resetState","isDeletingComment","isEventLocked","event","isLocked","getCurrentUser","staticData","user","getPaperDetails","getPaperEvent","getPaperContribution","contribution","getReviewingQuestions","createSelector","_ref","cfp","layout","layoutReviewQuestions","content","contentReviewQuestions","canJudgePaper","_ref2","_ref3","isInFinalState","canJudge","canReviewPaper","_ref4","_ref5","canReview","canSubmitNewRevision","_ref6","_ref7","canSubmitProceedings","canManage","name","stateName","canCommentPaper","_ref8","_ref9","canComment","PaperFiles","fullWidth","files","React","className","map","file","key","id","href","downloadURL","icon","filename","propTypes","PropTypes","isRequired","defaultProps","PaperMetadata","lastRevision","submittedDt","submitter","useSelector","date","dateTime","serializeDate","moment","DATETIME_LOCAL_SECONDS","Translate","Param","value","fullName","PaperContent","spotlightFile","onlySpotlightFile","length","filter","PaperDecisionForm","dispatch","useDispatch","currentUser","submitPaperJudgment","useCallback","async","formData","form","rv","judgmentData","judgePaper","error","setTimeout","reset","actionOptions","text","string","UserAvatar","FinalForm","onSubmit","initialValues","action","comment","subscription","fprops","Form","handleSubmit","FinalDropdown","options","Object","values","selection","required","FinalTextArea","placeholder","FinalSubmitButton","label","disabledUntilChange","contributionDisplayURL","TimelineHeader","children","MathJax","title","friendlyId","code","cssClass","wrapper","CommentForm","onToggleExpand","expanded","commentFormVisible","setCommentFormVisible","useState","InputComponent","FinalInput","inputProps","autoFocus","onFocus","visibilityOptions","visibility","keys","submitting","_extends","Group","style","marginBottom","inline","Button","disabled","onClick","ReviewingQuestion","question","fieldType","fieldData","ratingRange","minScore","maxScore","fieldName","Component","multiline","props","maxWords","maxLength","FinalRadio","FinalRating","max","min","allowNull","Error","GroupReviewForm","group","review","onCancel","questions","proposed_action","proposedAction","ratings","index","Popup","position","description","trigger","nullIfEmpty","PaperReviewForm","reviewerData","commentFormExpanded","setCommentFormExpanded","reviewGroup","setReviewGroup","reviewGroups","groups","reviewedGroups","createComment","commentData","createCommentAction","overflow","renderForm","find","item","reviews","createReview","Dropdown","unsortedArraysEqual","button","Menu","Item","Icon","floated","RevisionJudgment","revision","judge","isLastRevision","judgmentCommentHtml","judgmentDt","confirmOpen","setConfirmOpen","isResetInProgress","offset","link","color","Confirm","size","header","open","closeOnDimmerClick","closeOnEscape","onConfirm","cancelButton","confirmButton","loading","negative","closeIcon","dangerouslySetInnerHTML","__html","RevisionComment","isEditing","setIsEditing","isDeletingCommentInProgress","display","createdDt","modifiedDt","modificationDate","modifiedBy","canEdit","patch","updateCommentAction","getChangedValues","visible","html","RevisionReview","showRatings","setShowRatings","score","updateReviewAction","Transition","animation","duration","rating","ReviewRating","renderQuestionAnswer","commentHtml","RevisionTimeline","timeline","timelineItemType","renderTimelineItem","submitRevisionURL","SubmitRevision","setFiles","setSubmitting","zIndex","FileSubmission","onChange","newFiles","headers","FormData","forEach","append","e","handleAxiosError","marginTop","primary","TimelineItem","block","number","submitterName","isSystem","canSubmitRevision","setVisible","_sortBy","editableDetailsURL","type","fileTypesURL","editableURL","Paper","isInitialPaperDetailsLoading","fileTypes","isFileTypesLoading","useIndicoAxios","EditableType","unhandledErrors","camelize","editable","isEditableLoading","useEffect","Loader","active","revisions","editingEnabled","editingOpen","isEditingEnabled","PaperSteps","isRejected","hasEditable","uploadableFiles","TimelineContent","itemComponent","blocks","Step","fluid","completed","Content","Title","Description","EditableSubmissionButton","contributionCode","_objectWithoutProperties","_excluded","paperId","fileTypePropTypes","uploadablePropTypes","undefined","combineReducers","requestReducer","paperActions","arguments","camelizeKeys","global","window","setupPaperAssignmentList","setupTableSorter","enableIfChecked","setupListGenerator","itemHandle","listItems","term","$","on","this","offsetWidth","scrollWidth","qtip","hide","overwrite","setupReviewingAreaList","extend","hasPapers","filterConfig","list","setupSearchBox","applySearchFilters","setupCallForPapersPage","setupConflictsList","qbubble","show","fixed","delay","my","at","$this","is","class","items","each","i","val","attr","document","addEventListener","rootElement","querySelector","parseInt","dataset","contribId","initialData","Indico","User","avatarURL","store","createReduxStore","paperReducers","ReactDOM","Provider","setupReactPaperTimeline"],"sourceRoot":""}