{"version":3,"file":"js/statistics.599a1518.bundle.js","mappings":"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","sources":["webpack:///indico/web/client/js/jquery/statistics.js","webpack:///node_modules/updated-jqplot/dist/jquery.updated-jqplot.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.barRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.canvasAxisLabelRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.canvasAxisTickRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.canvasTextRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.categoryAxisRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.cursor.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.dateAxisRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.highlighter.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.logAxisRenderer.js","webpack:///node_modules/updated-jqplot/dist/plugins/jqplot.pointLabels.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n// jqplot isn't a real JS module. We have to explicitly load the files we need\n\nimport './compat/jqplot';\n\n(function setupStatistics(global) {\n  global.processJqPlotOptions = function processJqPlotOptions(options) {\n    var jqPlotDefaultOptions = {\n      animate: !$.jqplot.use_excanvas,\n      animateReplot: !$.jqplot.use_excanvas,\n      axesDefaults: {\n        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,\n        tickRenderer: $.jqplot.CanvasAxisTickRenderer,\n        tickOptions: {\n          markSize: 0,\n          formatString: '%d',\n        },\n      },\n      cursor: {\n        show: true,\n        showTooltip: false,\n        zoom: false,\n      },\n      grid: {\n        background: 'transparent',\n        drawBorder: false,\n        shadow: false,\n      },\n      highlighter: {show: true},\n      legend: {show: false},\n      seriesColors: ['#007CAC'], // indico blue\n      seriesDefaults: {\n        markerOptions: {\n          style: 'filledCircle',\n          color: '#007CAC', // indico blue\n        },\n        lineWidth: 3,\n        pointLabels: {\n          show: false,\n          color: 'white',\n          location: 'w',\n          xpadding: 4,\n          edgeTolerance: -2,\n        },\n        rendererOptions: {\n          animation: {speed: 1000},\n          highlightColors: '#0085B9',\n          smooth: true,\n        },\n        shadow: false,\n        size: 11,\n      },\n    };\n    return $.extend(true, {}, jqPlotDefaultOptions, options);\n  };\n\n  $(document).ready(function() {\n    $('.i-progress > .i-progress-bar').width(function getProgress() {\n      return $(this).data('progress');\n    });\n    // Animate numerical values in badges\n    $('.i-badge .i-badge-value[data-value]').each(function loadValue() {\n      var $this = $(this);\n      var val = $this.data('value');\n      if (!_.isNumber(val) || val === 0) {\n        $this.text(val);\n        return;\n      }\n      $({Counter: 0}).animate(\n        {Counter: val},\n        {\n          duration: 1000,\n          easing: 'swing',\n          step: function() {\n            $this.text(Math.ceil(this.Counter));\n          },\n        }\n      );\n    });\n  });\n})(window);\n","/**\n * Title: jqPlot Charts\n * \n * Pure JavaScript plotting plugin for jQuery.\n * \n * About: Version\n * \n * version: 1.0.9-1 \n * revision: 2dbcde8\n * \n * About: Copyright & License\n * \n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT and GPL version 2.0 licenses. This means that you can \n * choose the license that best suits your project and use it accordingly.\n * \n * See <GPL Version 2> and <MIT License> contained within this distribution for further information. \n *\n * The author would appreciate an email letting him know of any substantial\n * use of jqPlot.  You can reach the author at: chris at jqplot dot com \n * or see http://www.jqplot.com/info.php.  This is, of course, not required.\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php.\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n * \n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n * \n * About: Introduction\n * \n * jqPlot requires jQuery (1.4+ required for certain features). jQuery 1.4.2 is included in the distribution.  \n * To use jqPlot include jQuery, the jqPlot jQuery plugin, the jqPlot css file and optionally \n * the excanvas script for IE support in your web page:\n * \n * > <!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"excanvas.js\"></script><![endif]-->\n * > <script language=\"javascript\" type=\"text/javascript\" src=\"jquery-1.4.4.min.js\"></script>\n * > <script language=\"javascript\" type=\"text/javascript\" src=\"jquery.jqplot.min.js\"></script>\n * > <link rel=\"stylesheet\" type=\"text/css\" href=\"jquery.jqplot.css\" />\n * \n * jqPlot can be customized by overriding the defaults of any of the objects which make\n * up the plot. The general usage of jqplot is:\n * \n * > chart = $.jqplot('targetElemId', [dataArray,...], {optionsObject});\n * \n * The options available to jqplot are detailed in <jqPlot Options> in the jqPlotOptions.txt file.\n * \n * An actual call to $.jqplot() may look like the \n * examples below:\n * \n * > chart = $.jqplot('chartdiv',  [[[1, 2],[3,5.12],[5,13.1],[7,33.6],[9,85.9],[11,219.9]]]);\n * \n * or\n * \n * > dataArray = [34,12,43,55,77];\n * > chart = $.jqplot('targetElemId', [dataArray, ...], {title:'My Plot', axes:{yaxis:{min:20, max:100}}});\n * \n * For more inforrmation, see <jqPlot Usage>.\n * \n * About: Usage\n * \n * See <jqPlot Usage>\n * \n * About: Available Options \n * \n * See <jqPlot Options> for a list of options available thorugh the options object (not complete yet!)\n * \n * About: Options Usage\n * \n * See <Options Tutorial>\n * \n * About: Changes\n * \n * See <Change Log>\n * \n */\n\n(function($) {\n    // make sure undefined is undefined\n    var undefined;\n    \n    $.fn.emptyForce = function() {\n      for ( var i = 0, elem; (elem = $(this)[i]) != null; i++ ) {\n        // Remove element nodes and prevent memory leaks\n        if ( elem.nodeType === 1 ) {\n          $.cleanData( elem.getElementsByTagName(\"*\") );\n        }\n  \n        // Remove any remaining nodes\n        if ($.jqplot.use_excanvas) {\n          elem.outerHTML = \"\";\n        }\n        else {\n          while ( elem.firstChild ) {\n            elem.removeChild( elem.firstChild );\n          }\n        }\n\n        elem = null;\n      }\n  \n      return $(this);\n    };\n  \n    $.fn.removeChildForce = function(parent) {\n      while ( parent.firstChild ) {\n        this.removeChildForce( parent.firstChild );\n        parent.removeChild( parent.firstChild );\n      }\n    };\n\n    $.fn.jqplot = function() {\n        var datas = [];\n        var options = [];\n        // see how many data arrays we have\n        for (var i=0, l=arguments.length; i<l; i++) {\n            if ($.isArray(arguments[i])) {\n                datas.push(arguments[i]);\n            }\n            else if ($.isPlainObject(arguments[i])) {\n                options.push(arguments[i]);\n            }\n        }\n\n        return this.each(function(index) {\n            var tid, \n                plot, \n                $this = $(this),\n                dl = datas.length,\n                ol = options.length,\n                data, \n                opts;\n\n            if (index < dl) {\n                data = datas[index];\n            }\n            else {\n                data = dl ? datas[dl-1] : null;\n            }\n\n            if (index < ol) {\n                opts = options[index];\n            }\n            else {\n                opts = ol ? options[ol-1] : null;\n            }\n\n            // does el have an id?\n            // if not assign it one.\n            tid = $this.attr('id');\n            if (tid === undefined) {\n                tid = 'jqplot_target_' + $.jqplot.targetCounter++;\n                $this.attr('id', tid);\n            }\n\n            plot = $.jqplot(tid, data, opts);\n\n            $this.data('jqplot', plot);\n        });\n    };\n\n\n    /**\n     * Namespace: $.jqplot\n     * jQuery function called by the user to create a plot.\n     *  \n     * Parameters:\n     * target - ID of target element to render the plot into.\n     * data - an array of data series.\n     * options - user defined options object.  See the individual classes for available options.\n     * \n     * Properties:\n     * config - object to hold configuration information for jqPlot plot object.\n     * \n     * attributes:\n     * enablePlugins - False to disable plugins by default.  Plugins must then be explicitly \n     *   enabled in the individual plot options.  Default: false.\n     *   This property sets the \"show\" property of certain plugins to true or false.\n     *   Only plugins that can be immediately active upon loading are affected.  This includes\n     *   non-renderer plugins like cursor, dragable, highlighter, and trendline.\n     * defaultHeight - Default height for plots where no css height specification exists.  This\n     *   is a jqplot wide default.\n     * defaultWidth - Default height for plots where no css height specification exists.  This\n     *   is a jqplot wide default.\n     */\n\n    $.jqplot = function(target, data, options) {\n        var _data = null, _options = null;\n\n        if (arguments.length === 3) {\n            _data = data;\n            _options = options;\n        }\n\n        else if (arguments.length === 2) {\n            if ($.isArray(data)) {\n                _data = data;\n            }\n\n            else if ($.isPlainObject(data)) {\n                _options = data;\n            }\n        }\n\n        if (_data === null && _options !== null && _options.data) {\n            _data = _options.data;\n        }\n\n        var plot = new jqPlot();\n        // remove any error class that may be stuck on target.\n        $('#'+target).removeClass('jqplot-error');\n        \n        if ($.jqplot.config.catchErrors) {\n            try {\n                plot.init(target, _data, _options);\n                plot.draw();\n                plot.themeEngine.init.call(plot);\n                return plot;\n            }\n            catch(e) {\n                var msg = $.jqplot.config.errorMessage || e.message;\n                $('#'+target).append('<div class=\"jqplot-error-message\">'+msg+'</div>');\n                $('#'+target).addClass('jqplot-error');\n                document.getElementById(target).style.background = $.jqplot.config.errorBackground;\n                document.getElementById(target).style.border = $.jqplot.config.errorBorder;\n                document.getElementById(target).style.fontFamily = $.jqplot.config.errorFontFamily;\n                document.getElementById(target).style.fontSize = $.jqplot.config.errorFontSize;\n                document.getElementById(target).style.fontStyle = $.jqplot.config.errorFontStyle;\n                document.getElementById(target).style.fontWeight = $.jqplot.config.errorFontWeight;\n            }\n        }\n        else {        \n            plot.init(target, _data, _options);\n            plot.draw();\n            plot.themeEngine.init.call(plot);\n            return plot;\n        }\n    };\n\n    $.jqplot.version = \"1.0.9-1\";\n    $.jqplot.revision = \"2dbcde8\";\n\n    $.jqplot.targetCounter = 1;\n\n    // canvas manager to reuse canvases on the plot.\n    // Should help solve problem of canvases not being freed and\n    // problem of waiting forever for firefox to decide to free memory.\n    $.jqplot.CanvasManager = function() {\n        // canvases are managed globally so that they can be reused\n        // across plots after they have been freed\n        if (typeof $.jqplot.CanvasManager.canvases == 'undefined') {\n            $.jqplot.CanvasManager.canvases = [];\n            $.jqplot.CanvasManager.free = [];\n        }\n        \n        var myCanvases = [];\n        \n        this.getCanvas = function() {\n            var canvas;\n            var makeNew = true;\n            \n            if (!$.jqplot.use_excanvas) {\n                for (var i = 0, l = $.jqplot.CanvasManager.canvases.length; i < l; i++) {\n                    if ($.jqplot.CanvasManager.free[i] === true) {\n                        makeNew = false;\n                        canvas = $.jqplot.CanvasManager.canvases[i];\n                        // $(canvas).removeClass('jqplot-canvasManager-free').addClass('jqplot-canvasManager-inuse');\n                        $.jqplot.CanvasManager.free[i] = false;\n                        myCanvases.push(i);\n                        break;\n                    }\n                }\n            }\n\n            if (makeNew) {\n                canvas = document.createElement('canvas');\n                myCanvases.push($.jqplot.CanvasManager.canvases.length);\n                $.jqplot.CanvasManager.canvases.push(canvas);\n                $.jqplot.CanvasManager.free.push(false);\n            }   \n            \n            return canvas;\n        };\n        \n        // this method has to be used after settings the dimesions\n        // on the element returned by getCanvas()\n        this.initCanvas = function(canvas) {\n            if ($.jqplot.use_excanvas) {\n                return window.G_vmlCanvasManager.initElement(canvas);\n            }\n\n            var cctx = canvas.getContext('2d');\n\n            var canvasBackingScale = 1;\n            if (window.devicePixelRatio > 1 && (cctx.webkitBackingStorePixelRatio === undefined || \n                                                cctx.webkitBackingStorePixelRatio < 2)) {\n                canvasBackingScale = window.devicePixelRatio;\n            }\n            var oldWidth = canvas.width;\n            var oldHeight = canvas.height;\n\n            canvas.width = canvasBackingScale * canvas.width;\n            canvas.height = canvasBackingScale * canvas.height;\n            canvas.style.width = oldWidth + 'px';\n            canvas.style.height = oldHeight + 'px';\n            cctx.save();\n\n            cctx.scale(canvasBackingScale, canvasBackingScale);\n\n            return canvas;\n        };\n\n        this.freeAllCanvases = function() {\n            for (var i = 0, l=myCanvases.length; i < l; i++) {\n                this.freeCanvas(myCanvases[i]);\n            }\n            myCanvases = [];\n        };\n\n        this.freeCanvas = function(idx) {\n            if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n                // excanvas can't be reused, but properly unset\n                window.G_vmlCanvasManager.uninitElement($.jqplot.CanvasManager.canvases[idx]);\n                $.jqplot.CanvasManager.canvases[idx] = null;\n            } \n            else {\n                var canvas = $.jqplot.CanvasManager.canvases[idx];\n                canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n                $(canvas).unbind().removeAttr('class').removeAttr('style');\n                // Style attributes seemed to be still hanging around.  wierd.  Some ticks\n                // still retained a left: 0px attribute after reusing a canvas.\n                $(canvas).css({left: '', top: '', position: ''});\n                // setting size to 0 may save memory of unused canvases?\n                canvas.width = 0;\n                canvas.height = 0;\n                $.jqplot.CanvasManager.free[idx] = true;\n            }\n        };\n        \n    };\n\n            \n    // Convienence function that won't hang IE or FF without FireBug.\n    $.jqplot.log = function() {\n        if (window.console) {\n            window.console.log.apply(window.console, arguments);\n        }\n    };\n        \n    $.jqplot.config = {\n        addDomReference: false,\n        enablePlugins:false,\n        defaultHeight:300,\n        defaultWidth:400,\n        UTCAdjust:false,\n        timezoneOffset: new Date(new Date().getTimezoneOffset() * 60000),\n        errorMessage: '',\n        errorBackground: '',\n        errorBorder: '',\n        errorFontFamily: '',\n        errorFontSize: '',\n        errorFontStyle: '',\n        errorFontWeight: '',\n        catchErrors: false,\n        defaultTickFormatString: \"%.1f\",\n        defaultColors: [ \"#4bb2c5\", \"#EAA228\", \"#c5b47f\", \"#579575\", \"#839557\", \"#958c12\", \"#953579\", \"#4b5de4\", \"#d8b83f\", \"#ff5800\", \"#0085cc\", \"#c747a3\", \"#cddf54\", \"#FBD178\", \"#26B4E3\", \"#bd70c7\"],\n        defaultNegativeColors: [ \"#498991\", \"#C08840\", \"#9F9274\", \"#546D61\", \"#646C4A\", \"#6F6621\", \"#6E3F5F\", \"#4F64B0\", \"#A89050\", \"#C45923\", \"#187399\", \"#945381\", \"#959E5C\", \"#C7AF7B\", \"#478396\", \"#907294\"],\n        dashLength: 4,\n        gapLength: 4,\n        dotGapLength: 2.5,\n        srcLocation: 'jqplot/src/',\n        pluginLocation: 'jqplot/src/plugins/'\n    };\n    \n    \n    $.jqplot.arrayMax = function( array ){\n        return Math.max.apply( Math, array );\n    };\n    \n    $.jqplot.arrayMin = function( array ){\n        return Math.min.apply( Math, array );\n    };\n    \n    $.jqplot.enablePlugins = $.jqplot.config.enablePlugins;\n    \n    // canvas related tests taken from modernizer:\n    // Copyright (c) 2009 - 2010 Faruk Ates.\n    // http://www.modernizr.com\n    \n    $.jqplot.support_canvas = function() {\n        if (typeof $.jqplot.support_canvas.result == 'undefined') {\n            $.jqplot.support_canvas.result = !!document.createElement('canvas').getContext; \n        }\n        return $.jqplot.support_canvas.result;\n    };\n            \n    $.jqplot.support_canvas_text = function() {\n        if (typeof $.jqplot.support_canvas_text.result == 'undefined') {\n            if (window.G_vmlCanvasManager !== undefined && window.G_vmlCanvasManager._version > 887) {\n                $.jqplot.support_canvas_text.result = true;\n            }\n            else {\n                $.jqplot.support_canvas_text.result = !!(document.createElement('canvas').getContext && typeof document.createElement('canvas').getContext('2d').fillText == 'function');\n            }\n             \n        }\n        return $.jqplot.support_canvas_text.result;\n    };\n    \n    $.jqplot.use_excanvas = ((!$.support.boxModel || !$.support.objectAll || !$support.leadingWhitespace) && !$.jqplot.support_canvas()) ? true : false;\n    \n    /**\n     * \n     * Hooks: jqPlot Pugin Hooks\n     * \n     * $.jqplot.preInitHooks - called before initialization.\n     * $.jqplot.postInitHooks - called after initialization.\n     * $.jqplot.preParseOptionsHooks - called before user options are parsed.\n     * $.jqplot.postParseOptionsHooks - called after user options are parsed.\n     * $.jqplot.preDrawHooks - called before plot draw.\n     * $.jqplot.postDrawHooks - called after plot draw.\n     * $.jqplot.preDrawSeriesHooks - called before each series is drawn.\n     * $.jqplot.postDrawSeriesHooks - called after each series is drawn.\n     * $.jqplot.preDrawLegendHooks - called before the legend is drawn.\n     * $.jqplot.addLegendRowHooks - called at the end of legend draw, so plugins\n     *     can add rows to the legend table.\n     * $.jqplot.preSeriesInitHooks - called before series is initialized.\n     * $.jqplot.postSeriesInitHooks - called after series is initialized.\n     * $.jqplot.preParseSeriesOptionsHooks - called before series related options\n     *     are parsed.\n     * $.jqplot.postParseSeriesOptionsHooks - called after series related options\n     *     are parsed.\n     * $.jqplot.eventListenerHooks - called at the end of plot drawing, binds\n     *     listeners to the event canvas which lays on top of the grid area.\n     * $.jqplot.preDrawSeriesShadowHooks - called before series shadows are drawn.\n     * $.jqplot.postDrawSeriesShadowHooks - called after series shadows are drawn.\n     * \n     */\n    \n    $.jqplot.preInitHooks = [];\n    $.jqplot.postInitHooks = [];\n    $.jqplot.preParseOptionsHooks = [];\n    $.jqplot.postParseOptionsHooks = [];\n    $.jqplot.preDrawHooks = [];\n    $.jqplot.postDrawHooks = [];\n    $.jqplot.preDrawSeriesHooks = [];\n    $.jqplot.postDrawSeriesHooks = [];\n    $.jqplot.preDrawLegendHooks = [];\n    $.jqplot.addLegendRowHooks = [];\n    $.jqplot.preSeriesInitHooks = [];\n    $.jqplot.postSeriesInitHooks = [];\n    $.jqplot.preParseSeriesOptionsHooks = [];\n    $.jqplot.postParseSeriesOptionsHooks = [];\n    $.jqplot.eventListenerHooks = [];\n    $.jqplot.preDrawSeriesShadowHooks = [];\n    $.jqplot.postDrawSeriesShadowHooks = [];\n\n    // A superclass holding some common properties and methods.\n    $.jqplot.ElemContainer = function() {\n        this._elem;\n        this._plotWidth;\n        this._plotHeight;\n        this._plotDimensions = {height:null, width:null};\n    };\n    \n    $.jqplot.ElemContainer.prototype.createElement = function(el, offsets, clss, cssopts, attrib) {\n        this._offsets = offsets;\n        var klass = clss || 'jqplot';\n        var elem = document.createElement(el);\n        this._elem = $(elem);\n        this._elem.addClass(klass);\n        this._elem.css(cssopts);\n        this._elem.attr(attrib);\n        // avoid memory leak;\n        elem = null;\n        return this._elem;\n    };\n    \n    $.jqplot.ElemContainer.prototype.getWidth = function() {\n        if (this._elem) {\n            return this._elem.outerWidth(true);\n        }\n        else {\n            return null;\n        }\n    };\n    \n    $.jqplot.ElemContainer.prototype.getHeight = function() {\n        if (this._elem) {\n            return this._elem.outerHeight(true);\n        }\n        else {\n            return null;\n        }\n    };\n    \n    $.jqplot.ElemContainer.prototype.getPosition = function() {\n        if (this._elem) {\n            return this._elem.position();\n        }\n        else {\n            return {top:null, left:null, bottom:null, right:null};\n        }\n    };\n    \n    $.jqplot.ElemContainer.prototype.getTop = function() {\n        return this.getPosition().top;\n    };\n    \n    $.jqplot.ElemContainer.prototype.getLeft = function() {\n        return this.getPosition().left;\n    };\n    \n    $.jqplot.ElemContainer.prototype.getBottom = function() {\n        return this._elem.css('bottom');\n    };\n    \n    $.jqplot.ElemContainer.prototype.getRight = function() {\n        return this._elem.css('right');\n    };\n    \n\n    /**\n     * Class: Axis\n     * An individual axis object.  Cannot be instantiated directly, but created\n     * by the Plot object.  Axis properties can be set or overridden by the \n     * options passed in from the user.\n     * \n     */\n    function Axis(name) {\n        $.jqplot.ElemContainer.call(this);\n        // Group: Properties\n        //\n        // Axes options are specified within an axes object at the top level of the \n        // plot options like so:\n        // > {\n        // >    axes: {\n        // >        xaxis: {min: 5},\n        // >        yaxis: {min: 2, max: 8, numberTicks:4},\n        // >        x2axis: {pad: 1.5},\n        // >        y2axis: {ticks:[22, 44, 66, 88]}\n        // >        }\n        // > }\n        // There are 2 x axes, 'xaxis' and 'x2axis', and \n        // 9 yaxes, 'yaxis', 'y2axis'. 'y3axis', ...  Any or all of which may be specified.\n        this.name = name;\n        this._series = [];\n        // prop: show\n        // Wether to display the axis on the graph.\n        this.show = false;\n        // prop: tickRenderer\n        // A class of a rendering engine for creating the ticks labels displayed on the plot, \n        // See <$.jqplot.AxisTickRenderer>.\n        this.tickRenderer = $.jqplot.AxisTickRenderer;\n        // prop: tickOptions\n        // Options that will be passed to the tickRenderer, see <$.jqplot.AxisTickRenderer> options.\n        this.tickOptions = {};\n        // prop: labelRenderer\n        // A class of a rendering engine for creating an axis label.\n        this.labelRenderer = $.jqplot.AxisLabelRenderer;\n        // prop: labelOptions\n        // Options passed to the label renderer.\n        this.labelOptions = {};\n        // prop: label\n        // Label for the axis\n        this.label = null;\n        // prop: showLabel\n        // true to show the axis label.\n        this.showLabel = true;\n        // prop: min\n        // minimum value of the axis (in data units, not pixels).\n        this.min = null;\n        // prop: max\n        // maximum value of the axis (in data units, not pixels).\n        this.max = null;\n        // prop: autoscale\n        // DEPRECATED\n        // the default scaling algorithm produces superior results.\n        this.autoscale = false;\n        // prop: pad\n        // Padding to extend the range above and below the data bounds.\n        // The data range is multiplied by this factor to determine minimum and maximum axis bounds.\n        // A value of 0 will be interpreted to mean no padding, and pad will be set to 1.0.\n        this.pad = 1.2;\n        // prop: padMax\n        // Padding to extend the range above data bounds.\n        // The top of the data range is multiplied by this factor to determine maximum axis bounds.\n        // A value of 0 will be interpreted to mean no padding, and padMax will be set to 1.0.\n        this.padMax = null;\n        // prop: padMin\n        // Padding to extend the range below data bounds.\n        // The bottom of the data range is multiplied by this factor to determine minimum axis bounds.\n        // A value of 0 will be interpreted to mean no padding, and padMin will be set to 1.0.\n        this.padMin = null;\n        // prop: ticks\n        // 1D [val, val, ...] or 2D [[val, label], [val, label], ...] array of ticks for the axis.\n        // If no label is specified, the value is formatted into an appropriate label.\n        this.ticks = [];\n        // prop: numberTicks\n        // Desired number of ticks.  Default is to compute automatically.\n        this.numberTicks;\n        // prop: tickInterval\n        // number of units between ticks.  Mutually exclusive with numberTicks.\n        this.tickInterval;\n        // prop: renderer\n        // A class of a rendering engine that handles tick generation, \n        // scaling input data to pixel grid units and drawing the axis element.\n        this.renderer = $.jqplot.LinearAxisRenderer;\n        // prop: rendererOptions\n        // renderer specific options.  See <$.jqplot.LinearAxisRenderer> for options.\n        this.rendererOptions = {};\n        // prop: showTicks\n        // Wether to show the ticks (both marks and labels) or not.\n        // Will not override showMark and showLabel options if specified on the ticks themselves.\n        this.showTicks = true;\n        // prop: showTickMarks\n        // Wether to show the tick marks (line crossing grid) or not.\n        // Overridden by showTicks and showMark option of tick itself.\n        this.showTickMarks = true;\n        // prop: showMinorTicks\n        // Wether or not to show minor ticks.  This is renderer dependent.\n        this.showMinorTicks = true;\n        // prop: drawMajorGridlines\n        // True to draw gridlines for major axis ticks.\n        this.drawMajorGridlines = true;\n        // prop: drawMinorGridlines\n        // True to draw gridlines for minor ticks.\n        this.drawMinorGridlines = false;\n        // prop: drawMajorTickMarks\n        // True to draw tick marks for major axis ticks.\n        this.drawMajorTickMarks = true;\n        // prop: drawMinorTickMarks\n        // True to draw tick marks for minor ticks.  This is renderer dependent.\n        this.drawMinorTickMarks = true;\n        // prop: useSeriesColor\n        // Use the color of the first series associated with this axis for the\n        // tick marks and line bordering this axis.\n        this.useSeriesColor = false;\n        // prop: borderWidth\n        // width of line stroked at the border of the axis.  Defaults\n        // to the width of the grid boarder.\n        this.borderWidth = null;\n        // prop: borderColor\n        // color of the border adjacent to the axis.  Defaults to grid border color.\n        this.borderColor = null;\n        // prop: scaleToHiddenSeries\n        // True to include hidden series when computing axes bounds and scaling.\n        this.scaleToHiddenSeries = false;\n        // minimum and maximum values on the axis.\n        this._dataBounds = {min:null, max:null};\n        // statistics (min, max, mean) as well as actual data intervals for each series attached to axis.\n        // holds collection of {intervals:[], min:, max:, mean: } objects for each series on axis.\n        this._intervalStats = [];\n        // pixel position from the top left of the min value and max value on the axis.\n        this._offsets = {min:null, max:null};\n        this._ticks=[];\n        this._label = null;\n        // prop: syncTicks\n        // true to try and synchronize tick spacing across multiple axes so that ticks and\n        // grid lines line up.  This has an impact on autoscaling algorithm, however.\n        // In general, autoscaling an individual axis will work better if it does not\n        // have to sync ticks.\n        this.syncTicks = null;\n        // prop: tickSpacing\n        // Approximate pixel spacing between ticks on graph.  Used during autoscaling.\n        // This number will be an upper bound, actual spacing will be less.\n        this.tickSpacing = 75;\n        // Properties to hold the original values for min, max, ticks, tickInterval and numberTicks\n        // so they can be restored if altered by plugins.\n        this._min = null;\n        this._max = null;\n        this._tickInterval = null;\n        this._numberTicks = null;\n        this.__ticks = null;\n        // hold original user options.\n        this._options = {};\n    }\n    \n    Axis.prototype = new $.jqplot.ElemContainer();\n    Axis.prototype.constructor = Axis;\n    \n    Axis.prototype.init = function() {\n        if ($.isFunction(this.renderer)) {\n            this.renderer = new this.renderer();  \n        }\n        // set the axis name\n        this.tickOptions.axis = this.name;\n        // if showMark or showLabel tick options not specified, use value of axis option.\n        // showTicks overrides showTickMarks.\n        if (this.tickOptions.showMark == null) {\n            this.tickOptions.showMark = this.showTicks;\n        }\n        if (this.tickOptions.showMark == null) {\n            this.tickOptions.showMark = this.showTickMarks;\n        }\n        if (this.tickOptions.showLabel == null) {\n            this.tickOptions.showLabel = this.showTicks;\n        }\n        \n        if (this.label == null || this.label == '') {\n            this.showLabel = false;\n        }\n        else {\n            this.labelOptions.label = this.label;\n        }\n        if (this.showLabel == false) {\n            this.labelOptions.show = false;\n        }\n        // set the default padMax, padMin if not specified\n        // special check, if no padding desired, padding\n        // should be set to 1.0\n        if (this.pad == 0) {\n            this.pad = 1.0;\n        }\n        if (this.padMax == 0) {\n            this.padMax = 1.0;\n        }\n        if (this.padMin == 0) {\n            this.padMin = 1.0;\n        }\n        if (this.padMax == null) {\n            this.padMax = (this.pad-1)/2 + 1;\n        }\n        if (this.padMin == null) {\n            this.padMin = (this.pad-1)/2 + 1;\n        }\n        // now that padMin and padMax are correctly set, reset pad in case user has supplied \n        // padMin and/or padMax\n        this.pad = this.padMax + this.padMin - 1;\n        if (this.min != null || this.max != null) {\n            this.autoscale = false;\n        }\n        // if not set, sync ticks for y axes but not x by default.\n        if (this.syncTicks == null && this.name.indexOf('y') > -1) {\n            this.syncTicks = true;\n        }\n        else if (this.syncTicks == null){\n            this.syncTicks = false;\n        }\n        this.renderer.init.call(this, this.rendererOptions);\n        \n    };\n    \n    Axis.prototype.draw = function(ctx, plot) {\n        // Memory Leaks patch\n        if (this.__ticks) {\n          this.__ticks = null;\n        }\n\n        return this.renderer.draw.call(this, ctx, plot);\n        \n    };\n    \n    Axis.prototype.set = function() {\n        this.renderer.set.call(this);\n    };\n    \n    Axis.prototype.pack = function(pos, offsets) {\n        if (this.show) {\n            this.renderer.pack.call(this, pos, offsets);\n        }\n        // these properties should all be available now.\n        if (this._min == null) {\n            this._min = this.min;\n            this._max = this.max;\n            this._tickInterval = this.tickInterval;\n            this._numberTicks = this.numberTicks;\n            this.__ticks = this._ticks;\n        }\n    };\n    \n    // reset the axis back to original values if it has been scaled, zoomed, etc.\n    Axis.prototype.reset = function() {\n        this.renderer.reset.call(this);\n    };\n    \n    Axis.prototype.resetScale = function(opts) {\n        $.extend(true, this, {min: null, max: null, numberTicks: null, tickInterval: null, _ticks: [], ticks: []}, opts);\n        this.resetDataBounds();\n    };\n    \n    Axis.prototype.resetDataBounds = function() {\n        // Go through all the series attached to this axis and find\n        // the min/max bounds for this axis.\n        var db = this._dataBounds;\n        db.min = null;\n        db.max = null;\n        var l, s, d;\n        // check for when to force min 0 on bar series plots.\n        var doforce = (this.show) ? true : false;\n        for (var i=0; i<this._series.length; i++) {\n            s = this._series[i];\n            if (s.show || this.scaleToHiddenSeries) {\n                d = s._plotData;\n                if (s._type === 'line' && s.renderer.bands.show && this.name.charAt(0) !== 'x') {\n                    d = [[0, s.renderer.bands._min], [1, s.renderer.bands._max]];\n                }\n\n                var minyidx = 1, maxyidx = 1;\n\n                if (s._type != null && s._type == 'ohlc') {\n                    minyidx = 3;\n                    maxyidx = 2;\n                }\n                \n                for (var j=0, l=d.length; j<l; j++) { \n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        if ((d[j][0] != null && d[j][0] < db.min) || db.min == null) {\n                            db.min = d[j][0];\n                        }\n                        if ((d[j][0] != null && d[j][0] > db.max) || db.max == null) {\n                            db.max = d[j][0];\n                        }\n                    }              \n                    else {\n                        if ((d[j][minyidx] != null && d[j][minyidx] < db.min) || db.min == null) {\n                            db.min = d[j][minyidx];\n                        }\n                        if ((d[j][maxyidx] != null && d[j][maxyidx] > db.max) || db.max == null) {\n                            db.max = d[j][maxyidx];\n                        }\n                    }              \n                }\n\n                // Hack to not pad out bottom of bar plots unless user has specified a padding.\n                // every series will have a chance to set doforce to false.  once it is set to \n                // false, it cannot be reset to true.\n                // If any series attached to axis is not a bar, wont force 0.\n                if (doforce && s.renderer.constructor !== $.jqplot.BarRenderer) {\n                    doforce = false;\n                }\n\n                else if (doforce && this._options.hasOwnProperty('forceTickAt0') && this._options.forceTickAt0 == false) {\n                    doforce = false;\n                }\n\n                else if (doforce && s.renderer.constructor === $.jqplot.BarRenderer) {\n                    if (s.barDirection == 'vertical' && this.name != 'xaxis' && this.name != 'x2axis') { \n                        if (this._options.pad != null || this._options.padMin != null) {\n                            doforce = false;\n                        }\n                    }\n\n                    else if (s.barDirection == 'horizontal' && (this.name == 'xaxis' || this.name == 'x2axis')) {\n                        if (this._options.pad != null || this._options.padMin != null) {\n                            doforce = false;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        if (doforce && this.renderer.constructor === $.jqplot.LinearAxisRenderer && db.min >= 0) {\n            this.padMin = 1.0;\n            this.forceTickAt0 = true;\n        }\n    };\n\n    /**\n     * Class: Legend\n     * Legend object.  Cannot be instantiated directly, but created\n     * by the Plot object.  Legend properties can be set or overridden by the \n     * options passed in from the user.\n     */\n    function Legend(options) {\n        $.jqplot.ElemContainer.call(this);\n        // Group: Properties\n        \n        // prop: show\n        // Wether to display the legend on the graph.\n        this.show = false;\n        // prop: location\n        // Placement of the legend.  one of the compass directions: nw, n, ne, e, se, s, sw, w\n        this.location = 'ne';\n        // prop: labels\n        // Array of labels to use.  By default the renderer will look for labels on the series.\n        // Labels specified in this array will override labels specified on the series.\n        this.labels = [];\n        // prop: showLabels\n        // true to show the label text on the  legend.\n        this.showLabels = true;\n        // prop: showSwatch\n        // true to show the color swatches on the legend.\n        this.showSwatches = true;\n        // prop: placement\n        // \"insideGrid\" places legend inside the grid area of the plot.\n        // \"outsideGrid\" places the legend outside the grid but inside the plot container, \n        // shrinking the grid to accommodate the legend.\n        // \"inside\" synonym for \"insideGrid\", \n        // \"outside\" places the legend ouside the grid area, but does not shrink the grid which\n        // can cause the legend to overflow the plot container.\n        this.placement = \"insideGrid\";\n        // prop: xoffset\n        // DEPRECATED.  Set the margins on the legend using the marginTop, marginLeft, etc. \n        // properties or via CSS margin styling of the .jqplot-table-legend class.\n        this.xoffset = 0;\n        // prop: yoffset\n        // DEPRECATED.  Set the margins on the legend using the marginTop, marginLeft, etc. \n        // properties or via CSS margin styling of the .jqplot-table-legend class.\n        this.yoffset = 0;\n        // prop: border\n        // css spec for the border around the legend box.\n        this.border;\n        // prop: background\n        // css spec for the background of the legend box.\n        this.background;\n        // prop: textColor\n        // css color spec for the legend text.\n        this.textColor;\n        // prop: fontFamily\n        // css font-family spec for the legend text.\n        this.fontFamily; \n        // prop: fontSize\n        // css font-size spec for the legend text.\n        this.fontSize ;\n        // prop: rowSpacing\n        // css padding-top spec for the rows in the legend.\n        this.rowSpacing = '0.5em';\n        // renderer\n        // A class that will create a DOM object for the legend,\n        // see <$.jqplot.TableLegendRenderer>.\n        this.renderer = $.jqplot.TableLegendRenderer;\n        // prop: rendererOptions\n        // renderer specific options passed to the renderer.\n        this.rendererOptions = {};\n        // prop: predraw\n        // Wether to draw the legend before the series or not.\n        // Used with series specific legend renderers for pie, donut, mekko charts, etc.\n        this.preDraw = false;\n        // prop: marginTop\n        // CSS margin for the legend DOM element. This will set an element \n        // CSS style for the margin which will override any style sheet setting.\n        // The default will be taken from the stylesheet.\n        this.marginTop = null;\n        // prop: marginRight\n        // CSS margin for the legend DOM element. This will set an element \n        // CSS style for the margin which will override any style sheet setting.\n        // The default will be taken from the stylesheet.\n        this.marginRight = null;\n        // prop: marginBottom\n        // CSS margin for the legend DOM element. This will set an element \n        // CSS style for the margin which will override any style sheet setting.\n        // The default will be taken from the stylesheet.\n        this.marginBottom = null;\n        // prop: marginLeft\n        // CSS margin for the legend DOM element. This will set an element \n        // CSS style for the margin which will override any style sheet setting.\n        // The default will be taken from the stylesheet.\n        this.marginLeft = null;\n        // prop: escapeHtml\n        // True to escape special characters with their html entity equivalents\n        // in legend text.  \"<\" becomes &lt; and so on, so html tags are not rendered.\n        this.escapeHtml = false;\n        this._series = [];\n        \n        $.extend(true, this, options);\n    }\n    \n    Legend.prototype = new $.jqplot.ElemContainer();\n    Legend.prototype.constructor = Legend;\n    \n    Legend.prototype.setOptions = function(options) {\n        $.extend(true, this, options);\n        \n        // Try to emulate deprecated behaviour\n        // if user has specified xoffset or yoffset, copy these to\n        // the margin properties.\n        \n        if (this.placement ==  'inside') {\n            this.placement = 'insideGrid';\n        }\n        \n        if (this.xoffset >0) {\n            if (this.placement == 'insideGrid') {\n                switch (this.location) {\n                    case 'nw':\n                    case 'w':\n                    case 'sw':\n                        if (this.marginLeft == null) {\n                            this.marginLeft = this.xoffset + 'px';\n                        }\n                        this.marginRight = '0px';\n                        break;\n                    case 'ne':\n                    case 'e':\n                    case 'se':\n                    default:\n                        if (this.marginRight == null) {\n                            this.marginRight = this.xoffset + 'px';\n                        }\n                        this.marginLeft = '0px';\n                        break;\n                }\n            }\n            else if (this.placement == 'outside') {\n                switch (this.location) {\n                    case 'nw':\n                    case 'w':\n                    case 'sw':\n                        if (this.marginRight == null) {\n                            this.marginRight = this.xoffset + 'px';\n                        }\n                        this.marginLeft = '0px';\n                        break;\n                    case 'ne':\n                    case 'e':\n                    case 'se':\n                    default:\n                        if (this.marginLeft == null) {\n                            this.marginLeft = this.xoffset + 'px';\n                        }\n                        this.marginRight = '0px';\n                        break;\n                }\n            }\n            this.xoffset = 0;\n        }\n        \n        if (this.yoffset >0) {\n            if (this.placement == 'outside') {\n                switch (this.location) {\n                    case 'sw':\n                    case 's':\n                    case 'se':\n                        if (this.marginTop == null) {\n                            this.marginTop = this.yoffset + 'px';\n                        }\n                        this.marginBottom = '0px';\n                        break;\n                    case 'ne':\n                    case 'n':\n                    case 'nw':\n                    default:\n                        if (this.marginBottom == null) {\n                            this.marginBottom = this.yoffset + 'px';\n                        }\n                        this.marginTop = '0px';\n                        break;\n                }\n            }\n            else if (this.placement == 'insideGrid') {\n                switch (this.location) {\n                    case 'sw':\n                    case 's':\n                    case 'se':\n                        if (this.marginBottom == null) {\n                            this.marginBottom = this.yoffset + 'px';\n                        }\n                        this.marginTop = '0px';\n                        break;\n                    case 'ne':\n                    case 'n':\n                    case 'nw':\n                    default:\n                        if (this.marginTop == null) {\n                            this.marginTop = this.yoffset + 'px';\n                        }\n                        this.marginBottom = '0px';\n                        break;\n                }\n            }\n            this.yoffset = 0;\n        }\n        \n        // TO-DO:\n        // Handle case where offsets are < 0.\n        //\n    };\n    \n    Legend.prototype.init = function() {\n        if ($.isFunction(this.renderer)) {\n            this.renderer = new this.renderer();  \n        }\n        this.renderer.init.call(this, this.rendererOptions);\n    };\n    \n    Legend.prototype.draw = function(offsets, plot) {\n        for (var i=0; i<$.jqplot.preDrawLegendHooks.length; i++){\n            $.jqplot.preDrawLegendHooks[i].call(this, offsets);\n        }\n        return this.renderer.draw.call(this, offsets, plot);\n    };\n    \n    Legend.prototype.pack = function(offsets) {\n        this.renderer.pack.call(this, offsets);\n    };\n\n    /**\n     * Class: Title\n     * Plot Title object.  Cannot be instantiated directly, but created\n     * by the Plot object.  Title properties can be set or overridden by the \n     * options passed in from the user.\n     * \n     * Parameters:\n     * text - text of the title.\n     */\n    function Title(text) {\n        $.jqplot.ElemContainer.call(this);\n        // Group: Properties\n        \n        // prop: text\n        // text of the title;\n        this.text = text;\n        // prop: show\n        // whether or not to show the title\n        this.show = true;\n        // prop: fontFamily\n        // css font-family spec for the text.\n        this.fontFamily;\n        // prop: fontSize\n        // css font-size spec for the text.\n        this.fontSize ;\n        // prop: textAlign\n        // css text-align spec for the text.\n        this.textAlign;\n        // prop: textColor\n        // css color spec for the text.\n        this.textColor;\n        // prop: renderer\n        // A class for creating a DOM element for the title,\n        // see <$.jqplot.DivTitleRenderer>.\n        this.renderer = $.jqplot.DivTitleRenderer;\n        // prop: rendererOptions\n        // renderer specific options passed to the renderer.\n        this.rendererOptions = {};   \n        // prop: escapeHtml\n        // True to escape special characters with their html entity equivalents\n        // in title text.  \"<\" becomes &lt; and so on, so html tags are not rendered.\n        this.escapeHtml = false;\n    }\n    \n    Title.prototype = new $.jqplot.ElemContainer();\n    Title.prototype.constructor = Title;\n    \n    Title.prototype.init = function() {\n        if ($.isFunction(this.renderer)) {\n            this.renderer = new this.renderer();  \n        }\n        this.renderer.init.call(this, this.rendererOptions);\n    };\n    \n    Title.prototype.draw = function(width) {\n        return this.renderer.draw.call(this, width);\n    };\n    \n    Title.prototype.pack = function() {\n        this.renderer.pack.call(this);\n    };\n\n\n    /**\n     * Class: Series\n     * An individual data series object.  Cannot be instantiated directly, but created\n     * by the Plot object.  Series properties can be set or overridden by the \n     * options passed in from the user.\n     */\n    function Series(options) {\n        options = options || {};\n        $.jqplot.ElemContainer.call(this);\n        // Group: Properties\n        // Properties will be assigned from a series array at the top level of the\n        // options.  If you had two series and wanted to change the color and line\n        // width of the first and set the second to use the secondary y axis with\n        // no shadow and supply custom labels for each:\n        // > {\n        // >    series:[\n        // >        {color: '#ff4466', lineWidth: 5, label:'good line'},\n        // >        {yaxis: 'y2axis', shadow: false, label:'bad line'}\n        // >    ]\n        // > }\n\n        // prop: show\n        // whether or not to draw the series.\n        this.show = true;\n        // prop: xaxis\n        // which x axis to use with this series, either 'xaxis' or 'x2axis'.\n        this.xaxis = 'xaxis';\n        this._xaxis;\n        // prop: yaxis\n        // which y axis to use with this series, either 'yaxis' or 'y2axis'.\n        this.yaxis = 'yaxis';\n        this._yaxis;\n        this.gridBorderWidth = 2.0;\n        // prop: renderer\n        // A class of a renderer which will draw the series, \n        // see <$.jqplot.LineRenderer>.\n        this.renderer = $.jqplot.LineRenderer;\n        // prop: rendererOptions\n        // Options to pass on to the renderer.\n        this.rendererOptions = {};\n        this.data = [];\n        this.gridData = [];\n        // prop: label\n        // Line label to use in the legend.\n        this.label = '';\n        // prop: showLabel\n        // true to show label for this series in the legend.\n        this.showLabel = true;\n        // prop: color\n        // css color spec for the series\n        this.color;\n        // prop: negativeColor\n        // css color spec used for filled (area) plots that are filled to zero and\n        // the \"useNegativeColors\" option is true.\n        this.negativeColor;\n        // prop: lineWidth\n        // width of the line in pixels.  May have different meanings depending on renderer.\n        this.lineWidth = 2.5;\n        // prop: lineJoin\n        // Canvas lineJoin style between segments of series.\n        this.lineJoin = 'round';\n        // prop: lineCap\n        // Canvas lineCap style at ends of line.\n        this.lineCap = 'round';\n        // prop: linePattern\n        // line pattern 'dashed', 'dotted', 'solid', some combination\n        // of '-' and '.' characters such as '.-.' or a numerical array like \n        // [draw, skip, draw, skip, ...] such as [1, 10] to draw a dotted line, \n        // [1, 10, 20, 10] to draw a dot-dash line, and so on.\n        this.linePattern = 'solid';\n        this.shadow = true;\n        // prop: shadowAngle\n        // Shadow angle in degrees\n        this.shadowAngle = 45;\n        // prop: shadowOffset\n        // Shadow offset from line in pixels\n        this.shadowOffset = 1.25;\n        // prop: shadowDepth\n        // Number of times shadow is stroked, each stroke offset shadowOffset from the last.\n        this.shadowDepth = 3;\n        // prop: shadowAlpha\n        // Alpha channel transparency of shadow.  0 = transparent.\n        this.shadowAlpha = '0.1';\n        // prop: breakOnNull\n        // Wether line segments should be be broken at null value.\n        // False will join point on either side of line.\n        this.breakOnNull = false;\n        // prop: markerRenderer\n        // A class of a renderer which will draw marker (e.g. circle, square, ...) at the data points,\n        // see <$.jqplot.MarkerRenderer>.\n        this.markerRenderer = $.jqplot.MarkerRenderer;\n        // prop: markerOptions\n        // renderer specific options to pass to the markerRenderer,\n        // see <$.jqplot.MarkerRenderer>.\n        this.markerOptions = {};\n        // prop: showLine\n        // whether to actually draw the line or not.  Series will still be renderered, even if no line is drawn.\n        this.showLine = true;\n        // prop: showMarker\n        // whether or not to show the markers at the data points.\n        this.showMarker = true;\n        // prop: index\n        // 0 based index of this series in the plot series array.\n        this.index;\n        // prop: fill\n        // true or false, whether to fill under lines or in bars.\n        // May not be implemented in all renderers.\n        this.fill = false;\n        // prop: fillColor\n        // CSS color spec to use for fill under line.  Defaults to line color.\n        this.fillColor;\n        // prop: fillAlpha\n        // Alpha transparency to apply to the fill under the line.\n        // Use this to adjust alpha separate from fill color.\n        this.fillAlpha;\n        // prop: fillAndStroke\n        // If true will stroke the line (with color this.color) as well as fill under it.\n        // Applies only when fill is true.\n        this.fillAndStroke = false;\n        // prop: disableStack\n        // true to not stack this series with other series in the plot.\n        // To render properly, non-stacked series must come after any stacked series\n        // in the plot's data series array.  So, the plot's data series array would look like:\n        // > [stackedSeries1, stackedSeries2, ..., nonStackedSeries1, nonStackedSeries2, ...]\n        // disableStack will put a gap in the stacking order of series, and subsequent\n        // stacked series will not fill down through the non-stacked series and will\n        // most likely not stack properly on top of the non-stacked series.\n        this.disableStack = false;\n        // _stack is set by the Plot if the plot is a stacked chart.\n        // will stack lines or bars on top of one another to build a \"mountain\" style chart.\n        // May not be implemented in all renderers.\n        this._stack = false;\n        // prop: neighborThreshold\n        // how close or far (in pixels) the cursor must be from a point marker to detect the point.\n        this.neighborThreshold = 4;\n        // prop: fillToZero\n        // true will force bar and filled series to fill toward zero on the fill Axis.\n        this.fillToZero = false;\n        // prop: fillToValue\n        // fill a filled series to this value on the fill axis.\n        // Works in conjunction with fillToZero, so that must be true.\n        this.fillToValue = 0;\n        // prop: fillAxis\n        // Either 'x' or 'y'.  Which axis to fill the line toward if fillToZero is true.\n        // 'y' means fill up/down to 0 on the y axis for this series.\n        this.fillAxis = 'y';\n        // prop: useNegativeColors\n        // true to color negative values differently in filled and bar charts.\n        this.useNegativeColors = true;\n        this._stackData = [];\n        // _plotData accounts for stacking.  If plots not stacked, _plotData and data are same.  If\n        // stacked, _plotData is accumulation of stacking data.\n        this._plotData = [];\n        // _plotValues hold the individual x and y values that will be plotted for this series.\n        this._plotValues = {x:[], y:[]};\n        // statistics about the intervals between data points.  Used for auto scaling.\n        this._intervals = {x:{}, y:{}};\n        // data from the previous series, for stacked charts.\n        this._prevPlotData = [];\n        this._prevGridData = [];\n        this._stackAxis = 'y';\n        this._primaryAxis = '_xaxis';\n        // give each series a canvas to draw on.  This should allow for redrawing speedups.\n        this.canvas = new $.jqplot.GenericCanvas();\n        this.shadowCanvas = new $.jqplot.GenericCanvas();\n        this.plugins = {};\n        // sum of y values in this series.\n        this._sumy = 0;\n        this._sumx = 0;\n        this._type = '';\n        this.step = false;\n    }\n    \n    Series.prototype = new $.jqplot.ElemContainer();\n    Series.prototype.constructor = Series;\n    \n    Series.prototype.init = function(index, gridbw, plot) {\n        // weed out any null values in the data.\n        this.index = index;\n        this.gridBorderWidth = gridbw;\n        var d = this.data;\n        var temp = [], i, l;\n        for (i=0, l=d.length; i<l; i++) {\n            if (! this.breakOnNull) {\n                if (d[i] == null || d[i][0] == null || d[i][1] == null) {\n                    continue;\n                }\n                else {\n                    temp.push(d[i]);\n                }\n            }\n            else {\n                // TODO: figure out what to do with null values\n                // probably involve keeping nulls in data array\n                // and then updating renderers to break line\n                // when it hits null value.\n                // For now, just keep value.\n                temp.push(d[i]);\n            }\n        }\n        this.data = temp;\n\n        // parse the renderer options and apply default colors if not provided\n        // Set color even if not shown, so series don't change colors when other\n        // series on plot shown/hidden.\n        if (!this.color) {\n            this.color = plot.colorGenerator.get(this.index);\n        }\n        if (!this.negativeColor) {\n            this.negativeColor = plot.negativeColorGenerator.get(this.index);\n        }\n\n\n        if (!this.fillColor) {\n            this.fillColor = this.color;\n        }\n        if (this.fillAlpha) {\n            var comp = $.jqplot.normalize2rgb(this.fillColor);\n            var comp = $.jqplot.getColorComponents(comp);\n            this.fillColor = 'rgba('+comp[0]+','+comp[1]+','+comp[2]+','+this.fillAlpha+')';\n        }\n        if ($.isFunction(this.renderer)) {\n            this.renderer = new this.renderer();  \n        }\n        this.renderer.init.call(this, this.rendererOptions, plot);\n        this.markerRenderer = new this.markerRenderer();\n        if (!this.markerOptions.color) {\n            this.markerOptions.color = this.color;\n        }\n        if (this.markerOptions.show == null) {\n            this.markerOptions.show = this.showMarker;\n        }\n        this.showMarker = this.markerOptions.show;\n        // the markerRenderer is called within its own scope, don't want to overwrite series options!!\n        this.markerRenderer.init(this.markerOptions);\n    };\n    \n    // data - optional data point array to draw using this series renderer\n    // gridData - optional grid data point array to draw using this series renderer\n    // stackData - array of cumulative data for stacked plots.\n    Series.prototype.draw = function(sctx, opts, plot) {\n        var options = (opts == undefined) ? {} : opts;\n        sctx = (sctx == undefined) ? this.canvas._ctx : sctx;\n        \n        var j, data, gridData;\n        \n        // hooks get called even if series not shown\n        // we don't clear canvas here, it would wipe out all other series as well.\n        for (j=0; j<$.jqplot.preDrawSeriesHooks.length; j++) {\n            $.jqplot.preDrawSeriesHooks[j].call(this, sctx, options);\n        }\n        if (this.show) {\n            this.renderer.setGridData.call(this, plot);\n            if (!options.preventJqPlotSeriesDrawTrigger) {\n                $(sctx.canvas).trigger('jqplotSeriesDraw', [this.data, this.gridData]);\n            }\n            data = [];\n            if (options.data) {\n                data = options.data;\n            }\n            else if (!this._stack) {\n                data = this.data;\n            }\n            else {\n                data = this._plotData;\n            }\n            gridData = options.gridData || this.renderer.makeGridData.call(this, data, plot);\n\n            if (this._type === 'line' && this.renderer.smooth && this.renderer._smoothedData.length) {\n                gridData = this.renderer._smoothedData;\n            }\n\n            this.renderer.draw.call(this, sctx, gridData, options, plot);\n        }\n        \n        for (j=0; j<$.jqplot.postDrawSeriesHooks.length; j++) {\n            $.jqplot.postDrawSeriesHooks[j].call(this, sctx, options, plot);\n        }\n        \n        sctx = opts = plot = j = data = gridData = null;\n    };\n    \n    Series.prototype.drawShadow = function(sctx, opts, plot) {\n        var options = (opts == undefined) ? {} : opts;\n        sctx = (sctx == undefined) ? this.shadowCanvas._ctx : sctx;\n        \n        var j, data, gridData;\n        \n        // hooks get called even if series not shown\n        // we don't clear canvas here, it would wipe out all other series as well.\n        for (j=0; j<$.jqplot.preDrawSeriesShadowHooks.length; j++) {\n            $.jqplot.preDrawSeriesShadowHooks[j].call(this, sctx, options);\n        }\n        if (this.shadow) {\n            this.renderer.setGridData.call(this, plot);\n\n            data = [];\n            if (options.data) {\n                data = options.data;\n            }\n            else if (!this._stack) {\n                data = this.data;\n            }\n            else {\n                data = this._plotData;\n            }\n            gridData = options.gridData || this.renderer.makeGridData.call(this, data, plot);\n        \n            this.renderer.drawShadow.call(this, sctx, gridData, options, plot);\n        }\n        \n        for (j=0; j<$.jqplot.postDrawSeriesShadowHooks.length; j++) {\n            $.jqplot.postDrawSeriesShadowHooks[j].call(this, sctx, options);\n        }\n        \n        sctx = opts = plot = j = data = gridData = null;\n        \n    };\n    \n    // toggles series display on plot, e.g. show/hide series\n    Series.prototype.toggleDisplay = function(ev, callback) {\n        var s, speed;\n        if (ev.data.series) {\n            s = ev.data.series;\n        }\n        else {\n            s = this;\n        }\n\n        if (ev.data.speed) {\n            speed = ev.data.speed;\n        }\n        if (speed) {\n            // this can be tricky because series may not have a canvas element if replotting.\n            if (s.canvas._elem.is(':hidden') || !s.show) {\n                s.show = true;\n\n                s.canvas._elem.removeClass('jqplot-series-hidden');\n                if (s.shadowCanvas._elem) {\n                    s.shadowCanvas._elem.fadeIn(speed);\n                }\n                s.canvas._elem.fadeIn(speed, callback);\n                s.canvas._elem.nextAll('.jqplot-point-label.jqplot-series-'+s.index).fadeIn(speed);\n            }\n            else {\n                s.show = false;\n\n                s.canvas._elem.addClass('jqplot-series-hidden');\n                if (s.shadowCanvas._elem) {\n                    s.shadowCanvas._elem.fadeOut(speed);\n                }\n                s.canvas._elem.fadeOut(speed, callback);\n                s.canvas._elem.nextAll('.jqplot-point-label.jqplot-series-'+s.index).fadeOut(speed);\n            }\n        }\n        else {\n            // this can be tricky because series may not have a canvas element if replotting.\n            if (s.canvas._elem.is(':hidden') || !s.show) {\n                s.show = true;\n\n                s.canvas._elem.removeClass('jqplot-series-hidden');\n                if (s.shadowCanvas._elem) {\n                    s.shadowCanvas._elem.show();\n                }\n                s.canvas._elem.show(0, callback);\n                s.canvas._elem.nextAll('.jqplot-point-label.jqplot-series-'+s.index).show();\n            }\n            else {\n                s.show = false;\n\n                s.canvas._elem.addClass('jqplot-series-hidden');\n                if (s.shadowCanvas._elem) {\n                    s.shadowCanvas._elem.hide();\n                }\n                s.canvas._elem.hide(0, callback);\n                s.canvas._elem.nextAll('.jqplot-point-label.jqplot-series-'+s.index).hide();\n            }\n        }\n    };\n    \n\n\n    /**\n     * Class: Grid\n     * \n     * Object representing the grid on which the plot is drawn.  The grid in this\n     * context is the area bounded by the axes, the area which will contain the series.\n     * Note, the series are drawn on their own canvas.\n     * The Grid object cannot be instantiated directly, but is created by the Plot object.  \n     * Grid properties can be set or overridden by the options passed in from the user.\n     */\n    function Grid() {\n        $.jqplot.ElemContainer.call(this);\n        // Group: Properties\n        \n        // prop: drawGridlines\n        // whether to draw the gridlines on the plot.\n        this.drawGridlines = true;\n        // prop: gridLineColor\n        // color of the grid lines.\n        this.gridLineColor = '#cccccc';\n        // prop: gridLineWidth\n        // width of the grid lines.\n        this.gridLineWidth = 1.0;\n        // prop: background\n        // css spec for the background color.\n        this.background = '#fffdf6';\n        // prop: borderColor\n        // css spec for the color of the grid border.\n        this.borderColor = '#999999';\n        // prop: borderWidth\n        // width of the border in pixels.\n        this.borderWidth = 2.0;\n        // prop: drawBorder\n        // True to draw border around grid.\n        this.drawBorder = true;\n        // prop: shadow\n        // whether to show a shadow behind the grid.\n        this.shadow = true;\n        // prop: shadowAngle\n        // shadow angle in degrees\n        this.shadowAngle = 45;\n        // prop: shadowOffset\n        // Offset of each shadow stroke from the border in pixels\n        this.shadowOffset = 1.5;\n        // prop: shadowWidth\n        // width of the stoke for the shadow\n        this.shadowWidth = 3;\n        // prop: shadowDepth\n        // Number of times shadow is stroked, each stroke offset shadowOffset from the last.\n        this.shadowDepth = 3;\n        // prop: shadowColor\n        // an optional css color spec for the shadow in 'rgba(n, n, n, n)' form\n        this.shadowColor = null;\n        // prop: shadowAlpha\n        // Alpha channel transparency of shadow.  0 = transparent.\n        this.shadowAlpha = '0.07';\n        this._left;\n        this._top;\n        this._right;\n        this._bottom;\n        this._width;\n        this._height;\n        this._axes = [];\n        // prop: renderer\n        // Instance of a renderer which will actually render the grid,\n        // see <$.jqplot.CanvasGridRenderer>.\n        this.renderer = $.jqplot.CanvasGridRenderer;\n        // prop: rendererOptions\n        // Options to pass on to the renderer,\n        // see <$.jqplot.CanvasGridRenderer>.\n        this.rendererOptions = {};\n        this._offsets = {top:null, bottom:null, left:null, right:null};\n    }\n    \n    Grid.prototype = new $.jqplot.ElemContainer();\n    Grid.prototype.constructor = Grid;\n    \n    Grid.prototype.init = function() {\n        if ($.isFunction(this.renderer)) {\n            this.renderer = new this.renderer();  \n        }\n        this.renderer.init.call(this, this.rendererOptions);\n    };\n    \n    Grid.prototype.createElement = function(offsets,plot) {\n        this._offsets = offsets;\n        return this.renderer.createElement.call(this, plot);\n    };\n    \n    Grid.prototype.draw = function() {\n        this.renderer.draw.call(this);\n    };\n    \n    $.jqplot.GenericCanvas = function() {\n        $.jqplot.ElemContainer.call(this);\n        this._ctx;  \n    };\n    \n    $.jqplot.GenericCanvas.prototype = new $.jqplot.ElemContainer();\n    $.jqplot.GenericCanvas.prototype.constructor = $.jqplot.GenericCanvas;\n    \n    $.jqplot.GenericCanvas.prototype.createElement = function(offsets, clss, plotDimensions, plot) {\n        this._offsets = offsets;\n        var klass = 'jqplot';\n        if (clss != undefined) {\n            klass = clss;\n        }\n        var elem;\n\n        elem = plot.canvasManager.getCanvas();\n        \n        // if new plotDimensions supplied, use them.\n        if (plotDimensions != null) {\n            this._plotDimensions = plotDimensions;\n        }\n        \n        elem.width = this._plotDimensions.width - this._offsets.left - this._offsets.right;\n        elem.height = this._plotDimensions.height - this._offsets.top - this._offsets.bottom;\n        this._elem = $(elem);\n        this._elem.css({ position: 'absolute', left: this._offsets.left, top: this._offsets.top });\n        \n        this._elem.addClass(klass);\n        \n        elem = plot.canvasManager.initCanvas(elem);\n        \n        elem = null;\n        return this._elem;\n    };\n    \n    $.jqplot.GenericCanvas.prototype.setContext = function() {\n        this._ctx = this._elem.get(0).getContext(\"2d\");\n        return this._ctx;\n    };\n    \n    // Memory Leaks patch\n    $.jqplot.GenericCanvas.prototype.resetCanvas = function() {\n      if (this._elem) {\n        if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n           window.G_vmlCanvasManager.uninitElement(this._elem.get(0));\n        }\n        \n        //this._elem.remove();\n        this._elem.emptyForce();\n      }\n      \n      this._ctx = null;\n    };\n    \n    $.jqplot.HooksManager = function () {\n        this.hooks =[];\n        this.args = [];\n    };\n    \n    $.jqplot.HooksManager.prototype.addOnce = function(fn, args) {\n        args = args || [];\n        var havehook = false;\n        for (var i=0, l=this.hooks.length; i<l; i++) {\n            if (this.hooks[i] == fn) {\n                havehook = true;\n            }\n        }\n        if (!havehook) {\n            this.hooks.push(fn);\n            this.args.push(args);\n        }\n    };\n    \n    $.jqplot.HooksManager.prototype.add = function(fn, args) {\n        args = args || [];\n        this.hooks.push(fn);\n        this.args.push(args);\n    };\n    \n    $.jqplot.EventListenerManager = function () {\n        this.hooks =[];\n    };\n    \n    $.jqplot.EventListenerManager.prototype.addOnce = function(ev, fn) {\n        var havehook = false, h, i;\n        for (var i=0, l=this.hooks.length; i<l; i++) {\n            h = this.hooks[i];\n            if (h[0] == ev && h[1] == fn) {\n                havehook = true;\n            }\n        }\n        if (!havehook) {\n            this.hooks.push([ev, fn]);\n        }\n    };\n    \n    $.jqplot.EventListenerManager.prototype.add = function(ev, fn) {\n        this.hooks.push([ev, fn]);\n    };\n\n\n    var _axisNames = ['yMidAxis', 'xaxis', 'yaxis', 'x2axis', 'y2axis', 'y3axis', 'y4axis', 'y5axis', 'y6axis', 'y7axis', 'y8axis', 'y9axis'];\n\n    /**\n     * Class: jqPlot\n     * Plot object returned by call to $.jqplot.  Handles parsing user options,\n     * creating sub objects (Axes, legend, title, series) and rendering the plot.\n     */\n    function jqPlot() {\n        // Group: Properties\n        // These properties are specified at the top of the options object\n        // like so:\n        // > {\n        // >     axesDefaults:{min:0},\n        // >     series:[{color:'#6633dd'}],\n        // >     title: 'A Plot'\n        // > }\n        //\n\n        // prop: animate\n        // True to animate the series on initial plot draw (renderer dependent).\n        // Actual animation functionality must be supported in the renderer.\n        this.animate = false;\n        // prop: animateReplot\n        // True to animate series after a call to the replot() method.\n        // Use with caution!  Replots can happen very frequently under\n        // certain circumstances (e.g. resizing, dragging points) and\n        // animation in these situations can cause problems.\n        this.animateReplot = false;\n        // prop: axes\n        // up to 4 axes are supported, each with its own options, \n        // See <Axis> for axis specific options.\n        this.axes = {xaxis: new Axis('xaxis'), yaxis: new Axis('yaxis'), x2axis: new Axis('x2axis'), y2axis: new Axis('y2axis'), y3axis: new Axis('y3axis'), y4axis: new Axis('y4axis'), y5axis: new Axis('y5axis'), y6axis: new Axis('y6axis'), y7axis: new Axis('y7axis'), y8axis: new Axis('y8axis'), y9axis: new Axis('y9axis'), yMidAxis: new Axis('yMidAxis')};\n        this.baseCanvas = new $.jqplot.GenericCanvas();\n        // true to intercept right click events and fire a 'jqplotRightClick' event.\n        // this will also block the context menu.\n        this.captureRightClick = false;\n        // prop: data\n        // user's data.  Data should *NOT* be specified in the options object,\n        // but be passed in as the second argument to the $.jqplot() function.\n        // The data property is described here soley for reference. \n        // The data should be in the form of an array of 2D or 1D arrays like\n        // > [ [[x1, y1], [x2, y2],...], [y1, y2, ...] ].\n        this.data = [];\n        // prop: dataRenderer\n        // A callable which can be used to preprocess data passed into the plot.\n        // Will be called with 3 arguments: the plot data, a reference to the plot,\n        // and the value of dataRendererOptions.\n        this.dataRenderer;\n        // prop: dataRendererOptions\n        // Options that will be passed to the dataRenderer.\n        // Can be of any type.\n        this.dataRendererOptions;\n        this.defaults = {\n            // prop: axesDefaults\n            // default options that will be applied to all axes.\n            // see <Axis> for axes options.\n            axesDefaults: {},\n            axes: {xaxis:{}, yaxis:{}, x2axis:{}, y2axis:{}, y3axis:{}, y4axis:{}, y5axis:{}, y6axis:{}, y7axis:{}, y8axis:{}, y9axis:{}, yMidAxis:{}},\n            // prop: seriesDefaults\n            // default options that will be applied to all series.\n            // see <Series> for series options.\n            seriesDefaults: {},\n            series:[]\n        };\n        // prop: defaultAxisStart\n        // 1-D data series are internally converted into 2-D [x,y] data point arrays\n        // by jqPlot.  This is the default starting value for the missing x or y value.\n        // The added data will be a monotonically increasing series (e.g. [1, 2, 3, ...])\n        // starting at this value.\n        this.defaultAxisStart = 1;\n        // this.doCustomEventBinding = true;\n        // prop: drawIfHidden\n        // True to execute the draw method even if the plot target is hidden.\n        // Generally, this should be false.  Most plot elements will not be sized/\n        // positioned correclty if renderered into a hidden container.  To render into\n        // a hidden container, call the replot method when the container is shown.\n        this.drawIfHidden = false;\n        this.eventCanvas = new $.jqplot.GenericCanvas();\n        // prop: fillBetween\n        // Fill between 2 line series in a plot.\n        // Options object:\n        // {\n        //    series1: first index (0 based) of series in fill\n        //    series2: second index (0 based) of series in fill\n        //    color: color of fill [default fillColor of series1]\n        //    baseSeries:  fill will be drawn below this series (0 based index)\n        //    fill: false to turn off fill [default true].\n        //  }\n        this.fillBetween = {\n            series1: null,\n            series2: null,\n            color: null,\n            baseSeries: 0,\n            fill: true\n        };\n        // prop; fontFamily\n        // css spec for the font-family attribute.  Default for the entire plot.\n        this.fontFamily;\n        // prop: fontSize\n        // css spec for the font-size attribute.  Default for the entire plot.\n        this.fontSize;\n        // prop: grid\n        // See <Grid> for grid specific options.\n        this.grid = new Grid();\n        // prop: legend\n        // see <$.jqplot.TableLegendRenderer>\n        this.legend = new Legend();\n        // prop: noDataIndicator\n        // Options to set up a mock plot with a data loading indicator if no data is specified.\n        this.noDataIndicator = {    \n            show: false,\n            indicator: 'Loading Data...',\n            axes: {\n                xaxis: {\n                    min: 0,\n                    max: 10,\n                    tickInterval: 2,\n                    show: true\n                },\n                yaxis: {\n                    min: 0,\n                    max: 12,\n                    tickInterval: 3,\n                    show: true\n                }\n            }\n        };\n        // prop: negativeSeriesColors \n        // colors to use for portions of the line below zero.\n        this.negativeSeriesColors = $.jqplot.config.defaultNegativeColors;\n        // container to hold all of the merged options.  Convienence for plugins.\n        this.options = {};\n        this.previousSeriesStack = [];\n        // Namespace to hold plugins.  Generally non-renderer plugins add themselves to here.\n        this.plugins = {};\n        // prop: series\n        // Array of series object options.\n        // see <Series> for series specific options.\n        this.series = [];\n        // array of series indices. Keep track of order\n        // which series canvases are displayed, lowest\n        // to highest, back to front.\n        this.seriesStack = [];\n        // prop: seriesColors\n        // Ann array of CSS color specifications that will be applied, in order,\n        // to the series in the plot.  Colors will wrap around so, if their\n        // are more series than colors, colors will be reused starting at the\n        // beginning.  For pie charts, this specifies the colors of the slices.\n        this.seriesColors = $.jqplot.config.defaultColors;\n        // prop: sortData\n        // false to not sort the data passed in by the user.\n        // Many bar, stacked and other graphs as well as many plugins depend on\n        // having sorted data.\n        this.sortData = true;\n        // prop: stackSeries\n        // true or false, creates a stack or \"mountain\" plot.\n        // Not all series renderers may implement this option.\n        this.stackSeries = false;\n        // a shortcut for axis syncTicks options.  Not implemented yet.\n        this.syncXTicks = true;\n        // a shortcut for axis syncTicks options.  Not implemented yet.\n        this.syncYTicks = true;\n        // the jquery object for the dom target.\n        this.target = null; \n        // The id of the dom element to render the plot into\n        this.targetId = null;\n        // prop textColor\n        // css spec for the css color attribute.  Default for the entire plot.\n        this.textColor;\n        // prop: title\n        // Title object.  See <Title> for specific options.  As a shortcut, you\n        // can specify the title option as just a string like: title: 'My Plot'\n        // and this will create a new title object with the specified text.\n        this.title = new Title();\n        // Count how many times the draw method has been called while the plot is visible.\n        // Mostly used to test if plot has never been dran (=0), has been successfully drawn\n        // into a visible container once (=1) or draw more than once into a visible container.\n        // Can use this in tests to see if plot has been visibly drawn at least one time.\n        // After plot has been visibly drawn once, it generally doesn't need redrawing if its\n        // container is hidden and shown.\n        this._drawCount = 0;\n        // sum of y values for all series in plot.\n        // used in mekko chart.\n        this._sumy = 0;\n        this._sumx = 0;\n        // array to hold the cumulative stacked series data.\n        // used to ajust the individual series data, which won't have access to other\n        // series data.\n        this._stackData = [];\n        // array that holds the data to be plotted. This will be the series data\n        // merged with the the appropriate data from _stackData according to the stackAxis.\n        this._plotData = [];\n        this._width = null;\n        this._height = null; \n        this._plotDimensions = {height:null, width:null};\n        this._gridPadding = {top:null, right:null, bottom:null, left:null};\n        this._defaultGridPadding = {top:10, right:10, bottom:23, left:10};\n\n        this._addDomReference = $.jqplot.config.addDomReference;\n\n        this.preInitHooks = new $.jqplot.HooksManager();\n        this.postInitHooks = new $.jqplot.HooksManager();\n        this.preParseOptionsHooks = new $.jqplot.HooksManager();\n        this.postParseOptionsHooks = new $.jqplot.HooksManager();\n        this.preDrawHooks = new $.jqplot.HooksManager();\n        this.postDrawHooks = new $.jqplot.HooksManager();\n        this.preDrawSeriesHooks = new $.jqplot.HooksManager();\n        this.postDrawSeriesHooks = new $.jqplot.HooksManager();\n        this.preDrawLegendHooks = new $.jqplot.HooksManager();\n        this.addLegendRowHooks = new $.jqplot.HooksManager();\n        this.preSeriesInitHooks = new $.jqplot.HooksManager();\n        this.postSeriesInitHooks = new $.jqplot.HooksManager();\n        this.preParseSeriesOptionsHooks = new $.jqplot.HooksManager();\n        this.postParseSeriesOptionsHooks = new $.jqplot.HooksManager();\n        this.eventListenerHooks = new $.jqplot.EventListenerManager();\n        this.preDrawSeriesShadowHooks = new $.jqplot.HooksManager();\n        this.postDrawSeriesShadowHooks = new $.jqplot.HooksManager();\n        \n        this.colorGenerator = new $.jqplot.ColorGenerator();\n        this.negativeColorGenerator = new $.jqplot.ColorGenerator();\n\n        this.canvasManager = new $.jqplot.CanvasManager();\n\n        this.themeEngine = new $.jqplot.ThemeEngine();\n        \n        var seriesColorsIndex = 0;\n\n        // Group: methods\n        //\n        // method: init\n        // sets the plot target, checks data and applies user\n        // options to plot.\n        this.init = function(target, data, options) {\n            options = options || {};\n            for (var i=0; i<$.jqplot.preInitHooks.length; i++) {\n                $.jqplot.preInitHooks[i].call(this, target, data, options);\n            }\n\n            for (var i=0; i<this.preInitHooks.hooks.length; i++) {\n                this.preInitHooks.hooks[i].call(this, target, data, options);\n            }\n            \n            this.targetId = '#'+target;\n            this.target = $('#'+target);\n\n            //////\n            // Add a reference to plot\n            //////\n            if (this._addDomReference) {\n                this.target.data('jqplot', this);\n            }\n            // remove any error class that may be stuck on target.\n            this.target.removeClass('jqplot-error');\n            if (!this.target.get(0)) {\n                throw new Error(\"No plot target specified\");\n            }\n            \n            // make sure the target is positioned by some means and set css\n            if (this.target.css('position') == 'static') {\n                this.target.css('position', 'relative');\n            }\n            if (!this.target.hasClass('jqplot-target')) {\n                this.target.addClass('jqplot-target');\n            }\n            \n            // if no height or width specified, use a default.\n            if (!this.target.height()) {\n                var h;\n                if (options && options.height) {\n                    h = parseInt(options.height, 10);\n                }\n                else if (this.target.attr('data-height')) {\n                    h = parseInt(this.target.attr('data-height'), 10);\n                }\n                else {\n                    h = parseInt($.jqplot.config.defaultHeight, 10);\n                }\n                this._height = h;\n                this.target.css('height', h+'px');\n            }\n            else {\n                this._height = h = this.target.height();\n            }\n            if (!this.target.width()) {\n                var w;\n                if (options && options.width) {\n                    w = parseInt(options.width, 10);\n                }\n                else if (this.target.attr('data-width')) {\n                    w = parseInt(this.target.attr('data-width'), 10);\n                }\n                else {\n                    w = parseInt($.jqplot.config.defaultWidth, 10);\n                }\n                this._width = w;\n                this.target.css('width', w+'px');\n            }\n            else {\n                this._width = w = this.target.width();\n            }\n\n            for (var i=0, l=_axisNames.length; i<l; i++) {\n                this.axes[_axisNames[i]] = new Axis(_axisNames[i]);\n            }\n            \n            this._plotDimensions.height = this._height;\n            this._plotDimensions.width = this._width;\n            this.grid._plotDimensions = this._plotDimensions;\n            this.title._plotDimensions = this._plotDimensions;\n            this.baseCanvas._plotDimensions = this._plotDimensions;\n            this.eventCanvas._plotDimensions = this._plotDimensions;\n            this.legend._plotDimensions = this._plotDimensions;\n            if (this._height <=0 || this._width <=0 || !this._height || !this._width) {\n                throw new Error(\"Canvas dimension not set\");\n            }\n            \n            if (options.dataRenderer && $.isFunction(options.dataRenderer)) {\n                if (options.dataRendererOptions) {\n                    this.dataRendererOptions = options.dataRendererOptions;\n                }\n                this.dataRenderer = options.dataRenderer;\n                data = this.dataRenderer(data, this, this.dataRendererOptions);\n            }\n            \n            if (options.noDataIndicator && $.isPlainObject(options.noDataIndicator)) {\n                $.extend(true, this.noDataIndicator, options.noDataIndicator);\n            }\n            \n            if (data == null || $.isArray(data) == false || data.length == 0 || $.isArray(data[0]) == false || data[0].length == 0) {\n                \n                if (this.noDataIndicator.show == false) {\n                    throw new Error(\"No data specified\");\n                }\n                \n                else {\n                    // have to be descructive here in order for plot to not try and render series.\n                    // This means that $.jqplot() will have to be called again when there is data.\n                    //delete options.series;\n                    \n                    for (var ax in this.noDataIndicator.axes) {\n                        for (var prop in this.noDataIndicator.axes[ax]) {\n                            this.axes[ax][prop] = this.noDataIndicator.axes[ax][prop];\n                        }\n                    }\n                    \n                    this.postDrawHooks.add(function() {\n                        var eh = this.eventCanvas.getHeight();\n                        var ew = this.eventCanvas.getWidth();\n                        var temp = $('<div class=\"jqplot-noData-container\" style=\"position:absolute;\"></div>');\n                        this.target.append(temp);\n                        temp.height(eh);\n                        temp.width(ew);\n                        temp.css('top', this.eventCanvas._offsets.top);\n                        temp.css('left', this.eventCanvas._offsets.left);\n                        \n                        var temp2 = $('<div class=\"jqplot-noData-contents\" style=\"text-align:center; position:relative; margin-left:auto; margin-right:auto;\"></div>');\n                        temp.append(temp2);\n                        temp2.html(this.noDataIndicator.indicator);\n                        var th = temp2.height();\n                        var tw = temp2.width();\n                        temp2.height(th);\n                        temp2.width(tw);\n                        temp2.css('top', (eh - th)/2 + 'px');\n                    });\n\n                }\n            }\n            \n            // make a copy of the data\n            this.data = $.extend(true, [], data);\n            \n            this.parseOptions(options);\n            \n            if (this.textColor) {\n                this.target.css('color', this.textColor);\n            }\n            if (this.fontFamily) {\n                this.target.css('font-family', this.fontFamily);\n            }\n            if (this.fontSize) {\n                this.target.css('font-size', this.fontSize);\n            }\n            \n            this.title.init();\n            this.legend.init();\n            this._sumy = 0;\n            this._sumx = 0;\n            this.computePlotData();\n            for (var i=0; i<this.series.length; i++) {\n                // set default stacking order for series canvases\n                this.seriesStack.push(i);\n                this.previousSeriesStack.push(i);\n                this.series[i].shadowCanvas._plotDimensions = this._plotDimensions;\n                this.series[i].canvas._plotDimensions = this._plotDimensions;\n                for (var j=0; j<$.jqplot.preSeriesInitHooks.length; j++) {\n                    $.jqplot.preSeriesInitHooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                for (var j=0; j<this.preSeriesInitHooks.hooks.length; j++) {\n                    this.preSeriesInitHooks.hooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                // this.populatePlotData(this.series[i], i);\n                this.series[i]._plotDimensions = this._plotDimensions;\n                this.series[i].init(i, this.grid.borderWidth, this);\n                for (var j=0; j<$.jqplot.postSeriesInitHooks.length; j++) {\n                    $.jqplot.postSeriesInitHooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                for (var j=0; j<this.postSeriesInitHooks.hooks.length; j++) {\n                    this.postSeriesInitHooks.hooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                this._sumy += this.series[i]._sumy;\n                this._sumx += this.series[i]._sumx;\n            }\n\n            var name,\n                axis;\n            for (var i=0, l=_axisNames.length; i<l; i++) {\n                name = _axisNames[i];\n                axis = this.axes[name];\n                axis._plotDimensions = this._plotDimensions;\n                axis.init();\n                if (this.axes[name].borderColor == null) {\n                    if (name.charAt(0) !== 'x' && axis.useSeriesColor === true && axis.show) {\n                        axis.borderColor = axis._series[0].color;\n                    }\n                    else {\n                        axis.borderColor = this.grid.borderColor;\n                    }\n                }\n            }\n            \n            if (this.sortData) {\n                sortData(this.series);\n            }\n            this.grid.init();\n            this.grid._axes = this.axes;\n            \n            this.legend._series = this.series;\n\n            for (var i=0; i<$.jqplot.postInitHooks.length; i++) {\n                $.jqplot.postInitHooks[i].call(this, target, this.data, options);\n            }\n\n            for (var i=0; i<this.postInitHooks.hooks.length; i++) {\n                this.postInitHooks.hooks[i].call(this, target, this.data, options);\n            }\n        };  \n        \n        // method: resetAxesScale\n        // Reset the specified axes min, max, numberTicks and tickInterval properties to null\n        // or reset these properties on all axes if no list of axes is provided.\n        //\n        // Parameters:\n        // axes - Boolean to reset or not reset all axes or an array or object of axis names to reset.\n        this.resetAxesScale = function(axes, options) {\n            var opts = options || {};\n            var ax = axes || this.axes;\n            if (ax === true) {\n                ax = this.axes;\n            }\n            if ($.isArray(ax)) {\n                for (var i = 0; i < ax.length; i++) {\n                    this.axes[ax[i]].resetScale(opts[ax[i]]);\n                }\n            }\n            else if (typeof(ax) === 'object') {\n                for (var name in ax) {\n                    this.axes[name].resetScale(opts[name]);\n                }\n            }\n        };\n        // method: reInitialize\n        // reinitialize plot for replotting.\n        // not called directly.\n        this.reInitialize = function (data, opts) {\n            // Plot should be visible and have a height and width.\n            // If plot doesn't have height and width for some\n            // reason, set it by other means.  Plot must not have\n            // a display:none attribute, however.\n\n            var options = $.extend(true, {}, this.options, opts);\n\n            var target = this.targetId.substr(1);\n            var tdata = (data == null) ? this.data : data;\n\n            for (var i=0; i<$.jqplot.preInitHooks.length; i++) {\n                $.jqplot.preInitHooks[i].call(this, target, tdata, options);\n            }\n\n            for (var i=0; i<this.preInitHooks.hooks.length; i++) {\n                this.preInitHooks.hooks[i].call(this, target, tdata, options);\n            }\n            \n            this._height = this.target.height();\n            this._width = this.target.width();\n            \n            if (this._height <=0 || this._width <=0 || !this._height || !this._width) {\n                throw new Error(\"Target dimension not set\");\n            }\n            \n            this._plotDimensions.height = this._height;\n            this._plotDimensions.width = this._width;\n            this.grid._plotDimensions = this._plotDimensions;\n            this.title._plotDimensions = this._plotDimensions;\n            this.baseCanvas._plotDimensions = this._plotDimensions;\n            this.eventCanvas._plotDimensions = this._plotDimensions;\n            this.legend._plotDimensions = this._plotDimensions;\n\n            var name,\n                t, \n                j, \n                axis;\n\n            for (var i=0, l=_axisNames.length; i<l; i++) {\n                name = _axisNames[i];\n                axis = this.axes[name];\n\n                // Memory Leaks patch : clear ticks elements\n                t = axis._ticks;\n                for (var j = 0, tlen = t.length; j < tlen; j++) {\n                  var el = t[j]._elem;\n                  if (el) {\n                    // if canvas renderer\n                    if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n                      window.G_vmlCanvasManager.uninitElement(el.get(0));\n                    }\n                    el.emptyForce();\n                    el = null;\n                    t._elem = null;\n                  }\n                }\n                t = null;\n\n                delete axis.ticks;\n                delete axis._ticks;\n                this.axes[name] = new Axis(name);\n                this.axes[name]._plotWidth = this._width;\n                this.axes[name]._plotHeight = this._height;\n            }\n            \n            if (data) {\n                if (options.dataRenderer && $.isFunction(options.dataRenderer)) {\n                    if (options.dataRendererOptions) {\n                        this.dataRendererOptions = options.dataRendererOptions;\n                    }\n                    this.dataRenderer = options.dataRenderer;\n                    data = this.dataRenderer(data, this, this.dataRendererOptions);\n                }\n                \n                // make a copy of the data\n                this.data = $.extend(true, [], data);\n            }\n\n            if (opts) {\n                this.parseOptions(options);\n            }\n            \n            this.title._plotWidth = this._width;\n            \n            if (this.textColor) {\n                this.target.css('color', this.textColor);\n            }\n            if (this.fontFamily) {\n                this.target.css('font-family', this.fontFamily);\n            }\n            if (this.fontSize) {\n                this.target.css('font-size', this.fontSize);\n            }\n\n            this.title.init();\n            this.legend.init();\n            this._sumy = 0;\n            this._sumx = 0;\n\n            this.seriesStack = [];\n            this.previousSeriesStack = [];\n\n            this.computePlotData();\n            for (var i=0, l=this.series.length; i<l; i++) {\n                // set default stacking order for series canvases\n                this.seriesStack.push(i);\n                this.previousSeriesStack.push(i);\n                this.series[i].shadowCanvas._plotDimensions = this._plotDimensions;\n                this.series[i].canvas._plotDimensions = this._plotDimensions;\n                for (var j=0; j<$.jqplot.preSeriesInitHooks.length; j++) {\n                    $.jqplot.preSeriesInitHooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                for (var j=0; j<this.preSeriesInitHooks.hooks.length; j++) {\n                    this.preSeriesInitHooks.hooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                // this.populatePlotData(this.series[i], i);\n                this.series[i]._plotDimensions = this._plotDimensions;\n                this.series[i].init(i, this.grid.borderWidth, this);\n                for (var j=0; j<$.jqplot.postSeriesInitHooks.length; j++) {\n                    $.jqplot.postSeriesInitHooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                for (var j=0; j<this.postSeriesInitHooks.hooks.length; j++) {\n                    this.postSeriesInitHooks.hooks[j].call(this.series[i], target, this.data, this.options.seriesDefaults, this.options.series[i], this);\n                }\n                this._sumy += this.series[i]._sumy;\n                this._sumx += this.series[i]._sumx;\n            }\n\n            for (var i=0, l=_axisNames.length; i<l; i++) {\n                name = _axisNames[i];\n                axis = this.axes[name];\n\n                axis._plotDimensions = this._plotDimensions;\n                axis.init();\n                if (axis.borderColor == null) {\n                    if (name.charAt(0) !== 'x' && axis.useSeriesColor === true && axis.show) {\n                        axis.borderColor = axis._series[0].color;\n                    }\n                    else {\n                        axis.borderColor = this.grid.borderColor;\n                    }\n                }\n            }\n            \n            if (this.sortData) {\n                sortData(this.series);\n            }\n            this.grid.init();\n            this.grid._axes = this.axes;\n            \n            this.legend._series = this.series;\n\n            for (var i=0, l=$.jqplot.postInitHooks.length; i<l; i++) {\n                $.jqplot.postInitHooks[i].call(this, target, this.data, options);\n            }\n\n            for (var i=0, l=this.postInitHooks.hooks.length; i<l; i++) {\n                this.postInitHooks.hooks[i].call(this, target, this.data, options);\n            }\n        };\n\n\n\n        // method: quickInit\n        // \n        // Quick reinitialization plot for replotting.\n        // Does not parse options ore recreate axes and series.\n        // not called directly.\n        this.quickInit = function () {\n            // Plot should be visible and have a height and width.\n            // If plot doesn't have height and width for some\n            // reason, set it by other means.  Plot must not have\n            // a display:none attribute, however.\n            \n            this._height = this.target.height();\n            this._width = this.target.width();\n            \n            if (this._height <=0 || this._width <=0 || !this._height || !this._width) {\n                throw new Error(\"Target dimension not set\");\n            }\n            \n            this._plotDimensions.height = this._height;\n            this._plotDimensions.width = this._width;\n            this.grid._plotDimensions = this._plotDimensions;\n            this.title._plotDimensions = this._plotDimensions;\n            this.baseCanvas._plotDimensions = this._plotDimensions;\n            this.eventCanvas._plotDimensions = this._plotDimensions;\n            this.legend._plotDimensions = this._plotDimensions;\n            \n            for (var n in this.axes) {\n                this.axes[n]._plotWidth = this._width;\n                this.axes[n]._plotHeight = this._height;\n            }\n            \n            this.title._plotWidth = this._width;\n            \n            if (this.textColor) {\n                this.target.css('color', this.textColor);\n            }\n            if (this.fontFamily) {\n                this.target.css('font-family', this.fontFamily);\n            }\n            if (this.fontSize) {\n                this.target.css('font-size', this.fontSize);\n            }\n            \n            this._sumy = 0;\n            this._sumx = 0;\n            this.computePlotData();\n            for (var i=0; i<this.series.length; i++) {\n                // this.populatePlotData(this.series[i], i);\n                if (this.series[i]._type === 'line' && this.series[i].renderer.bands.show) {\n                    this.series[i].renderer.initBands.call(this.series[i], this.series[i].renderer.options, this);\n                }\n                this.series[i]._plotDimensions = this._plotDimensions;\n                this.series[i].canvas._plotDimensions = this._plotDimensions;\n                //this.series[i].init(i, this.grid.borderWidth);\n                this._sumy += this.series[i]._sumy;\n                this._sumx += this.series[i]._sumx;\n            }\n\n            var name;\n            \n            for (var j=0; j<12; j++) {\n                name = _axisNames[j];\n                // Memory Leaks patch : clear ticks elements\n                var t = this.axes[name]._ticks;\n                for (var i = 0; i < t.length; i++) {\n                  var el = t[i]._elem;\n                  if (el) {\n                    // if canvas renderer\n                    if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n                      window.G_vmlCanvasManager.uninitElement(el.get(0));\n                    }\n                    el.emptyForce();\n                    el = null;\n                    t._elem = null;\n                  }\n                }\n                t = null;\n                \n                this.axes[name]._plotDimensions = this._plotDimensions;\n                this.axes[name]._ticks = [];\n                // this.axes[name].renderer.init.call(this.axes[name], {});\n            }\n            \n            if (this.sortData) {\n                sortData(this.series);\n            }\n            \n            this.grid._axes = this.axes;\n            \n            this.legend._series = this.series;\n        };\n        \n        // sort the series data in increasing order.\n        function sortData(series) {\n            var d, sd, pd, ppd, ret;\n            for (var i=0; i<series.length; i++) {\n                var check;\n                var bat = [series[i].data, series[i]._stackData, series[i]._plotData, series[i]._prevPlotData];\n                for (var n=0; n<4; n++) {\n                    check = true;\n                    d = bat[n];\n                    if (series[i]._stackAxis == 'x') {\n                        for (var j = 0; j < d.length; j++) {\n                            if (typeof(d[j][1]) != \"number\") {\n                                check = false;\n                                break;\n                            }\n                        }\n                        if (check) {\n                            d.sort(function(a,b) { return a[1] - b[1]; });\n                        }\n                    }\n                    else {\n                        for (var j = 0; j < d.length; j++) {\n                            if (typeof(d[j][0]) != \"number\") {\n                                check = false;\n                                break;\n                            }\n                        }\n                        if (check) {\n                            d.sort(function(a,b) { return a[0] - b[0]; });\n                        }\n                    }\n                }\n               \n            }\n        }\n\n        this.computePlotData = function() {\n            this._plotData = [];\n            this._stackData = [];\n            var series,\n                index,\n                l;\n\n\n            for (index=0, l=this.series.length; index<l; index++) {\n                series = this.series[index];\n                this._plotData.push([]);\n                this._stackData.push([]);\n                var cd = series.data;\n                this._plotData[index] = $.extend(true, [], cd);\n                this._stackData[index] = $.extend(true, [], cd);\n                series._plotData = this._plotData[index];\n                series._stackData = this._stackData[index];\n                var plotValues = {x:[], y:[]};\n\n                if (this.stackSeries && !series.disableStack) {\n                    series._stack = true;\n                    ///////////////////////////\n                    // have to check for nulls\n                    ///////////////////////////\n                    var sidx = (series._stackAxis === 'x') ? 0 : 1;\n\n                    for (var k=0, cdl=cd.length; k<cdl; k++) {\n                        var temp = cd[k][sidx];\n                        if (temp == null) {\n                            temp = 0;\n                        }\n                        this._plotData[index][k][sidx] = temp;\n                        this._stackData[index][k][sidx] = temp;\n\n                        if (index > 0) {\n                            for (var j=index; j--;) {\n                                var prevval = this._plotData[j][k][sidx];\n                                // only need to sum up the stack axis column of data\n                                // and only sum if it is of same sign.\n                                // if previous series isn't same sign, keep looking\n                                // at earlier series untill we find one of same sign.\n                                if (temp * prevval >= 0) {\n                                    this._plotData[index][k][sidx] += prevval;\n                                    this._stackData[index][k][sidx] += prevval;\n                                    break;\n                                } \n                            }\n                        }\n                    }\n\n                }\n                else {\n                    for (var i=0; i<series.data.length; i++) {\n                        plotValues.x.push(series.data[i][0]);\n                        plotValues.y.push(series.data[i][1]);\n                    }\n                    this._stackData.push(series.data);\n                    this.series[index]._stackData = series.data;\n                    this._plotData.push(series.data);\n                    series._plotData = series.data;\n                    series._plotValues = plotValues;\n                }\n                if (index>0) {\n                    series._prevPlotData = this.series[index-1]._plotData;\n                }\n                series._sumy = 0;\n                series._sumx = 0;\n                for (i=series.data.length-1; i>-1; i--) {\n                    series._sumy += series.data[i][1];\n                    series._sumx += series.data[i][0];\n                }\n            }\n\n        };\n        \n        // populate the _stackData and _plotData arrays for the plot and the series.\n        this.populatePlotData = function(series, index) {\n            // if a stacked chart, compute the stacked data\n            this._plotData = [];\n            this._stackData = [];\n            series._stackData = [];\n            series._plotData = [];\n            var plotValues = {x:[], y:[]};\n            if (this.stackSeries && !series.disableStack) {\n                series._stack = true;\n                var sidx = (series._stackAxis === 'x') ? 0 : 1;\n                // var idx = sidx ? 0 : 1;\n                // push the current data into stackData\n                //this._stackData.push(this.series[i].data);\n                var temp = $.extend(true, [], series.data);\n                // create the data that will be plotted for this series\n                var plotdata = $.extend(true, [], series.data);\n                var tempx, tempy, dval, stackval, comparator;\n                // for first series, nothing to add to stackData.\n                for (var j=0; j<index; j++) {\n                    var cd = this.series[j].data;\n                    for (var k=0; k<cd.length; k++) {\n                        dval = cd[k];\n                        tempx = (dval[0] != null) ? dval[0] : 0;\n                        tempy = (dval[1] != null) ? dval[1] : 0;\n                        temp[k][0] += tempx;\n                        temp[k][1] += tempy;\n                        stackval = (sidx) ? tempy : tempx;\n                        // only need to sum up the stack axis column of data\n                        // and only sum if it is of same sign.\n                        if (series.data[k][sidx] * stackval >= 0) {\n                            plotdata[k][sidx] += stackval;\n                        }\n                    }\n                }\n                for (var i=0; i<plotdata.length; i++) {\n                    plotValues.x.push(plotdata[i][0]);\n                    plotValues.y.push(plotdata[i][1]);\n                }\n                this._plotData.push(plotdata);\n                this._stackData.push(temp);\n                series._stackData = temp;\n                series._plotData = plotdata;\n                series._plotValues = plotValues;\n            }\n            else {\n                for (var i=0; i<series.data.length; i++) {\n                    plotValues.x.push(series.data[i][0]);\n                    plotValues.y.push(series.data[i][1]);\n                }\n                this._stackData.push(series.data);\n                this.series[index]._stackData = series.data;\n                this._plotData.push(series.data);\n                series._plotData = series.data;\n                series._plotValues = plotValues;\n            }\n            if (index>0) {\n                series._prevPlotData = this.series[index-1]._plotData;\n            }\n            series._sumy = 0;\n            series._sumx = 0;\n            for (i=series.data.length-1; i>-1; i--) {\n                series._sumy += series.data[i][1];\n                series._sumx += series.data[i][0];\n            }\n        };\n        \n        // function to safely return colors from the color array and wrap around at the end.\n        this.getNextSeriesColor = (function(t) {\n            var idx = 0;\n            var sc = t.seriesColors;\n            \n            return function () { \n                if (idx < sc.length) {\n                    return sc[idx++];\n                }\n                else {\n                    idx = 0;\n                    return sc[idx++];\n                }\n            };\n        })(this);\n    \n        this.parseOptions = function(options){\n            for (var i=0; i<this.preParseOptionsHooks.hooks.length; i++) {\n                this.preParseOptionsHooks.hooks[i].call(this, options);\n            }\n            for (var i=0; i<$.jqplot.preParseOptionsHooks.length; i++) {\n                $.jqplot.preParseOptionsHooks[i].call(this, options);\n            }\n            this.options = $.extend(true, {}, this.defaults, options);\n            var opts = this.options;\n            this.animate = opts.animate;\n            this.animateReplot = opts.animateReplot;\n            this.stackSeries = opts.stackSeries;\n            if ($.isPlainObject(opts.fillBetween)) {\n\n                var temp = ['series1', 'series2', 'color', 'baseSeries', 'fill'], \n                    tempi;\n\n                for (var i=0, l=temp.length; i<l; i++) {\n                    tempi = temp[i];\n                    if (opts.fillBetween[tempi] != null) {\n                        this.fillBetween[tempi] = opts.fillBetween[tempi];\n                    }\n                }\n            }\n\n            if (opts.seriesColors) {\n                this.seriesColors = opts.seriesColors;\n            }\n            if (opts.negativeSeriesColors) {\n                this.negativeSeriesColors = opts.negativeSeriesColors;\n            }\n            if (opts.captureRightClick) {\n                this.captureRightClick = opts.captureRightClick;\n            }\n            this.defaultAxisStart = (options && options.defaultAxisStart != null) ? options.defaultAxisStart : this.defaultAxisStart;\n            this.colorGenerator.setColors(this.seriesColors);\n            this.negativeColorGenerator.setColors(this.negativeSeriesColors);\n            // var cg = new this.colorGenerator(this.seriesColors);\n            // var ncg = new this.colorGenerator(this.negativeSeriesColors);\n            // this._gridPadding = this.options.gridPadding;\n            $.extend(true, this._gridPadding, opts.gridPadding);\n            this.sortData = (opts.sortData != null) ? opts.sortData : this.sortData;\n            for (var i=0; i<12; i++) {\n                var n = _axisNames[i];\n                var axis = this.axes[n];\n                axis._options = $.extend(true, {}, opts.axesDefaults, opts.axes[n]);\n                $.extend(true, axis, opts.axesDefaults, opts.axes[n]);\n                axis._plotWidth = this._width;\n                axis._plotHeight = this._height;\n            }\n            // if (this.data.length == 0) {\n            //     this.data = [];\n            //     for (var i=0; i<this.options.series.length; i++) {\n            //         this.data.push(this.options.series.data);\n            //     }    \n            // }\n                \n            var normalizeData = function(data, dir, start) {\n                // return data as an array of point arrays,\n                // in form [[x1,y1...], [x2,y2...], ...]\n                var temp = [];\n                var i, l;\n                dir = dir || 'vertical';\n                if (!$.isArray(data[0])) {\n                    // we have a series of scalars.  One line with just y values.\n                    // turn the scalar list of data into a data array of form:\n                    // [[1, data[0]], [2, data[1]], ...]\n                    for (i=0, l=data.length; i<l; i++) {\n                        if (dir == 'vertical') {\n                            temp.push([start + i, data[i]]);   \n                        }\n                        else {\n                            temp.push([data[i], start+i]);\n                        }\n                    }\n                }            \n                else {\n                    // we have a properly formatted data series, copy it.\n                    $.extend(true, temp, data);\n                }\n                return temp;\n            };\n\n            var colorIndex = 0;\n            this.series = [];\n            for (var i=0; i<this.data.length; i++) {\n                var sopts = $.extend(true, {index: i}, {seriesColors:this.seriesColors, negativeSeriesColors:this.negativeSeriesColors}, this.options.seriesDefaults, this.options.series[i], {rendererOptions:{animation:{show: this.animate}}});\n                // pass in options in case something needs set prior to initialization.\n                var temp = new Series(sopts);\n                for (var j=0; j<$.jqplot.preParseSeriesOptionsHooks.length; j++) {\n                    $.jqplot.preParseSeriesOptionsHooks[j].call(temp, this.options.seriesDefaults, this.options.series[i]);\n                }\n                for (var j=0; j<this.preParseSeriesOptionsHooks.hooks.length; j++) {\n                    this.preParseSeriesOptionsHooks.hooks[j].call(temp, this.options.seriesDefaults, this.options.series[i]);\n                }\n                // Now go back and apply the options to the series.  Really should just do this during initializaiton, but don't want to\n                // mess up preParseSeriesOptionsHooks at this point.\n                $.extend(true, temp, sopts);\n                var dir = 'vertical';\n                if (temp.renderer === $.jqplot.BarRenderer && temp.rendererOptions && temp.rendererOptions.barDirection == 'horizontal') {\n                    dir = 'horizontal';\n                    temp._stackAxis = 'x';\n                    temp._primaryAxis = '_yaxis';\n                }\n                temp.data = normalizeData(this.data[i], dir, this.defaultAxisStart);\n                switch (temp.xaxis) {\n                    case 'xaxis':\n                        temp._xaxis = this.axes.xaxis;\n                        break;\n                    case 'x2axis':\n                        temp._xaxis = this.axes.x2axis;\n                        break;\n                    default:\n                        break;\n                }\n                temp._yaxis = this.axes[temp.yaxis];\n                temp._xaxis._series.push(temp);\n                temp._yaxis._series.push(temp);\n                if (temp.show) {\n                    temp._xaxis.show = true;\n                    temp._yaxis.show = true;\n                }\n                else {\n                    if (temp._xaxis.scaleToHiddenSeries) {\n                        temp._xaxis.show = true;\n                    }\n                    if (temp._yaxis.scaleToHiddenSeries) {\n                        temp._yaxis.show = true;\n                    }\n                }\n\n                // // parse the renderer options and apply default colors if not provided\n                // if (!temp.color && temp.show != false) {\n                //     temp.color = cg.next();\n                //     colorIndex = cg.getIndex() - 1;;\n                // }\n                // if (!temp.negativeColor && temp.show != false) {\n                //     temp.negativeColor = ncg.get(colorIndex);\n                //     ncg.setIndex(colorIndex);\n                // }\n                if (!temp.label) {\n                    temp.label = 'Series '+ (i+1).toString();\n                }\n                // temp.rendererOptions.show = temp.show;\n                // $.extend(true, temp.renderer, {color:this.seriesColors[i]}, this.rendererOptions);\n                this.series.push(temp);  \n                for (var j=0; j<$.jqplot.postParseSeriesOptionsHooks.length; j++) {\n                    $.jqplot.postParseSeriesOptionsHooks[j].call(this.series[i], this.options.seriesDefaults, this.options.series[i]);\n                }\n                for (var j=0; j<this.postParseSeriesOptionsHooks.hooks.length; j++) {\n                    this.postParseSeriesOptionsHooks.hooks[j].call(this.series[i], this.options.seriesDefaults, this.options.series[i]);\n                }\n            }\n            \n            // copy the grid and title options into this object.\n            $.extend(true, this.grid, this.options.grid);\n            // if axis border properties aren't set, set default.\n            for (var i=0, l=_axisNames.length; i<l; i++) {\n                var n = _axisNames[i];\n                var axis = this.axes[n];\n                if (axis.borderWidth == null) {\n                    axis.borderWidth =this.grid.borderWidth;\n                }\n            }\n            \n            if (typeof this.options.title == 'string') {\n                this.title.text = this.options.title;\n            }\n            else if (typeof this.options.title == 'object') {\n                $.extend(true, this.title, this.options.title);\n            }\n            this.title._plotWidth = this._width;\n            this.legend.setOptions(this.options.legend);\n            \n            for (var i=0; i<$.jqplot.postParseOptionsHooks.length; i++) {\n                $.jqplot.postParseOptionsHooks[i].call(this, options);\n            }\n            for (var i=0; i<this.postParseOptionsHooks.hooks.length; i++) {\n                this.postParseOptionsHooks.hooks[i].call(this, options);\n            }\n        };\n        \n        // method: destroy\n        // Releases all resources occupied by the plot\n        this.destroy = function() {\n            this.canvasManager.freeAllCanvases();\n            if (this.eventCanvas && this.eventCanvas._elem) {\n                this.eventCanvas._elem.unbind();\n            }\n            // Couple of posts on Stack Overflow indicate that empty() doesn't\n            // always cear up the dom and release memory.  Sometimes setting\n            // innerHTML property to null is needed.  Particularly on IE, may \n            // have to directly set it to null, bypassing $.\n            this.target.empty();\n\n            this.target[0].innerHTML = '';\n        };\n        \n        // method: replot\n        // Does a reinitialization of the plot followed by\n        // a redraw.  Method could be used to interactively\n        // change plot characteristics and then replot.\n        //\n        // Parameters:\n        // options - Options used for replotting.\n        //\n        // Properties:\n        // clear - false to not clear (empty) the plot container before replotting (default: true).\n        // resetAxes - true to reset all axes min, max, numberTicks and tickInterval setting so axes will rescale themselves.\n        //             optionally pass in list of axes to reset (e.g. ['xaxis', 'y2axis']) (default: false).\n        this.replot = function(options) {\n            var opts =  options || {};\n            var data = opts.data || null;\n            var clear = (opts.clear === false) ? false : true;\n            var resetAxes = opts.resetAxes || false;\n            delete opts.data;\n            delete opts.clear;\n            delete opts.resetAxes;\n\n            this.target.trigger('jqplotPreReplot');\n            \n            if (clear) {\n                this.destroy();\n            }\n            // if have data or other options, full reinit.\n            // otherwise, quickinit.\n            if (data || !$.isEmptyObject(opts)) {\n                this.reInitialize(data, opts);\n            }\n            else {\n                this.quickInit();\n            }\n\n            if (resetAxes) {\n                this.resetAxesScale(resetAxes, opts.axes);\n            }\n            this.draw();\n            this.target.trigger('jqplotPostReplot');\n        };\n        \n        // method: redraw\n        // Empties the plot target div and redraws the plot.\n        // This enables plot data and properties to be changed\n        // and then to comletely clear the plot and redraw.\n        // redraw *will not* reinitialize any plot elements.\n        // That is, axes will not be autoscaled and defaults\n        // will not be reapplied to any plot elements.  redraw\n        // is used primarily with zooming. \n        //\n        // Parameters:\n        // clear - false to not clear (empty) the plot container before redrawing (default: true).\n        this.redraw = function(clear) {\n            clear = (clear != null) ? clear : true;\n            this.target.trigger('jqplotPreRedraw');\n            if (clear) {\n                this.canvasManager.freeAllCanvases();\n                this.eventCanvas._elem.unbind();\n                // Dont think I bind any events to the target, this shouldn't be necessary.\n                // It will remove user's events.\n                // this.target.unbind();\n                this.target.empty();\n            }\n             for (var ax in this.axes) {\n                this.axes[ax]._ticks = [];\n            }\n            this.computePlotData();\n            // for (var i=0; i<this.series.length; i++) {\n            //     this.populatePlotData(this.series[i], i);\n            // }\n            this._sumy = 0;\n            this._sumx = 0;\n            for (var i=0, tsl = this.series.length; i<tsl; i++) {\n                this._sumy += this.series[i]._sumy;\n                this._sumx += this.series[i]._sumx;\n            }\n            this.draw();\n            this.target.trigger('jqplotPostRedraw');\n        };\n        \n        // method: draw\n        // Draws all elements of the plot into the container.\n        // Does not clear the container before drawing.\n        this.draw = function(){\n            if (this.drawIfHidden || this.target.is(':visible')) {\n                this.target.trigger('jqplotPreDraw');\n                var i,\n                    j,\n                    l,\n                    tempseries;\n                for (i=0, l=$.jqplot.preDrawHooks.length; i<l; i++) {\n                    $.jqplot.preDrawHooks[i].call(this);\n                }\n                for (i=0, l=this.preDrawHooks.hooks.length; i<l; i++) {\n                    this.preDrawHooks.hooks[i].apply(this, this.preDrawSeriesHooks.args[i]);\n                }\n                // create an underlying canvas to be used for special features.\n                this.target.append(this.baseCanvas.createElement({left:0, right:0, top:0, bottom:0}, 'jqplot-base-canvas', null, this));\n                this.baseCanvas.setContext();\n                this.target.append(this.title.draw());\n                this.title.pack({top:0, left:0});\n                \n                // make room  for the legend between the grid and the edge.\n                // pass a dummy offsets object and a reference to the plot.\n                var legendElem = this.legend.draw({}, this);\n                \n                var gridPadding = {top:0, left:0, bottom:0, right:0};\n                \n                if (this.legend.placement == \"outsideGrid\") {\n                    // temporarily append the legend to get dimensions\n                    this.target.append(legendElem);\n                    switch (this.legend.location) {\n                        case 'n':\n                            gridPadding.top += this.legend.getHeight();\n                            break;\n                        case 's':\n                            gridPadding.bottom += this.legend.getHeight();\n                            break;\n                        case 'ne':\n                        case 'e':\n                        case 'se':\n                            gridPadding.right += this.legend.getWidth();\n                            break;\n                        case 'nw':\n                        case 'w':\n                        case 'sw':\n                            gridPadding.left += this.legend.getWidth();\n                            break;\n                        default:  // same as 'ne'\n                            gridPadding.right += this.legend.getWidth();\n                            break;\n                    }\n                    legendElem = legendElem.detach();\n                }\n                \n                var ax = this.axes;\n                var name;\n                // draw the yMidAxis first, so xaxis of pyramid chart can adjust itself if needed.\n                for (i=0; i<12; i++) {\n                    name = _axisNames[i];\n                    this.target.append(ax[name].draw(this.baseCanvas._ctx, this));\n                    ax[name].set();\n                }\n                if (ax.yaxis.show) {\n                    gridPadding.left += ax.yaxis.getWidth();\n                }\n                var ra = ['y2axis', 'y3axis', 'y4axis', 'y5axis', 'y6axis', 'y7axis', 'y8axis', 'y9axis'];\n                var rapad = [0, 0, 0, 0, 0, 0, 0, 0];\n                var gpr = 0;\n                var n;\n                for (n=0; n<8; n++) {\n                    if (ax[ra[n]].show) {\n                        gpr += ax[ra[n]].getWidth();\n                        rapad[n] = gpr;\n                    }\n                }\n                gridPadding.right += gpr;\n                if (ax.x2axis.show) {\n                    gridPadding.top += ax.x2axis.getHeight();\n                }\n                if (this.title.show) {\n                    gridPadding.top += this.title.getHeight();\n                }\n                if (ax.xaxis.show) {\n                    gridPadding.bottom += ax.xaxis.getHeight();\n                }\n                \n                // end of gridPadding adjustments.\n\n                // if user passed in gridDimensions option, check against calculated gridPadding\n                if (this.options.gridDimensions && $.isPlainObject(this.options.gridDimensions)) {\n                    var gdw = parseInt(this.options.gridDimensions.width, 10) || 0;\n                    var gdh = parseInt(this.options.gridDimensions.height, 10) || 0;\n                    var widthAdj = (this._width - gridPadding.left - gridPadding.right - gdw)/2;\n                    var heightAdj = (this._height - gridPadding.top - gridPadding.bottom - gdh)/2;\n\n                    if (heightAdj >= 0 && widthAdj >= 0) {\n                        gridPadding.top += heightAdj;\n                        gridPadding.bottom += heightAdj;\n                        gridPadding.left += widthAdj;\n                        gridPadding.right += widthAdj;\n                    }\n                }\n                var arr = ['top', 'bottom', 'left', 'right'];\n                for (var n in arr) {\n                    if (this._gridPadding[arr[n]] == null && gridPadding[arr[n]] > 0) {\n                        this._gridPadding[arr[n]] = gridPadding[arr[n]];\n                    }\n                    else if (this._gridPadding[arr[n]] == null) {\n                        this._gridPadding[arr[n]] = this._defaultGridPadding[arr[n]];\n                    }\n                }\n                \n                var legendPadding = this._gridPadding;\n                \n                if (this.legend.placement === 'outsideGrid') {\n                    legendPadding = {top:this.title.getHeight(), left: 0, right: 0, bottom: 0};\n                }\n                \n                ax.xaxis.pack({position:'absolute', bottom:this._gridPadding.bottom - ax.xaxis.getHeight(), left:0, width:this._width}, {min:this._gridPadding.left, max:this._width - this._gridPadding.right});\n                ax.yaxis.pack({position:'absolute', top:0, left:this._gridPadding.left - ax.yaxis.getWidth(), height:this._height}, {min:this._height - this._gridPadding.bottom, max: this._gridPadding.top});\n                ax.x2axis.pack({position:'absolute', top:this._gridPadding.top - ax.x2axis.getHeight(), left:0, width:this._width}, {min:this._gridPadding.left, max:this._width - this._gridPadding.right});\n                for (i=8; i>0; i--) {\n                    ax[ra[i-1]].pack({position:'absolute', top:0, right:this._gridPadding.right - rapad[i-1]}, {min:this._height - this._gridPadding.bottom, max: this._gridPadding.top});\n                }\n                var ltemp = (this._width - this._gridPadding.left - this._gridPadding.right)/2.0 + this._gridPadding.left - ax.yMidAxis.getWidth()/2.0;\n                ax.yMidAxis.pack({position:'absolute', top:0, left:ltemp, zIndex:9, textAlign: 'center'}, {min:this._height - this._gridPadding.bottom, max: this._gridPadding.top});\n            \n                this.target.append(this.grid.createElement(this._gridPadding, this));\n                this.grid.draw();\n                \n                var series = this.series;\n                var seriesLength = series.length;\n                // put the shadow canvases behind the series canvases so shadows don't overlap on stacked bars.\n                for (i=0, l=seriesLength; i<l; i++) {\n                    // draw series in order of stacking.  This affects only\n                    // order in which canvases are added to dom.\n                    j = this.seriesStack[i];\n                    this.target.append(series[j].shadowCanvas.createElement(this._gridPadding, 'jqplot-series-shadowCanvas', null, this));\n                    series[j].shadowCanvas.setContext();\n                    series[j].shadowCanvas._elem.data('seriesIndex', j);\n                }\n                \n                for (i=0, l=seriesLength; i<l; i++) {\n                    // draw series in order of stacking.  This affects only\n                    // order in which canvases are added to dom.\n                    j = this.seriesStack[i];\n                    this.target.append(series[j].canvas.createElement(this._gridPadding, 'jqplot-series-canvas', null, this));\n                    series[j].canvas.setContext();\n                    series[j].canvas._elem.data('seriesIndex', j);\n                }\n                // Need to use filled canvas to capture events in IE.\n                // Also, canvas seems to block selection of other elements in document on FF.\n                this.target.append(this.eventCanvas.createElement(this._gridPadding, 'jqplot-event-canvas', null, this));\n                this.eventCanvas.setContext();\n                this.eventCanvas._ctx.fillStyle = 'rgba(0,0,0,0)';\n                this.eventCanvas._ctx.fillRect(0,0,this.eventCanvas._ctx.canvas.width, this.eventCanvas._ctx.canvas.height);\n            \n                // bind custom event handlers to regular events.\n                this.bindCustomEvents();\n            \n                // draw legend before series if the series needs to know the legend dimensions.\n                if (this.legend.preDraw) {  \n                    this.eventCanvas._elem.before(legendElem);\n                    this.legend.pack(legendPadding);\n                    if (this.legend._elem) {\n                        this.drawSeries({legendInfo:{location:this.legend.location, placement:this.legend.placement, width:this.legend.getWidth(), height:this.legend.getHeight(), xoffset:this.legend.xoffset, yoffset:this.legend.yoffset}});\n                    }\n                    else {\n                        this.drawSeries();\n                    }\n                }\n                else {  // draw series before legend\n                    this.drawSeries();\n                    if (seriesLength) {\n                        $(series[seriesLength-1].canvas._elem).after(legendElem);\n                    }\n                    this.legend.pack(legendPadding);                \n                }\n            \n                // register event listeners on the overlay canvas\n                for (var i=0, l=$.jqplot.eventListenerHooks.length; i<l; i++) {\n                    // in the handler, this will refer to the eventCanvas dom element.\n                    // make sure there are references back into plot objects.\n                    this.eventCanvas._elem.bind($.jqplot.eventListenerHooks[i][0], {plot:this}, $.jqplot.eventListenerHooks[i][1]);\n                }\n            \n                // register event listeners on the overlay canvas\n                for (var i=0, l=this.eventListenerHooks.hooks.length; i<l; i++) {\n                    // in the handler, this will refer to the eventCanvas dom element.\n                    // make sure there are references back into plot objects.\n                    this.eventCanvas._elem.bind(this.eventListenerHooks.hooks[i][0], {plot:this}, this.eventListenerHooks.hooks[i][1]);\n                }\n\n                var fb = this.fillBetween;\n                if(typeof fb.series1 == 'number'){\n                    if(fb.fill&&fb.series1!==fb.series2&&fb.series1<seriesLength&&fb.series2<seriesLength&&series[fb.series1]._type===\"line\"&&series[fb.series2]._type===\"line\")\n                    this.doFillBetweenLines();\n                }\n                else{\n                    if(fb.series1 != null && fb.series2 != null){\n                        var doFb = false;\n                        if(fb.series1.length === fb.series2.length){\n                            var tempSeries1 = 0;\n                            var tempSeries2 = 0;\n                            \n                            for(var cnt = 0; cnt < fb.series1.length; cnt++){\n                                tempSeries1 = fb.series1[cnt];\n                                tempSeries2 = fb.series2[cnt];\n                                if(tempSeries1!==tempSeries2&&tempSeries1<seriesLength&&tempSeries2<seriesLength&&series[tempSeries1]._type===\"line\"&&series[tempSeries2]._type===\"line\"){\n                                    doFb = true;\n                                }\n                                else{\n                                    doFb = false;\n                                    break;\n                                }\n                            }\n                        }\n                        if(fb.fill && doFb){\n                            this.doFillBetweenLines();\n                        }\n                    }\n                }\n\n                for (var i=0, l=$.jqplot.postDrawHooks.length; i<l; i++) {\n                    $.jqplot.postDrawHooks[i].call(this);\n                }\n\n                for (var i=0, l=this.postDrawHooks.hooks.length; i<l; i++) {\n                    this.postDrawHooks.hooks[i].apply(this, this.postDrawHooks.args[i]);\n                }\n            \n                if (this.target.is(':visible')) {\n                    this._drawCount += 1;\n                }\n\n                var temps, \n                    tempr,\n                    sel,\n                    _els;\n                // ughh.  ideally would hide all series then show them.\n                for (i=0, l=seriesLength; i<l; i++) {\n                    temps = series[i];\n                    tempr = temps.renderer;\n                    sel = '.jqplot-point-label.jqplot-series-'+i;\n                    if (tempr.animation && tempr.animation._supported && tempr.animation.show && (this._drawCount < 2 || this.animateReplot)) {\n                        _els = this.target.find(sel);\n                        _els.stop(true, true).hide();\n                        temps.canvas._elem.stop(true, true).hide();\n                        temps.shadowCanvas._elem.stop(true, true).hide();\n                        temps.canvas._elem.jqplotEffect('blind', {mode: 'show', direction: tempr.animation.direction}, tempr.animation.speed);\n                        temps.shadowCanvas._elem.jqplotEffect('blind', {mode: 'show', direction: tempr.animation.direction}, tempr.animation.speed);\n                        _els.fadeIn(tempr.animation.speed*0.8);\n                    }\n                }\n                _els = null;\n            \n                this.target.trigger('jqplotPostDraw', [this]);\n            }\n        };\n\n        jqPlot.prototype.doFillBetweenLines = function () {\n            var fb = this.fillBetween;\n            var series = this.series;\n            var sid1 = fb.series1;\n            var sid2 = fb.series2;\n            var id1 = 0, id2 = 0;\n\n            function fill(id1, id2){\n                var series1 = series[id1];\n                var series2 = series[id2];\n                if (series2.renderer.smooth)\n                    var tempgd = series2.renderer._smoothedData.slice(0).reverse();\n                else\n                    var tempgd = series2.gridData.slice(0).reverse();\n                if (series1.renderer.smooth)\n                    var gd = series1.renderer._smoothedData.concat(tempgd);\n                else\n                    var gd = series1.gridData.concat(tempgd);\n                var color = fb.color !== null ? fb.color : series[id1].fillColor;\n                var baseSeries = fb.baseSeries !== null ? fb.baseSeries : id1;\n                var sr =\n                    series[baseSeries].renderer.shapeRenderer;\n                var opts =\n                {\n                    fillStyle : color,\n                    fill : true,\n                    closePath : true\n                };\n                sr.draw(series1.shadowCanvas._ctx, gd, opts)\n            }\n\n            if(typeof sid1 == 'number' && typeof sid2 == 'number'){\n                id1 = sid1 < sid2 ? sid1 : sid2;\n                id2 = sid2 > sid1 ? sid2 : sid1;\n                fill(id1, id2);\n            }\n            else{\n                for(var cnt = 0; cnt < sid1.length ; cnt++){\n                    id1 = sid1[cnt] < sid2[cnt] ? sid1[cnt] : sid2[cnt];\n                    id2 = sid2[cnt] > sid1[cnt] ? sid2[cnt] : sid1[cnt];\n                    fill(id1, id2);\n                }\n            }\n        };\n        \n        this.bindCustomEvents = function() {\n            this.eventCanvas._elem.bind('click', {plot:this}, this.onClick);\n            this.eventCanvas._elem.bind('dblclick', {plot:this}, this.onDblClick);\n            this.eventCanvas._elem.bind('mousedown', {plot:this}, this.onMouseDown);\n            this.eventCanvas._elem.bind('mousemove', {plot:this}, this.onMouseMove);\n            this.eventCanvas._elem.bind('mouseenter', {plot:this}, this.onMouseEnter);\n            this.eventCanvas._elem.bind('mouseleave', {plot:this}, this.onMouseLeave);\n            if (this.captureRightClick) {\n                this.eventCanvas._elem.bind('mouseup', {plot:this}, this.onRightClick);\n                this.eventCanvas._elem.get(0).oncontextmenu = function() {\n                    return false;\n                };\n            }\n            else {\n                this.eventCanvas._elem.bind('mouseup', {plot:this}, this.onMouseUp);\n            }\n        };\n        \n        function getEventPosition(ev) {\n            var plot = ev.data.plot;\n            var go = plot.eventCanvas._elem.offset();\n            var gridPos = {x:ev.pageX - go.left, y:ev.pageY - go.top};\n            var dataPos = {xaxis:null, yaxis:null, x2axis:null, y2axis:null, y3axis:null, y4axis:null, y5axis:null, y6axis:null, y7axis:null, y8axis:null, y9axis:null, yMidAxis:null};\n            var an = ['xaxis', 'yaxis', 'x2axis', 'y2axis', 'y3axis', 'y4axis', 'y5axis', 'y6axis', 'y7axis', 'y8axis', 'y9axis', 'yMidAxis'];\n            var ax = plot.axes;\n            var n, axis;\n            for (n=11; n>0; n--) {\n                axis = an[n-1];\n                if (ax[axis].show) {\n                    dataPos[axis] = ax[axis].series_p2u(gridPos[axis.charAt(0)]);\n                }\n            }\n\n            return {offsets:go, gridPos:gridPos, dataPos:dataPos};\n        }\n        \n        \n        // function to check if event location is over a area area\n        function checkIntersection(gridpos, plot) {\n            var series = plot.series;\n            var i, j, k, s, r, x, y, theta, sm, sa, minang, maxang;\n            var d0, d, p, pp, points, bw, hp;\n            var threshold, t;\n            for (k=plot.seriesStack.length-1; k>=0; k--) {\n                i = plot.seriesStack[k];\n                s = series[i];\n                hp = s._highlightThreshold;\n                switch (s.renderer.constructor) {\n                    case $.jqplot.BarRenderer:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        for (j=0; j<s._barPoints.length; j++) {\n                            points = s._barPoints[j];\n                            p = s.gridData[j];\n                            if (x>points[0][0] && x<points[2][0] && (y>points[2][1] && y<points[0][1] || y<points[2][1] && y>points[0][1])) {\n                                return {seriesIndex:s.index, pointIndex:j, gridData:p, data:s.data[j], points:s._barPoints[j]};\n                            }\n                        }\n                        break;\n                    case $.jqplot.PyramidRenderer:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        for (j=0; j<s._barPoints.length; j++) {\n                            points = s._barPoints[j];\n                            p = s.gridData[j];\n                            if (x > points[0][0] + hp[0][0] && x < points[2][0] + hp[2][0] && y > points[2][1] && y < points[0][1]) {\n                                return {seriesIndex:s.index, pointIndex:j, gridData:p, data:s.data[j], points:s._barPoints[j]};\n                            }\n                        }\n                        break;\n                    \n                    case $.jqplot.DonutRenderer:\n                        sa = s.startAngle/180*Math.PI;\n                        x = gridpos.x - s._center[0];\n                        y = gridpos.y - s._center[1];\n                        r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n                        if (x > 0 && -y >= 0) {\n                            theta = 2*Math.PI - Math.atan(-y/x);\n                        }\n                        else if (x > 0 && -y < 0) {\n                            theta = -Math.atan(-y/x);\n                        }\n                        else if (x < 0) {\n                            theta = Math.PI - Math.atan(-y/x);\n                        }\n                        else if (x == 0 && -y > 0) {\n                            theta = 3*Math.PI/2;\n                        }\n                        else if (x == 0 && -y < 0) {\n                            theta = Math.PI/2;\n                        }\n                        else if (x == 0 && y == 0) {\n                            theta = 0;\n                        }\n                        if (sa) {\n                            theta -= sa;\n                            if (theta < 0) {\n                                theta += 2*Math.PI;\n                            }\n                            else if (theta > 2*Math.PI) {\n                                theta -= 2*Math.PI;\n                            }\n                        }\n            \n                        sm = s.sliceMargin/180*Math.PI;\n                        if (r < s._radius && r > s._innerRadius) {\n                            for (j=0; j<s.gridData.length; j++) {\n                                minang = (j>0) ? s.gridData[j-1][1]+sm : sm;\n                                maxang = s.gridData[j][1];\n                                if (theta > minang && theta < maxang) {\n                                    return {seriesIndex:s.index, pointIndex:j, gridData:[gridpos.x,gridpos.y], data:s.data[j]};\n                                }\n                            }\n                        }\n                        break;\n                        \n                    case $.jqplot.PieRenderer:\n                        sa = s.startAngle/180*Math.PI;\n                        x = gridpos.x - s._center[0];\n                        y = gridpos.y - s._center[1];\n                        r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n                        if (x > 0 && -y >= 0) {\n                            theta = 2*Math.PI - Math.atan(-y/x);\n                        }\n                        else if (x > 0 && -y < 0) {\n                            theta = -Math.atan(-y/x);\n                        }\n                        else if (x < 0) {\n                            theta = Math.PI - Math.atan(-y/x);\n                        }\n                        else if (x == 0 && -y > 0) {\n                            theta = 3*Math.PI/2;\n                        }\n                        else if (x == 0 && -y < 0) {\n                            theta = Math.PI/2;\n                        }\n                        else if (x == 0 && y == 0) {\n                            theta = 0;\n                        }\n                        if (sa) {\n                            theta -= sa;\n                            if (theta < 0) {\n                                theta += 2*Math.PI;\n                            }\n                            else if (theta > 2*Math.PI) {\n                                theta -= 2*Math.PI;\n                            }\n                        }\n            \n                        sm = s.sliceMargin/180*Math.PI;\n                        if (r < s._radius) {\n                            for (j=0; j<s.gridData.length; j++) {\n                                minang = (j>0) ? s.gridData[j-1][1]+sm : sm;\n                                maxang = s.gridData[j][1];\n                                if (theta > minang && theta < maxang) {\n                                    return {seriesIndex:s.index, pointIndex:j, gridData:[gridpos.x,gridpos.y], data:s.data[j]};\n                                }\n                            }\n                        }\n                        break;\n                        \n                    case $.jqplot.BubbleRenderer:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        var ret = null;\n                        \n                        if (s.show) {\n                            for (var j=0; j<s.gridData.length; j++) {\n                                p = s.gridData[j];\n                                d = Math.sqrt( (x-p[0]) * (x-p[0]) + (y-p[1]) * (y-p[1]) );\n                                if (d <= p[2] && (d <= d0 || d0 == null)) {\n                                   d0 = d;\n                                   ret = {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                }\n                            }\n                            if (ret != null) {\n                                return ret;\n                            }\n                        }\n                        break;\n                        \n                    case $.jqplot.FunnelRenderer:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        var v = s._vertices,\n                            vfirst = v[0],\n                            vlast = v[v.length-1],\n                            lex,\n                            rex,\n                            cv;\n    \n                        // equations of right and left sides, returns x, y values given height of section (y value and 2 points)\n    \n                        function findedge (l, p1 , p2) {\n                            var m = (p1[1] - p2[1])/(p1[0] - p2[0]);\n                            var b = p1[1] - m*p1[0];\n                            var y = l + p1[1];\n        \n                            return [(y - b)/m, y];\n                        }\n    \n                        // check each section\n                        lex = findedge(y, vfirst[0], vlast[3]);\n                        rex = findedge(y, vfirst[1], vlast[2]);\n                        for (j=0; j<v.length; j++) {\n                            cv = v[j];\n                            if (y >= cv[0][1] && y <= cv[3][1] && x >= lex[0] && x <= rex[0]) {\n                                return {seriesIndex:s.index, pointIndex:j, gridData:null, data:s.data[j]};\n                            }\n                        }         \n                        break;           \n                    \n                    case $.jqplot.LineRenderer:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        r = s.renderer;\n                        if (s.show) {\n                            if ((s.fill || (s.renderer.bands.show && s.renderer.bands.fill)) && (!plot.plugins.highlighter || !plot.plugins.highlighter.show)) {\n                                // first check if it is in bounding box\n                                var inside = false;\n                                if (x>s._boundingBox[0][0] && x<s._boundingBox[1][0] && y>s._boundingBox[1][1] && y<s._boundingBox[0][1]) { \n                                    // now check the crossing number   \n                                    \n                                    var numPoints = s._areaPoints.length;\n                                    var ii;\n                                    var j = numPoints-1;\n\n                                    for(var ii=0; ii < numPoints; ii++) { \n                                        var vertex1 = [s._areaPoints[ii][0], s._areaPoints[ii][1]];\n                                        var vertex2 = [s._areaPoints[j][0], s._areaPoints[j][1]];\n\n                                        if (vertex1[1] < y && vertex2[1] >= y || vertex2[1] < y && vertex1[1] >= y)     {\n                                            if (vertex1[0] + (y - vertex1[1]) / (vertex2[1] - vertex1[1]) * (vertex2[0] - vertex1[0]) < x) {\n                                                inside = !inside;\n                                            }\n                                        }\n\n                                        j = ii;\n                                    }        \n                                }\n                                if (inside) {\n                                    return {seriesIndex:i, pointIndex:null, gridData:s.gridData, data:s.data, points:s._areaPoints};\n                                }\n                                break;\n                                \n                            }\n\n                            else {\n                                t = s.markerRenderer.size/2+s.neighborThreshold;\n                                threshold = (t > 0) ? t : 0;\n                                for (var j=0; j<s.gridData.length; j++) {\n                                    p = s.gridData[j];\n                                    // neighbor looks different to OHLC chart.\n                                    if (r.constructor == $.jqplot.OHLCRenderer) {\n                                        if (r.candleStick) {\n                                            var yp = s._yaxis.series_u2p;\n                                            if (x >= p[0]-r._bodyWidth/2 && x <= p[0]+r._bodyWidth/2 && y >= yp(s.data[j][2]) && y <= yp(s.data[j][3])) {\n                                                return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                            }\n                                        }\n                                        // if an open hi low close chart\n                                        else if (!r.hlc){\n                                            var yp = s._yaxis.series_u2p;\n                                            if (x >= p[0]-r._tickLength && x <= p[0]+r._tickLength && y >= yp(s.data[j][2]) && y <= yp(s.data[j][3])) {\n                                                return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                            }\n                                        }\n                                        // a hi low close chart\n                                        else {\n                                            var yp = s._yaxis.series_u2p;\n                                            if (x >= p[0]-r._tickLength && x <= p[0]+r._tickLength && y >= yp(s.data[j][1]) && y <= yp(s.data[j][2])) {\n                                                return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                            }\n                                        }\n                            \n                                    }\n                                    else if (p[0] != null && p[1] != null){\n                                        d = Math.sqrt( (x-p[0]) * (x-p[0]) + (y-p[1]) * (y-p[1]) );\n                                        if (d <= threshold && (d <= d0 || d0 == null)) {\n                                           d0 = d;\n                                           return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                        }\n                                    }\n                                } \n                            }\n                        }\n                        break;\n                        \n                    default:\n                        x = gridpos.x;\n                        y = gridpos.y;\n                        r = s.renderer;\n                        if (s.show) {\n                            t = s.markerRenderer.size/2+s.neighborThreshold;\n                            threshold = (t > 0) ? t : 0;\n                            for (var j=0; j<s.gridData.length; j++) {\n                                p = s.gridData[j];\n                                // neighbor looks different to OHLC chart.\n                                if (r.constructor == $.jqplot.OHLCRenderer) {\n                                    if (r.candleStick) {\n                                        var yp = s._yaxis.series_u2p;\n                                        if (x >= p[0]-r._bodyWidth/2 && x <= p[0]+r._bodyWidth/2 && y >= yp(s.data[j][2]) && y <= yp(s.data[j][3])) {\n                                            return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                        }\n                                    }\n                                    // if an open hi low close chart\n                                    else if (!r.hlc){\n                                        var yp = s._yaxis.series_u2p;\n                                        if (x >= p[0]-r._tickLength && x <= p[0]+r._tickLength && y >= yp(s.data[j][2]) && y <= yp(s.data[j][3])) {\n                                            return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                        }\n                                    }\n                                    // a hi low close chart\n                                    else {\n                                        var yp = s._yaxis.series_u2p;\n                                        if (x >= p[0]-r._tickLength && x <= p[0]+r._tickLength && y >= yp(s.data[j][1]) && y <= yp(s.data[j][2])) {\n                                            return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                        }\n                                    }\n                            \n                                }\n                                else {\n                                    d = Math.sqrt( (x-p[0]) * (x-p[0]) + (y-p[1]) * (y-p[1]) );\n                                    if (d <= threshold && (d <= d0 || d0 == null)) {\n                                       d0 = d;\n                                       return {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]};\n                                    }\n                                }\n                            } \n                        }\n                        break;\n                }\n            }\n            \n            return null;\n        }\n        \n        \n        \n        this.onClick = function(ev) {\n            // Event passed in is normalized and will have data attribute.\n            // Event passed out is unnormalized.\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var neighbor = checkIntersection(positions.gridPos, p);\n            var evt = $.Event('jqplotClick');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n        };\n        \n        this.onDblClick = function(ev) {\n            // Event passed in is normalized and will have data attribute.\n            // Event passed out is unnormalized.\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var neighbor = checkIntersection(positions.gridPos, p);\n            var evt = $.Event('jqplotDblClick');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n        };\n        \n        this.onMouseDown = function(ev) {\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var neighbor = checkIntersection(positions.gridPos, p);\n            var evt = $.Event('jqplotMouseDown');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n        };\n        \n        this.onMouseUp = function(ev) {\n            var positions = getEventPosition(ev);\n            var evt = $.Event('jqplotMouseUp');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, null, ev.data.plot]);\n        };\n        \n        this.onRightClick = function(ev) {\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var neighbor = checkIntersection(positions.gridPos, p);\n            if (p.captureRightClick) {\n                if (ev.which == 3) {\n                var evt = $.Event('jqplotRightClick');\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                    $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n                }\n                else {\n                var evt = $.Event('jqplotMouseUp');\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                    $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n                }\n            }\n        };\n        \n        this.onMouseMove = function(ev) {\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var neighbor = checkIntersection(positions.gridPos, p);\n            var evt = $.Event('jqplotMouseMove');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, neighbor, p]);\n        };\n        \n        this.onMouseEnter = function(ev) {\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var evt = $.Event('jqplotMouseEnter');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            evt.relatedTarget = ev.relatedTarget;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, null, p]);\n        };\n        \n        this.onMouseLeave = function(ev) {\n            var positions = getEventPosition(ev);\n            var p = ev.data.plot;\n            var evt = $.Event('jqplotMouseLeave');\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            evt.relatedTarget = ev.relatedTarget;\n            $(this).trigger(evt, [positions.gridPos, positions.dataPos, null, p]);\n        };\n        \n        // method: drawSeries\n        // Redraws all or just one series on the plot.  No axis scaling\n        // is performed and no other elements on the plot are redrawn.\n        // options is an options object to pass on to the series renderers.\n        // It can be an empty object {}.  idx is the series index\n        // to redraw if only one series is to be redrawn.\n        this.drawSeries = function(options, idx){\n            var i, series, ctx;\n            // if only one argument passed in and it is a number, use it ad idx.\n            idx = (typeof(options) === \"number\" && idx == null) ? options : idx;\n            options = (typeof(options) === \"object\") ? options : {};\n            // draw specified series\n            if (idx != undefined) {\n                series = this.series[idx];\n                ctx = series.shadowCanvas._ctx;\n                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                series.drawShadow(ctx, options, this);\n                ctx = series.canvas._ctx;\n                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                series.draw(ctx, options, this);\n                if (series.renderer.constructor == $.jqplot.BezierCurveRenderer) {\n                    if (idx < this.series.length - 1) {\n                        this.drawSeries(idx+1); \n                    }\n                }\n            }\n            \n            else {\n                // if call series drawShadow method first, in case all series shadows\n                // should be drawn before any series.  This will ensure, like for \n                // stacked bar plots, that shadows don't overlap series.\n                for (i=0; i<this.series.length; i++) {\n                    // first clear the canvas\n                    series = this.series[i];\n                    ctx = series.shadowCanvas._ctx;\n                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                    series.drawShadow(ctx, options, this);\n                    ctx = series.canvas._ctx;\n                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                    series.draw(ctx, options, this);\n                }\n            }\n            options = idx = i = series = ctx = null;\n        };\n        \n        // method: moveSeriesToFront\n        // This method requires jQuery 1.4+\n        // Moves the specified series canvas in front of all other series canvases.\n        // This effectively \"draws\" the specified series on top of all other series,\n        // although it is performed through DOM manipulation, no redrawing is performed.\n        //\n        // Parameters:\n        // idx - 0 based index of the series to move.  This will be the index of the series\n        // as it was first passed into the jqplot function.\n        this.moveSeriesToFront = function (idx) { \n            idx = parseInt(idx, 10);\n            var stackIndex = $.inArray(idx, this.seriesStack);\n            // if already in front, return\n            if (stackIndex == -1) {\n                return;\n            }\n            if (stackIndex == this.seriesStack.length -1) {\n                this.previousSeriesStack = this.seriesStack.slice(0);\n                return;\n            }\n            var opidx = this.seriesStack[this.seriesStack.length -1];\n            var serelem = this.series[idx].canvas._elem.detach();\n            var shadelem = this.series[idx].shadowCanvas._elem.detach();\n            this.series[opidx].shadowCanvas._elem.after(shadelem);\n            this.series[opidx].canvas._elem.after(serelem);\n            this.previousSeriesStack = this.seriesStack.slice(0);\n            this.seriesStack.splice(stackIndex, 1);\n            this.seriesStack.push(idx);\n        };\n        \n        // method: moveSeriesToBack\n        // This method requires jQuery 1.4+\n        // Moves the specified series canvas behind all other series canvases.\n        //\n        // Parameters:\n        // idx - 0 based index of the series to move.  This will be the index of the series\n        // as it was first passed into the jqplot function.\n        this.moveSeriesToBack = function (idx) {\n            idx = parseInt(idx, 10);\n            var stackIndex = $.inArray(idx, this.seriesStack);\n            // if already in back, return\n            if (stackIndex == 0 || stackIndex == -1) {\n                return;\n            }\n            var opidx = this.seriesStack[0];\n            var serelem = this.series[idx].canvas._elem.detach();\n            var shadelem = this.series[idx].shadowCanvas._elem.detach();\n            this.series[opidx].shadowCanvas._elem.before(shadelem);\n            this.series[opidx].canvas._elem.before(serelem);\n            this.previousSeriesStack = this.seriesStack.slice(0);\n            this.seriesStack.splice(stackIndex, 1);\n            this.seriesStack.unshift(idx);\n        };\n        \n        // method: restorePreviousSeriesOrder\n        // This method requires jQuery 1.4+\n        // Restore the series canvas order to its previous state.\n        // Useful to put a series back where it belongs after moving\n        // it to the front.\n        this.restorePreviousSeriesOrder = function () {\n            var i, j, serelem, shadelem, temp, move, keep;\n            // if no change, return.\n            if (this.seriesStack == this.previousSeriesStack) {\n                return;\n            }\n            for (i=1; i<this.previousSeriesStack.length; i++) {\n                move = this.previousSeriesStack[i];\n                keep = this.previousSeriesStack[i-1];\n                serelem = this.series[move].canvas._elem.detach();\n                shadelem = this.series[move].shadowCanvas._elem.detach();\n                this.series[keep].shadowCanvas._elem.after(shadelem);\n                this.series[keep].canvas._elem.after(serelem);\n            }\n            temp = this.seriesStack.slice(0);\n            this.seriesStack = this.previousSeriesStack.slice(0);\n            this.previousSeriesStack = temp;\n        };\n        \n        // method: restoreOriginalSeriesOrder\n        // This method requires jQuery 1.4+\n        // Restore the series canvas order to its original order\n        // when the plot was created.\n        this.restoreOriginalSeriesOrder = function () {\n            var i, j, arr=[], serelem, shadelem;\n            for (i=0; i<this.series.length; i++) {\n                arr.push(i);\n            }\n            if (this.seriesStack == arr) {\n                return;\n            }\n            this.previousSeriesStack = this.seriesStack.slice(0);\n            this.seriesStack = arr;\n            for (i=1; i<this.seriesStack.length; i++) {\n                serelem = this.series[i].canvas._elem.detach();\n                shadelem = this.series[i].shadowCanvas._elem.detach();\n                this.series[i-1].shadowCanvas._elem.after(shadelem);\n                this.series[i-1].canvas._elem.after(serelem);\n            }\n        };\n        \n        this.activateTheme = function (name) {\n            this.themeEngine.activate(this, name);\n        };\n    }\n    \n    \n    // conpute a highlight color or array of highlight colors from given colors.\n    $.jqplot.computeHighlightColors  = function(colors) {\n        var ret;\n        if ($.isArray(colors)) {\n            ret = [];\n            for (var i=0; i<colors.length; i++){\n                var rgba = $.jqplot.getColorComponents(colors[i]);\n                var newrgb = [rgba[0], rgba[1], rgba[2]];\n                var sum = newrgb[0] + newrgb[1] + newrgb[2];\n                for (var j=0; j<3; j++) {\n                    // when darkening, lowest color component can be is 60.\n                    newrgb[j] = (sum > 660) ?  newrgb[j] * 0.85 : 0.73 * newrgb[j] + 90;\n                    newrgb[j] = parseInt(newrgb[j], 10);\n                    (newrgb[j] > 255) ? 255 : newrgb[j];\n                }\n                // newrgb[3] = (rgba[3] > 0.4) ? rgba[3] * 0.4 : rgba[3] * 1.5;\n                // newrgb[3] = (rgba[3] > 0.5) ? 0.8 * rgba[3] - .1 : rgba[3] + 0.2;\n                newrgb[3] = 0.3 + 0.35 * rgba[3];\n                ret.push('rgba('+newrgb[0]+','+newrgb[1]+','+newrgb[2]+','+newrgb[3]+')');\n            }\n        }\n        else {\n            var rgba = $.jqplot.getColorComponents(colors);\n            var newrgb = [rgba[0], rgba[1], rgba[2]];\n            var sum = newrgb[0] + newrgb[1] + newrgb[2];\n            for (var j=0; j<3; j++) {\n                // when darkening, lowest color component can be is 60.\n                // newrgb[j] = (sum > 570) ?  newrgb[j] * 0.8 : newrgb[j] + 0.3 * (255 - newrgb[j]);\n                // newrgb[j] = parseInt(newrgb[j], 10);\n                newrgb[j] = (sum > 660) ?  newrgb[j] * 0.85 : 0.73 * newrgb[j] + 90;\n                newrgb[j] = parseInt(newrgb[j], 10);\n                (newrgb[j] > 255) ? 255 : newrgb[j];\n            }\n            // newrgb[3] = (rgba[3] > 0.4) ? rgba[3] * 0.4 : rgba[3] * 1.5;\n            // newrgb[3] = (rgba[3] > 0.5) ? 0.8 * rgba[3] - .1 : rgba[3] + 0.2;\n            newrgb[3] = 0.3 + 0.35 * rgba[3];\n            ret = 'rgba('+newrgb[0]+','+newrgb[1]+','+newrgb[2]+','+newrgb[3]+')';\n        }\n        return ret;\n    };\n        \n   $.jqplot.ColorGenerator = function(colors) {\n        colors = colors || $.jqplot.config.defaultColors;\n        var idx = 0;\n        \n        this.next = function () { \n            if (idx < colors.length) {\n                return colors[idx++];\n            }\n            else {\n                idx = 0;\n                return colors[idx++];\n            }\n        };\n        \n        this.previous = function () { \n            if (idx > 0) {\n                return colors[idx--];\n            }\n            else {\n                idx = colors.length-1;\n                return colors[idx];\n            }\n        };\n        \n        // get a color by index without advancing pointer.\n        this.get = function(i) {\n            var idx = i - colors.length * Math.floor(i/colors.length);\n            return colors[idx];\n        };\n        \n        this.setColors = function(c) {\n            colors = c;\n        };\n        \n        this.reset = function() {\n            idx = 0;\n        };\n\n        this.getIndex = function() {\n            return idx;\n        };\n\n        this.setIndex = function(index) {\n            idx = index;\n        };\n    };\n\n    // convert a hex color string to rgb string.\n    // h - 3 or 6 character hex string, with or without leading #\n    // a - optional alpha\n    $.jqplot.hex2rgb = function(h, a) {\n        h = h.replace('#', '');\n        if (h.length == 3) {\n            h = h.charAt(0)+h.charAt(0)+h.charAt(1)+h.charAt(1)+h.charAt(2)+h.charAt(2);\n        }\n        var rgb;\n        rgb = 'rgba('+parseInt(h.slice(0,2), 16)+', '+parseInt(h.slice(2,4), 16)+', '+parseInt(h.slice(4,6), 16);\n        if (a) {\n            rgb += ', '+a;\n        }\n        rgb += ')';\n        return rgb;\n    };\n    \n    // convert an rgb color spec to a hex spec.  ignore any alpha specification.\n    $.jqplot.rgb2hex = function(s) {\n        var pat = /rgba?\\( *([0-9]{1,3}\\.?[0-9]*%?) *, *([0-9]{1,3}\\.?[0-9]*%?) *, *([0-9]{1,3}\\.?[0-9]*%?) *(?:, *[0-9.]*)?\\)/;\n        var m = s.match(pat);\n        var h = '#';\n        for (var i=1; i<4; i++) {\n            var temp;\n            if (m[i].search(/%/) != -1) {\n                temp = parseInt(255*m[i]/100, 10).toString(16);\n                if (temp.length == 1) {\n                    temp = '0'+temp;\n                }\n            }\n            else {\n                temp = parseInt(m[i], 10).toString(16);\n                if (temp.length == 1) {\n                    temp = '0'+temp;\n                }\n            }\n            h += temp;\n        }\n        return h;\n    };\n    \n    // given a css color spec, return an rgb css color spec\n    $.jqplot.normalize2rgb = function(s, a) {\n        if (s.search(/^ *rgba?\\(/) != -1) {\n            return s; \n        }\n        else if (s.search(/^ *#?[0-9a-fA-F]?[0-9a-fA-F]/) != -1) {\n            return $.jqplot.hex2rgb(s, a);\n        }\n        else {\n            throw new Error('Invalid color spec');\n        }\n    };\n    \n    // extract the r, g, b, a color components out of a css color spec.\n    $.jqplot.getColorComponents = function(s) {\n        // check to see if a color keyword.\n        s = $.jqplot.colorKeywordMap[s] || s;\n        var rgb = $.jqplot.normalize2rgb(s);\n        var pat = /rgba?\\( *([0-9]{1,3}\\.?[0-9]*%?) *, *([0-9]{1,3}\\.?[0-9]*%?) *, *([0-9]{1,3}\\.?[0-9]*%?) *,? *([0-9.]* *)?\\)/;\n        var m = rgb.match(pat);\n        var ret = [];\n        for (var i=1; i<4; i++) {\n            if (m[i].search(/%/) != -1) {\n                ret[i-1] = parseInt(255*m[i]/100, 10);\n            }\n            else {\n                ret[i-1] = parseInt(m[i], 10);\n            }\n        }\n        ret[3] = parseFloat(m[4]) ? parseFloat(m[4]) : 1.0;\n        return ret;\n    };\n    \n    $.jqplot.colorKeywordMap = {\n        aliceblue: 'rgb(240, 248, 255)',\n        antiquewhite: 'rgb(250, 235, 215)',\n        aqua: 'rgb( 0, 255, 255)',\n        aquamarine: 'rgb(127, 255, 212)',\n        azure: 'rgb(240, 255, 255)',\n        beige: 'rgb(245, 245, 220)',\n        bisque: 'rgb(255, 228, 196)',\n        black: 'rgb( 0, 0, 0)',\n        blanchedalmond: 'rgb(255, 235, 205)',\n        blue: 'rgb( 0, 0, 255)',\n        blueviolet: 'rgb(138, 43, 226)',\n        brown: 'rgb(165, 42, 42)',\n        burlywood: 'rgb(222, 184, 135)',\n        cadetblue: 'rgb( 95, 158, 160)',\n        chartreuse: 'rgb(127, 255, 0)',\n        chocolate: 'rgb(210, 105, 30)',\n        coral: 'rgb(255, 127, 80)',\n        cornflowerblue: 'rgb(100, 149, 237)',\n        cornsilk: 'rgb(255, 248, 220)',\n        crimson: 'rgb(220, 20, 60)',\n        cyan: 'rgb( 0, 255, 255)',\n        darkblue: 'rgb( 0, 0, 139)',\n        darkcyan: 'rgb( 0, 139, 139)',\n        darkgoldenrod: 'rgb(184, 134, 11)',\n        darkgray: 'rgb(169, 169, 169)',\n        darkgreen: 'rgb( 0, 100, 0)',\n        darkgrey: 'rgb(169, 169, 169)',\n        darkkhaki: 'rgb(189, 183, 107)',\n        darkmagenta: 'rgb(139, 0, 139)',\n        darkolivegreen: 'rgb( 85, 107, 47)',\n        darkorange: 'rgb(255, 140, 0)',\n        darkorchid: 'rgb(153, 50, 204)',\n        darkred: 'rgb(139, 0, 0)',\n        darksalmon: 'rgb(233, 150, 122)',\n        darkseagreen: 'rgb(143, 188, 143)',\n        darkslateblue: 'rgb( 72, 61, 139)',\n        darkslategray: 'rgb( 47, 79, 79)',\n        darkslategrey: 'rgb( 47, 79, 79)',\n        darkturquoise: 'rgb( 0, 206, 209)',\n        darkviolet: 'rgb(148, 0, 211)',\n        deeppink: 'rgb(255, 20, 147)',\n        deepskyblue: 'rgb( 0, 191, 255)',\n        dimgray: 'rgb(105, 105, 105)',\n        dimgrey: 'rgb(105, 105, 105)',\n        dodgerblue: 'rgb( 30, 144, 255)',\n        firebrick: 'rgb(178, 34, 34)',\n        floralwhite: 'rgb(255, 250, 240)',\n        forestgreen: 'rgb( 34, 139, 34)',\n        fuchsia: 'rgb(255, 0, 255)',\n        gainsboro: 'rgb(220, 220, 220)',\n        ghostwhite: 'rgb(248, 248, 255)',\n        gold: 'rgb(255, 215, 0)',\n        goldenrod: 'rgb(218, 165, 32)',\n        gray: 'rgb(128, 128, 128)',\n        grey: 'rgb(128, 128, 128)',\n        green: 'rgb( 0, 128, 0)',\n        greenyellow: 'rgb(173, 255, 47)',\n        honeydew: 'rgb(240, 255, 240)',\n        hotpink: 'rgb(255, 105, 180)',\n        indianred: 'rgb(205, 92, 92)',\n        indigo: 'rgb( 75, 0, 130)',\n        ivory: 'rgb(255, 255, 240)',\n        khaki: 'rgb(240, 230, 140)',\n        lavender: 'rgb(230, 230, 250)',\n        lavenderblush: 'rgb(255, 240, 245)',\n        lawngreen: 'rgb(124, 252, 0)',\n        lemonchiffon: 'rgb(255, 250, 205)',\n        lightblue: 'rgb(173, 216, 230)',\n        lightcoral: 'rgb(240, 128, 128)',\n        lightcyan: 'rgb(224, 255, 255)',\n        lightgoldenrodyellow: 'rgb(250, 250, 210)',\n        lightgray: 'rgb(211, 211, 211)',\n        lightgreen: 'rgb(144, 238, 144)',\n        lightgrey: 'rgb(211, 211, 211)',\n        lightpink: 'rgb(255, 182, 193)',\n        lightsalmon: 'rgb(255, 160, 122)',\n        lightseagreen: 'rgb( 32, 178, 170)',\n        lightskyblue: 'rgb(135, 206, 250)',\n        lightslategray: 'rgb(119, 136, 153)',\n        lightslategrey: 'rgb(119, 136, 153)',\n        lightsteelblue: 'rgb(176, 196, 222)',\n        lightyellow: 'rgb(255, 255, 224)',\n        lime: 'rgb( 0, 255, 0)',\n        limegreen: 'rgb( 50, 205, 50)',\n        linen: 'rgb(250, 240, 230)',\n        magenta: 'rgb(255, 0, 255)',\n        maroon: 'rgb(128, 0, 0)',\n        mediumaquamarine: 'rgb(102, 205, 170)',\n        mediumblue: 'rgb( 0, 0, 205)',\n        mediumorchid: 'rgb(186, 85, 211)',\n        mediumpurple: 'rgb(147, 112, 219)',\n        mediumseagreen: 'rgb( 60, 179, 113)',\n        mediumslateblue: 'rgb(123, 104, 238)',\n        mediumspringgreen: 'rgb( 0, 250, 154)',\n        mediumturquoise: 'rgb( 72, 209, 204)',\n        mediumvioletred: 'rgb(199, 21, 133)',\n        midnightblue: 'rgb( 25, 25, 112)',\n        mintcream: 'rgb(245, 255, 250)',\n        mistyrose: 'rgb(255, 228, 225)',\n        moccasin: 'rgb(255, 228, 181)',\n        navajowhite: 'rgb(255, 222, 173)',\n        navy: 'rgb( 0, 0, 128)',\n        oldlace: 'rgb(253, 245, 230)',\n        olive: 'rgb(128, 128, 0)',\n        olivedrab: 'rgb(107, 142, 35)',\n        orange: 'rgb(255, 165, 0)',\n        orangered: 'rgb(255, 69, 0)',\n        orchid: 'rgb(218, 112, 214)',\n        palegoldenrod: 'rgb(238, 232, 170)',\n        palegreen: 'rgb(152, 251, 152)',\n        paleturquoise: 'rgb(175, 238, 238)',\n        palevioletred: 'rgb(219, 112, 147)',\n        papayawhip: 'rgb(255, 239, 213)',\n        peachpuff: 'rgb(255, 218, 185)',\n        peru: 'rgb(205, 133, 63)',\n        pink: 'rgb(255, 192, 203)',\n        plum: 'rgb(221, 160, 221)',\n        powderblue: 'rgb(176, 224, 230)',\n        purple: 'rgb(128, 0, 128)',\n        red: 'rgb(255, 0, 0)',\n        rosybrown: 'rgb(188, 143, 143)',\n        royalblue: 'rgb( 65, 105, 225)',\n        saddlebrown: 'rgb(139, 69, 19)',\n        salmon: 'rgb(250, 128, 114)',\n        sandybrown: 'rgb(244, 164, 96)',\n        seagreen: 'rgb( 46, 139, 87)',\n        seashell: 'rgb(255, 245, 238)',\n        sienna: 'rgb(160, 82, 45)',\n        silver: 'rgb(192, 192, 192)',\n        skyblue: 'rgb(135, 206, 235)',\n        slateblue: 'rgb(106, 90, 205)',\n        slategray: 'rgb(112, 128, 144)',\n        slategrey: 'rgb(112, 128, 144)',\n        snow: 'rgb(255, 250, 250)',\n        springgreen: 'rgb( 0, 255, 127)',\n        steelblue: 'rgb( 70, 130, 180)',\n        tan: 'rgb(210, 180, 140)',\n        teal: 'rgb( 0, 128, 128)',\n        thistle: 'rgb(216, 191, 216)',\n        tomato: 'rgb(255, 99, 71)',\n        turquoise: 'rgb( 64, 224, 208)',\n        violet: 'rgb(238, 130, 238)',\n        wheat: 'rgb(245, 222, 179)',\n        white: 'rgb(255, 255, 255)',\n        whitesmoke: 'rgb(245, 245, 245)',\n        yellow: 'rgb(255, 255, 0)',\n        yellowgreen: 'rgb(154, 205, 50)'\n    };\n\n    \n\n\n    // class: $.jqplot.AxisLabelRenderer\n    // Renderer to place labels on the axes.\n    $.jqplot.AxisLabelRenderer = function(options) {\n        // Group: Properties\n        $.jqplot.ElemContainer.call(this);\n        // name of the axis associated with this tick\n        this.axis;\n        // prop: show\n        // whether or not to show the tick (mark and label).\n        this.show = true;\n        // prop: label\n        // The text or html for the label.\n        this.label = '';\n        this.fontFamily = null;\n        this.fontSize = null;\n        this.textColor = null;\n        this._elem;\n        // prop: escapeHTML\n        // true to escape HTML entities in the label.\n        this.escapeHTML = false;\n        \n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.AxisLabelRenderer.prototype = new $.jqplot.ElemContainer();\n    $.jqplot.AxisLabelRenderer.prototype.constructor = $.jqplot.AxisLabelRenderer;\n    \n    $.jqplot.AxisLabelRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.AxisLabelRenderer.prototype.draw = function(ctx, plot) {\n        // Memory Leaks patch\n        if (this._elem) {\n            this._elem.emptyForce();\n            this._elem = null;\n        }\n\n        this._elem = $('<div style=\"position:absolute;\" class=\"jqplot-'+this.axis+'-label\"></div>');\n        \n        if (Number(this.label)) {\n            this._elem.css('white-space', 'nowrap');\n        }\n        \n        if (!this.escapeHTML) {\n            this._elem.html(this.label);\n        }\n        else {\n            this._elem.text(this.label);\n        }\n        if (this.fontFamily) {\n            this._elem.css('font-family', this.fontFamily);\n        }\n        if (this.fontSize) {\n            this._elem.css('font-size', this.fontSize);\n        }\n        if (this.textColor) {\n            this._elem.css('color', this.textColor);\n        }\n        \n        return this._elem;\n    };\n    \n    $.jqplot.AxisLabelRenderer.prototype.pack = function() {\n    };\n\n    // class: $.jqplot.AxisTickRenderer\n    // A \"tick\" object showing the value of a tick/gridline on the plot.\n    $.jqplot.AxisTickRenderer = function(options) {\n        // Group: Properties\n        $.jqplot.ElemContainer.call(this);\n        // prop: mark\n        // tick mark on the axis.  One of 'inside', 'outside', 'cross', '' or null.\n        this.mark = 'outside';\n        // name of the axis associated with this tick\n        this.axis;\n        // prop: showMark\n        // whether or not to show the mark on the axis.\n        this.showMark = true;\n        // prop: showGridline\n        // whether or not to draw the gridline on the grid at this tick.\n        this.showGridline = true;\n        // prop: isMinorTick\n        // if this is a minor tick.\n        this.isMinorTick = false;\n        // prop: size\n        // Length of the tick beyond the grid in pixels.\n        // DEPRECATED: This has been superceeded by markSize\n        this.size = 4;\n        // prop:  markSize\n        // Length of the tick marks in pixels.  For 'cross' style, length\n        // will be stoked above and below axis, so total length will be twice this.\n        this.markSize = 6;\n        // prop: show\n        // whether or not to show the tick (mark and label).\n        // Setting this to false requires more testing.  It is recommended\n        // to set showLabel and showMark to false instead.\n        this.show = true;\n        // prop: showLabel\n        // whether or not to show the label.\n        this.showLabel = true;\n        this.label = null;\n        this.value = null;\n        this._styles = {};\n        // prop: formatter\n        // A class of a formatter for the tick text.  sprintf by default.\n        this.formatter = $.jqplot.DefaultTickFormatter;\n        // prop: prefix\n        // String to prepend to the tick label.\n        // Prefix is prepended to the formatted tick label.\n        this.prefix = '';\n        // prop: suffix\n        // String to append to the tick label.\n        // Suffix is appended to the formatted tick label.\n        this.suffix = '';\n        // prop: formatString\n        // string passed to the formatter.\n        this.formatString = '';\n        // prop: fontFamily\n        // css spec for the font-family css attribute.\n        this.fontFamily;\n        // prop: fontSize\n        // css spec for the font-size css attribute.\n        this.fontSize;\n        // prop: textColor\n        // css spec for the color attribute.\n        this.textColor;\n        // prop: escapeHTML\n        // true to escape HTML entities in the label.\n        this.escapeHTML = false;\n        this._elem;\n        this._breakTick = false;\n        \n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.AxisTickRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.AxisTickRenderer.prototype = new $.jqplot.ElemContainer();\n    $.jqplot.AxisTickRenderer.prototype.constructor = $.jqplot.AxisTickRenderer;\n    \n    $.jqplot.AxisTickRenderer.prototype.setTick = function(value, axisName, isMinor) {\n        this.value = value;\n        this.axis = axisName;\n        if (isMinor) {\n            this.isMinorTick = true;\n        }\n        return this;\n    };\n    \n    $.jqplot.AxisTickRenderer.prototype.draw = function() {\n        if (this.label === null) {\n            this.label = this.prefix + this.formatter(this.formatString, this.value) + this.suffix;\n        }\n        var style = {position: 'absolute'};\n        if (Number(this.label)) {\n            style['whitSpace'] = 'nowrap';\n        }\n        \n        // Memory Leaks patch\n        if (this._elem) {\n            this._elem.emptyForce();\n            this._elem = null;\n        }\n\n        this._elem = $(document.createElement('div'));\n        this._elem.addClass(\"jqplot-\"+this.axis+\"-tick\");\n        \n        if (!this.escapeHTML) {\n            this._elem.html(this.label);\n        }\n        else {\n            this._elem.text(this.label);\n        }\n        \n        this._elem.css(style);\n\n        for (var s in this._styles) {\n            this._elem.css(s, this._styles[s]);\n        }\n        if (this.fontFamily) {\n            this._elem.css('font-family', this.fontFamily);\n        }\n        if (this.fontSize) {\n            this._elem.css('font-size', this.fontSize);\n        }\n        if (this.textColor) {\n            this._elem.css('color', this.textColor);\n        }\n        if (this._breakTick) {\n          this._elem.addClass('jqplot-breakTick');\n        }\n        \n        return this._elem;\n    };\n        \n    $.jqplot.DefaultTickFormatter = function (format, val) {\n        if (typeof val == 'number') {\n            if (!format) {\n                format = $.jqplot.config.defaultTickFormatString;\n            }\n            return $.jqplot.sprintf(format, val);\n        }\n        else {\n            return String(val);\n        }\n    };\n        \n    $.jqplot.PercentTickFormatter = function (format, val) {\n        if (typeof val == 'number') {\n            val = 100 * val;\n            if (!format) {\n                format = $.jqplot.config.defaultTickFormatString;\n            }\n            return $.jqplot.sprintf(format, val);\n        }\n        else {\n            return String(val);\n        }\n    };\n    \n    $.jqplot.AxisTickRenderer.prototype.pack = function() {\n    };\n     \n    // Class: $.jqplot.CanvasGridRenderer\n    // The default jqPlot grid renderer, creating a grid on a canvas element.\n    // The renderer has no additional options beyond the <Grid> class.\n    $.jqplot.CanvasGridRenderer = function(){\n        this.shadowRenderer = new $.jqplot.ShadowRenderer();\n    };\n    \n    // called with context of Grid object\n    $.jqplot.CanvasGridRenderer.prototype.init = function(options) {\n        this._ctx;\n        $.extend(true, this, options);\n        // set the shadow renderer options\n        var sopts = {lineJoin:'miter', lineCap:'round', fill:false, isarc:false, angle:this.shadowAngle, offset:this.shadowOffset, alpha:this.shadowAlpha, depth:this.shadowDepth, lineWidth:this.shadowWidth, closePath:false, strokeStyle:this.shadowColor};\n        this.renderer.shadowRenderer.init(sopts);\n    };\n    \n    // called with context of Grid.\n    $.jqplot.CanvasGridRenderer.prototype.createElement = function(plot) {\n        var elem;\n        // Memory Leaks patch\n        if (this._elem) {\n          if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n            elem = this._elem.get(0);\n            window.G_vmlCanvasManager.uninitElement(elem);\n            elem = null;\n          }\n          \n          this._elem.emptyForce();\n          this._elem = null;\n        }\n      \n        elem = plot.canvasManager.getCanvas();\n\n        var w = this._plotDimensions.width;\n        var h = this._plotDimensions.height;\n        elem.width = w;\n        elem.height = h;\n        this._elem = $(elem);\n        this._elem.addClass('jqplot-grid-canvas');\n        this._elem.css({ position: 'absolute', left: 0, top: 0 });\n        \n        elem = plot.canvasManager.initCanvas(elem);\n\n        this._top = this._offsets.top;\n        this._bottom = h - this._offsets.bottom;\n        this._left = this._offsets.left;\n        this._right = w - this._offsets.right;\n        this._width = this._right - this._left;\n        this._height = this._bottom - this._top;\n        // avoid memory leak\n        elem = null;\n        return this._elem;\n    };\n    \n    $.jqplot.CanvasGridRenderer.prototype.draw = function() {\n        this._ctx = this._elem.get(0).getContext(\"2d\");\n        var ctx = this._ctx;\n        var axes = this._axes;\n        // Add the grid onto the grid canvas.  This is the bottom most layer.\n        ctx.save();\n        ctx.clearRect(0, 0, this._plotDimensions.width, this._plotDimensions.height);\n        ctx.fillStyle = this.backgroundColor || this.background;\n        ctx.fillRect(this._left, this._top, this._width, this._height);\n        \n        ctx.save();\n        ctx.lineJoin = 'miter';\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = this.gridLineWidth;\n        ctx.strokeStyle = this.gridLineColor;\n        var b, e, s, m;\n        var ax = ['xaxis', 'yaxis', 'x2axis', 'y2axis'];\n        for (var i=4; i>0; i--) {\n            var name = ax[i-1];\n            var axis = axes[name];\n            var ticks = axis._ticks;\n            var numticks = ticks.length;\n            if (axis.show) {\n                if (axis.drawBaseline) {\n                    var bopts = {};\n                    if (axis.baselineWidth !== null) {\n                        bopts.lineWidth = axis.baselineWidth;\n                    }\n                    if (axis.baselineColor !== null) {\n                        bopts.strokeStyle = axis.baselineColor;\n                    }\n                    switch (name) {\n                        case 'xaxis':\n                            drawLine (this._left, this._bottom, this._right, this._bottom, bopts);\n                            break;\n                        case 'yaxis':\n                            drawLine (this._left, this._bottom, this._left, this._top, bopts);\n                            break;\n                        case 'x2axis':\n                            drawLine (this._left, this._bottom, this._right, this._bottom, bopts);\n                            break;\n                        case 'y2axis':\n                            drawLine (this._right, this._bottom, this._right, this._top, bopts);\n                            break;\n                    }\n                }\n                for (var j=numticks; j>0; j--) {\n                    var t = ticks[j-1];\n                    if (t.show) {\n                        var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                        switch (name) {\n                            case 'xaxis':\n                                // draw the grid line if we should\n                                if (t.showGridline && this.drawGridlines && ((!t.isMinorTick && axis.drawMajorGridlines) || (t.isMinorTick && axis.drawMinorGridlines)) ) {\n                                    drawLine(pos, this._top, pos, this._bottom);\n                                }\n                                // draw the mark\n                                if (t.showMark && t.mark && ((!t.isMinorTick && axis.drawMajorTickMarks) || (t.isMinorTick && axis.drawMinorTickMarks)) ) {\n                                    s = t.markSize;\n                                    m = t.mark;\n                                    var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                                    switch (m) {\n                                        case 'outside':\n                                            b = this._bottom;\n                                            e = this._bottom+s;\n                                            break;\n                                        case 'inside':\n                                            b = this._bottom-s;\n                                            e = this._bottom;\n                                            break;\n                                        case 'cross':\n                                            b = this._bottom-s;\n                                            e = this._bottom+s;\n                                            break;\n                                        default:\n                                            b = this._bottom;\n                                            e = this._bottom+s;\n                                            break;\n                                    }\n                                    // draw the shadow\n                                    if (this.shadow) {\n                                        this.renderer.shadowRenderer.draw(ctx, [[pos,b],[pos,e]], {lineCap:'butt', lineWidth:this.gridLineWidth, offset:this.gridLineWidth*0.75, depth:2, fill:false, closePath:false});\n                                    }\n                                    // draw the line\n                                    drawLine(pos, b, pos, e);\n                                }\n                                break;\n                            case 'yaxis':\n                                // draw the grid line\n                                if (t.showGridline && this.drawGridlines && ((!t.isMinorTick && axis.drawMajorGridlines) || (t.isMinorTick && axis.drawMinorGridlines)) ) {\n                                    drawLine(this._right, pos, this._left, pos);\n                                }\n                                // draw the mark\n                                if (t.showMark && t.mark && ((!t.isMinorTick && axis.drawMajorTickMarks) || (t.isMinorTick && axis.drawMinorTickMarks)) ) {\n                                    s = t.markSize;\n                                    m = t.mark;\n                                    var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                                    switch (m) {\n                                        case 'outside':\n                                            b = this._left-s;\n                                            e = this._left;\n                                            break;\n                                        case 'inside':\n                                            b = this._left;\n                                            e = this._left+s;\n                                            break;\n                                        case 'cross':\n                                            b = this._left-s;\n                                            e = this._left+s;\n                                            break;\n                                        default:\n                                            b = this._left-s;\n                                            e = this._left;\n                                            break;\n                                            }\n                                    // draw the shadow\n                                    if (this.shadow) {\n                                        this.renderer.shadowRenderer.draw(ctx, [[b, pos], [e, pos]], {lineCap:'butt', lineWidth:this.gridLineWidth*1.5, offset:this.gridLineWidth*0.75, fill:false, closePath:false});\n                                    }\n                                    drawLine(b, pos, e, pos, {strokeStyle:axis.borderColor});\n                                }\n                                break;\n                            case 'x2axis':\n                                // draw the grid line\n                                if (t.showGridline && this.drawGridlines && ((!t.isMinorTick && axis.drawMajorGridlines) || (t.isMinorTick && axis.drawMinorGridlines)) ) {\n                                    drawLine(pos, this._bottom, pos, this._top);\n                                }\n                                // draw the mark\n                                if (t.showMark && t.mark && ((!t.isMinorTick && axis.drawMajorTickMarks) || (t.isMinorTick && axis.drawMinorTickMarks)) ) {\n                                    s = t.markSize;\n                                    m = t.mark;\n                                    var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                                    switch (m) {\n                                        case 'outside':\n                                            b = this._top-s;\n                                            e = this._top;\n                                            break;\n                                        case 'inside':\n                                            b = this._top;\n                                            e = this._top+s;\n                                            break;\n                                        case 'cross':\n                                            b = this._top-s;\n                                            e = this._top+s;\n                                            break;\n                                        default:\n                                            b = this._top-s;\n                                            e = this._top;\n                                            break;\n                                            }\n                                    // draw the shadow\n                                    if (this.shadow) {\n                                        this.renderer.shadowRenderer.draw(ctx, [[pos,b],[pos,e]], {lineCap:'butt', lineWidth:this.gridLineWidth, offset:this.gridLineWidth*0.75, depth:2, fill:false, closePath:false});\n                                    }\n                                    drawLine(pos, b, pos, e);\n                                }\n                                break;\n                            case 'y2axis':\n                                // draw the grid line\n                                if (t.showGridline && this.drawGridlines && ((!t.isMinorTick && axis.drawMajorGridlines) || (t.isMinorTick && axis.drawMinorGridlines)) ) {\n                                    drawLine(this._left, pos, this._right, pos);\n                                }\n                                // draw the mark\n                                if (t.showMark && t.mark && ((!t.isMinorTick && axis.drawMajorTickMarks) || (t.isMinorTick && axis.drawMinorTickMarks)) ) {\n                                    s = t.markSize;\n                                    m = t.mark;\n                                    var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                                    switch (m) {\n                                        case 'outside':\n                                            b = this._right;\n                                            e = this._right+s;\n                                            break;\n                                        case 'inside':\n                                            b = this._right-s;\n                                            e = this._right;\n                                            break;\n                                        case 'cross':\n                                            b = this._right-s;\n                                            e = this._right+s;\n                                            break;\n                                        default:\n                                            b = this._right;\n                                            e = this._right+s;\n                                            break;\n                                            }\n                                    // draw the shadow\n                                    if (this.shadow) {\n                                        this.renderer.shadowRenderer.draw(ctx, [[b, pos], [e, pos]], {lineCap:'butt', lineWidth:this.gridLineWidth*1.5, offset:this.gridLineWidth*0.75, fill:false, closePath:false});\n                                    }\n                                    drawLine(b, pos, e, pos, {strokeStyle:axis.borderColor});\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                }\n                t = null;\n            }\n            axis = null;\n            ticks = null;\n        }\n        // Now draw grid lines for additional y axes\n        //////\n        // TO DO: handle yMidAxis\n        //////\n        ax = ['y3axis', 'y4axis', 'y5axis', 'y6axis', 'y7axis', 'y8axis', 'y9axis', 'yMidAxis'];\n        for (var i=7; i>0; i--) {\n            var axis = axes[ax[i-1]];\n            var ticks = axis._ticks;\n            if (axis.show) {\n                var tn = ticks[axis.numberTicks-1];\n                var t0 = ticks[0];\n                var left = axis.getLeft();\n                var points = [[left, tn.getTop() + tn.getHeight()/2], [left, t0.getTop() + t0.getHeight()/2 + 1.0]];\n                // draw the shadow\n                if (this.shadow) {\n                    this.renderer.shadowRenderer.draw(ctx, points, {lineCap:'butt', fill:false, closePath:false});\n                }\n                // draw the line\n                drawLine(points[0][0], points[0][1], points[1][0], points[1][1], {lineCap:'butt', strokeStyle:axis.borderColor, lineWidth:axis.borderWidth});\n                // draw the tick marks\n                for (var j=ticks.length; j>0; j--) {\n                    var t = ticks[j-1];\n                    s = t.markSize;\n                    m = t.mark;\n                    var pos = Math.round(axis.u2p(t.value)) + 0.5;\n                    if (t.showMark && t.mark) {\n                        switch (m) {\n                            case 'outside':\n                                b = left;\n                                e = left+s;\n                                break;\n                            case 'inside':\n                                b = left-s;\n                                e = left;\n                                break;\n                            case 'cross':\n                                b = left-s;\n                                e = left+s;\n                                break;\n                            default:\n                                b = left;\n                                e = left+s;\n                                break;\n                        }\n                        points = [[b,pos], [e,pos]];\n                        // draw the shadow\n                        if (this.shadow) {\n                            this.renderer.shadowRenderer.draw(ctx, points, {lineCap:'butt', lineWidth:this.gridLineWidth*1.5, offset:this.gridLineWidth*0.75, fill:false, closePath:false});\n                        }\n                        // draw the line\n                        drawLine(b, pos, e, pos, {strokeStyle:axis.borderColor});\n                    }\n                    t = null;\n                }\n                t0 = null;\n            }\n            axis = null;\n            ticks =  null;\n        }\n        \n        ctx.restore();\n        \n        function drawLine(bx, by, ex, ey, opts) {\n            ctx.save();\n            opts = opts || {};\n            if (opts.lineWidth == null || opts.lineWidth != 0){\n                $.extend(true, ctx, opts);\n                ctx.beginPath();\n                ctx.moveTo(bx, by);\n                ctx.lineTo(ex, ey);\n                ctx.stroke();\n                ctx.restore();\n            }\n        }\n        \n        if (this.shadow) {\n            var points = [[this._left, this._bottom], [this._right, this._bottom], [this._right, this._top]];\n            this.renderer.shadowRenderer.draw(ctx, points);\n        }\n        // Now draw border around grid.  Use axis border definitions. start at\n        // upper left and go clockwise.\n        if (this.borderWidth != 0 && this.drawBorder) {\n            drawLine (this._left, this._top, this._right, this._top, {lineCap:'round', strokeStyle:axes.x2axis.borderColor, lineWidth:axes.x2axis.borderWidth});\n            drawLine (this._right, this._top, this._right, this._bottom, {lineCap:'round', strokeStyle:axes.y2axis.borderColor, lineWidth:axes.y2axis.borderWidth});\n            drawLine (this._right, this._bottom, this._left, this._bottom, {lineCap:'round', strokeStyle:axes.xaxis.borderColor, lineWidth:axes.xaxis.borderWidth});\n            drawLine (this._left, this._bottom, this._left, this._top, {lineCap:'round', strokeStyle:axes.yaxis.borderColor, lineWidth:axes.yaxis.borderWidth});\n        }\n        // ctx.lineWidth = this.borderWidth;\n        // ctx.strokeStyle = this.borderColor;\n        // ctx.strokeRect(this._left, this._top, this._width, this._height);\n        \n        ctx.restore();\n        ctx =  null;\n        axes = null;\n    };\n \n    // Class: $.jqplot.DivTitleRenderer\n    // The default title renderer for jqPlot.  This class has no options beyond the <Title> class. \n    $.jqplot.DivTitleRenderer = function() {\n    };\n    \n    $.jqplot.DivTitleRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.DivTitleRenderer.prototype.draw = function() {\n        // Memory Leaks patch\n        if (this._elem) {\n            this._elem.emptyForce();\n            this._elem = null;\n        }\n\n        var r = this.renderer;\n        var elem = document.createElement('div');\n        this._elem = $(elem);\n        this._elem.addClass('jqplot-title');\n\n        if (!this.text) {\n            this.show = false;\n            this._elem.height(0);\n            this._elem.width(0);\n        }\n        else if (this.text) {\n            var color;\n            if (this.color) {\n                color = this.color;\n            }\n            else if (this.textColor) {\n                color = this.textColor;\n            }\n\n            // don't trust that a stylesheet is present, set the position.\n            var styles = {position:'absolute', top:'0px', left:'0px'};\n\n            if (this._plotWidth) {\n                styles['width'] = this._plotWidth+'px';\n            }\n            if (this.fontSize) {\n                styles['fontSize'] = this.fontSize;\n            }\n            if (typeof this.textAlign === 'string') {\n                styles['textAlign'] = this.textAlign;\n            }\n            else {\n                styles['textAlign'] = 'center';\n            }\n            if (color) {\n                styles['color'] = color;\n            }\n            if (this.paddingBottom) {\n                styles['paddingBottom'] = this.paddingBottom;\n            }\n            if (this.fontFamily) {\n                styles['fontFamily'] = this.fontFamily;\n            }\n\n            this._elem.css(styles);\n            if (this.escapeHtml) {\n                this._elem.text(this.text);\n            }\n            else {\n                this._elem.html(this.text);\n            }\n\n\n            // styletext += (this._plotWidth) ? 'width:'+this._plotWidth+'px;' : '';\n            // styletext += (this.fontSize) ? 'font-size:'+this.fontSize+';' : '';\n            // styletext += (this.textAlign) ? 'text-align:'+this.textAlign+';' : 'text-align:center;';\n            // styletext += (color) ? 'color:'+color+';' : '';\n            // styletext += (this.paddingBottom) ? 'padding-bottom:'+this.paddingBottom+';' : '';\n            // this._elem = $('<div class=\"jqplot-title\" style=\"'+styletext+'\">'+this.text+'</div>');\n            // if (this.fontFamily) {\n            //     this._elem.css('font-family', this.fontFamily);\n            // }\n        }\n\n        elem = null;\n        \n        return this._elem;\n    };\n    \n    $.jqplot.DivTitleRenderer.prototype.pack = function() {\n        // nothing to do here\n    };\n  \n\n    var dotlen = 0.1;\n\n    $.jqplot.LinePattern = function (ctx, pattern) {\n\n        var defaultLinePatterns = {\n            dotted: [ dotlen, $.jqplot.config.dotGapLength ],\n            dashed: [ $.jqplot.config.dashLength, $.jqplot.config.gapLength ],\n            solid: null\n        };\n\n        if (typeof pattern === 'string') {\n            if (pattern[0] === '.' || pattern[0] === '-') {\n                var s = pattern;\n                pattern = [];\n                for (var i=0, imax=s.length; i<imax; i++) {\n                    if (s[i] === '.') {\n                        pattern.push( dotlen );\n                    }\n                    else if (s[i] === '-') {\n                        pattern.push( $.jqplot.config.dashLength );\n                    }\n                    else {\n                        continue;\n                    }\n                    pattern.push( $.jqplot.config.gapLength );\n                }\n            }\n            else {\n                pattern = defaultLinePatterns[pattern];\n            }\n        }\n\n        if (!(pattern && pattern.length)) {\n            return ctx;\n        }\n\n        var patternIndex = 0;\n        var patternDistance = pattern[0];\n        var px = 0;\n        var py = 0;\n        var pathx0 = 0;\n        var pathy0 = 0;\n\n        var moveTo = function (x, y) {\n            ctx.moveTo( x, y );\n            px = x;\n            py = y;\n            pathx0 = x;\n            pathy0 = y;\n        };\n\n        var lineTo = function (x, y) {\n            var scale = ctx.lineWidth;\n            var dx = x - px;\n            var dy = y - py;\n            var dist = Math.sqrt(dx*dx+dy*dy);\n            if ((dist > 0) && (scale > 0)) {\n                dx /= dist;\n                dy /= dist;\n                while (true) {\n                    var dp = scale * patternDistance;\n                    if (dp < dist) {\n                        px += dp * dx;\n                        py += dp * dy;\n                        if ((patternIndex & 1) == 0) {\n                            ctx.lineTo( px, py );\n                        }\n                        else {\n                            ctx.moveTo( px, py );\n                        }\n                        dist -= dp;\n                        patternIndex++;\n                        if (patternIndex >= pattern.length) {\n                            patternIndex = 0;\n                        }\n                        patternDistance = pattern[patternIndex];\n                    }\n                    else {\n                        px = x;\n                        py = y;\n                        if ((patternIndex & 1) == 0) {\n                            ctx.lineTo( px, py );\n                        }\n                        else {\n                            ctx.moveTo( px, py );\n                        }\n                        patternDistance -= dist / scale;\n                        break;\n                    }\n                }\n            }\n        };\n\n        var beginPath = function () {\n            ctx.beginPath();\n        };\n\n        var closePath = function () {\n            lineTo( pathx0, pathy0 );\n        };\n\n        return {\n            moveTo: moveTo,\n            lineTo: lineTo,\n            beginPath: beginPath,\n            closePath: closePath\n        };\n    };\n\n    // Class: $.jqplot.LineRenderer\n    // The default line renderer for jqPlot, this class has no options beyond the <Series> class.\n    // Draws series as a line.\n    $.jqplot.LineRenderer = function(){\n        this.shapeRenderer = new $.jqplot.ShapeRenderer();\n        this.shadowRenderer = new $.jqplot.ShadowRenderer();\n    };\n    \n    // called with scope of series.\n    $.jqplot.LineRenderer.prototype.init = function(options, plot) {\n        // Group: Properties\n        //\n        options = options || {};\n        this._type='line';\n        this.renderer.animation = {\n            show: false,\n            direction: 'left',\n            speed: 2500,\n            _supported: true\n        };\n        // prop: smooth\n        // True to draw a smoothed (interpolated) line through the data points\n        // with automatically computed number of smoothing points.\n        // Set to an integer number > 2 to specify number of smoothing points\n        // to use between each data point.\n        this.renderer.smooth = false;  // true or a number > 2 for smoothing.\n        this.renderer.tension = null; // null to auto compute or a number typically > 6.  Fewer points requires higher tension.\n        // prop: constrainSmoothing\n        // True to use a more accurate smoothing algorithm that will\n        // not overshoot any data points.  False to allow overshoot but\n        // produce a smoother looking line.\n        this.renderer.constrainSmoothing = true;\n        // this is smoothed data in grid coordinates, like gridData\n        this.renderer._smoothedData = [];\n        // this is smoothed data in plot units (plot coordinates), like plotData.\n        this.renderer._smoothedPlotData = [];\n        this.renderer._hiBandGridData = [];\n        this.renderer._lowBandGridData = [];\n        this.renderer._hiBandSmoothedData = [];\n        this.renderer._lowBandSmoothedData = [];\n\n        // prop: bandData\n        // Data used to draw error bands or confidence intervals above/below a line.\n        //\n        // bandData can be input in 3 forms.  jqPlot will figure out which is the\n        // low band line and which is the high band line for all forms:\n        // \n        // A 2 dimensional array like [[yl1, yl2, ...], [yu1, yu2, ...]] where\n        // [yl1, yl2, ...] are y values of the lower line and\n        // [yu1, yu2, ...] are y values of the upper line.\n        // In this case there must be the same number of y data points as data points\n        // in the series and the bands will inherit the x values of the series.\n        //\n        // A 2 dimensional array like [[[xl1, yl1], [xl2, yl2], ...], [[xh1, yh1], [xh2, yh2], ...]]\n        // where [xl1, yl1] are x,y data points for the lower line and\n        // [xh1, yh1] are x,y data points for the high line.\n        // x values do not have to correspond to the x values of the series and can\n        // be of any arbitrary length.\n        //\n        // Can be of form [[yl1, yu1], [yl2, yu2], [yl3, yu3], ...] where\n        // there must be 3 or more arrays and there must be the same number of arrays\n        // as there are data points in the series.  In this case, \n        // [yl1, yu1] specifies the lower and upper y values for the 1st\n        // data point and so on.  The bands will inherit the x\n        // values from the series.\n        this.renderer.bandData = [];\n\n        // Group: bands\n        // Banding around line, e.g error bands or confidence intervals.\n        this.renderer.bands = {\n            // prop: show\n            // true to show the bands.  If bandData or interval is\n            // supplied, show will be set to true by default.\n            show: false,\n            hiData: [],\n            lowData: [],\n            // prop: color\n            // color of lines at top and bottom of bands [default: series color].\n            color: this.color,\n            // prop: showLines\n            // True to show lines at top and bottom of bands [default: false].\n            showLines: false,\n            // prop: fill\n            // True to fill area between bands [default: true].\n            fill: true,\n            // prop: fillColor\n            // css color spec for filled area.  [default: series color].\n            fillColor: null,\n            _min: null,\n            _max: null,\n            // prop: interval\n            // User specified interval above and below line for bands [default: '3%''].\n            // Can be a value like 3 or a string like '3%' \n            // or an upper/lower array like [1, -2] or ['2%', '-1.5%']\n            interval: '3%'\n        };\n\n\n        var lopts = {highlightMouseOver: options.highlightMouseOver, highlightMouseDown: options.highlightMouseDown, highlightColor: options.highlightColor};\n        \n        delete (options.highlightMouseOver);\n        delete (options.highlightMouseDown);\n        delete (options.highlightColor);\n        \n        $.extend(true, this.renderer, options);\n\n        this.renderer.options = options;\n\n        // if we are given some band data, and bands aren't explicity set to false in options, turn them on.\n        if (this.renderer.bandData.length > 1 && (!options.bands || options.bands.show == null)) {\n            this.renderer.bands.show = true;\n        }\n\n        // if we are given an interval, and bands aren't explicity set to false in options, turn them on.\n        else if (options.bands && options.bands.show == null && options.bands.interval != null) {\n            this.renderer.bands.show = true;\n        }\n\n        // if plot is filled, turn off bands.\n        if (this.fill) {\n            this.renderer.bands.show = false;\n        }\n\n        if (this.renderer.bands.show) {\n            this.renderer.initBands.call(this, this.renderer.options, plot);\n        }\n\n\n        // smoothing is not compatible with stacked lines, disable\n        if (this._stack) {\n            this.renderer.smooth = false;\n        }\n\n        // set the shape renderer options\n        var opts = {lineJoin:this.lineJoin, lineCap:this.lineCap, fill:this.fill, isarc:false, strokeStyle:this.color, fillStyle:this.fillColor, lineWidth:this.lineWidth, linePattern:this.linePattern, closePath:this.fill};\n        this.renderer.shapeRenderer.init(opts);\n\n        var shadow_offset = options.shadowOffset;\n        // set the shadow renderer options\n        if (shadow_offset == null) {\n            // scale the shadowOffset to the width of the line.\n            if (this.lineWidth > 2.5) {\n                shadow_offset = 1.25 * (1 + (Math.atan((this.lineWidth/2.5))/0.785398163 - 1)*0.6);\n                // var shadow_offset = this.shadowOffset;\n            }\n            // for skinny lines, don't make such a big shadow.\n            else {\n                shadow_offset = 1.25 * Math.atan((this.lineWidth/2.5))/0.785398163;\n            }\n        }\n        \n        var sopts = {lineJoin:this.lineJoin, lineCap:this.lineCap, fill:this.fill, isarc:false, angle:this.shadowAngle, offset:shadow_offset, alpha:this.shadowAlpha, depth:this.shadowDepth, lineWidth:this.lineWidth, linePattern:this.linePattern, closePath:this.fill};\n        this.renderer.shadowRenderer.init(sopts);\n        this._areaPoints = [];\n        this._boundingBox = [[],[]];\n        \n        if (!this.isTrendline && this.fill || this.renderer.bands.show) {\n            // Group: Properties\n            //        \n            // prop: highlightMouseOver\n            // True to highlight area on a filled plot when moused over.\n            // This must be false to enable highlightMouseDown to highlight when clicking on an area on a filled plot.\n            this.highlightMouseOver = true;\n            // prop: highlightMouseDown\n            // True to highlight when a mouse button is pressed over an area on a filled plot.\n            // This will be disabled if highlightMouseOver is true.\n            this.highlightMouseDown = false;\n            // prop: highlightColor\n            // color to use when highlighting an area on a filled plot.\n            this.highlightColor = null;\n            // if user has passed in highlightMouseDown option and not set highlightMouseOver, disable highlightMouseOver\n            if (lopts.highlightMouseDown && lopts.highlightMouseOver == null) {\n                lopts.highlightMouseOver = false;\n            }\n        \n            $.extend(true, this, {highlightMouseOver: lopts.highlightMouseOver, highlightMouseDown: lopts.highlightMouseDown, highlightColor: lopts.highlightColor});\n            \n            if (!this.highlightColor) {\n                var fc = (this.renderer.bands.show) ? this.renderer.bands.fillColor : this.fillColor;\n                this.highlightColor = $.jqplot.computeHighlightColors(fc);\n            }\n            // turn off (disable) the highlighter plugin\n            if (this.highlighter) {\n                this.highlighter.show = false;\n            }\n        }\n        \n        if (!this.isTrendline && plot) {\n            plot.plugins.lineRenderer = {};\n            plot.postInitHooks.addOnce(postInit);\n            plot.postDrawHooks.addOnce(postPlotDraw);\n            plot.eventListenerHooks.addOnce('jqplotMouseMove', handleMove);\n            plot.eventListenerHooks.addOnce('jqplotMouseDown', handleMouseDown);\n            plot.eventListenerHooks.addOnce('jqplotMouseUp', handleMouseUp);\n            plot.eventListenerHooks.addOnce('jqplotClick', handleClick);\n            plot.eventListenerHooks.addOnce('jqplotRightClick', handleRightClick);\n        }\n\n    };\n\n    $.jqplot.LineRenderer.prototype.initBands = function(options, plot) {\n        // use bandData if no data specified in bands option\n        //var bd = this.renderer.bandData;\n        var bd = options.bandData || [];\n        var bands = this.renderer.bands;\n        bands.hiData = [];\n        bands.lowData = [];\n        var data = this.data;\n        bands._max = null;\n        bands._min = null;\n        // If 2 arrays, and each array greater than 2 elements, assume it is hi and low data bands of y values.\n        if (bd.length == 2) {\n            // Do we have an array of x,y values?\n            // like [[[1,1], [2,4], [3,3]], [[1,3], [2,6], [3,5]]]\n            if ($.isArray(bd[0][0])) {\n                // since an arbitrary array of points, spin through all of them to determine max and min lines.\n\n                var p;\n                var bdminidx = 0, bdmaxidx = 0;\n                for (var i = 0, l = bd[0].length; i<l; i++) {\n                    p = bd[0][i];\n                    if ((p[1] != null && p[1] > bands._max) || bands._max == null) {\n                        bands._max = p[1];\n                    }\n                    if ((p[1] != null && p[1] < bands._min) || bands._min == null) {\n                        bands._min = p[1];\n                    }\n                }\n                for (var i = 0, l = bd[1].length; i<l; i++) {\n                    p = bd[1][i];\n                    if ((p[1] != null && p[1] > bands._max) || bands._max == null) {\n                        bands._max = p[1];\n                        bdmaxidx = 1;\n                    }\n                    if ((p[1] != null && p[1] < bands._min) || bands._min == null) {\n                        bands._min = p[1];\n                        bdminidx = 1;\n                    }\n                }\n\n                if (bdmaxidx === bdminidx) {\n                    bands.show = false;\n                }\n\n                bands.hiData = bd[bdmaxidx];\n                bands.lowData = bd[bdminidx];\n            }\n            // else data is arrays of y values\n            // like [[1,4,3], [3,6,5]]\n            // must have same number of band data points as points in series\n            else if (bd[0].length === data.length && bd[1].length === data.length) {\n                var hi = (bd[0][0] > bd[1][0]) ? 0 : 1;\n                var low = (hi) ? 0 : 1;\n                for (var i=0, l=data.length; i < l; i++) {\n                    bands.hiData.push([data[i][0], bd[hi][i]]);\n                    bands.lowData.push([data[i][0], bd[low][i]]);\n                }\n            }\n\n            // we don't have proper data array, don't show bands.\n            else {\n                bands.show = false;\n            }\n        }\n\n        // if more than 2 arrays, have arrays of [ylow, yhi] values.\n        // note, can't distinguish case of [[ylow, yhi], [ylow, yhi]] from [[ylow, ylow], [yhi, yhi]]\n        // this is assumed to be of the latter form.\n        else if (bd.length > 2 && !$.isArray(bd[0][0])) {\n            var hi = (bd[0][0] > bd[0][1]) ? 0 : 1;\n            var low = (hi) ? 0 : 1;\n            for (var i=0, l=bd.length; i<l; i++) {\n                bands.hiData.push([data[i][0], bd[i][hi]]);\n                bands.lowData.push([data[i][0], bd[i][low]]);\n            }\n        }\n\n        // don't have proper data, auto calculate\n        else {\n            var intrv = bands.interval;\n            var a = null;\n            var b = null;\n            var afunc = null;\n            var bfunc = null;\n\n            if ($.isArray(intrv)) {\n                a = intrv[0];\n                b = intrv[1];\n            }\n            else {\n                a = intrv;\n            }\n\n            if (isNaN(a)) {\n                // we have a string\n                if (a.charAt(a.length - 1) === '%') {\n                    afunc = 'multiply';\n                    a = parseFloat(a)/100 + 1;\n                }\n            }\n\n            else {\n                a = parseFloat(a);\n                afunc = 'add';\n            }\n\n            if (b !== null && isNaN(b)) {\n                // we have a string\n                if (b.charAt(b.length - 1) === '%') {\n                    bfunc = 'multiply';\n                    b = parseFloat(b)/100 + 1;\n                }\n            }\n\n            else if (b !== null) {\n                b = parseFloat(b);\n                bfunc = 'add';\n            }\n\n            if (a !== null) {\n                if (b === null) {\n                    b = -a;\n                    bfunc = afunc;\n                    if (bfunc === 'multiply') {\n                        b += 2;\n                    }\n                }\n\n                // make sure a always applies to hi band.\n                if (a < b) {\n                    var temp = a;\n                    a = b;\n                    b = temp;\n                    temp = afunc;\n                    afunc = bfunc;\n                    bfunc = temp;\n                }\n\n                for (var i=0, l = data.length; i < l; i++) {\n                    switch (afunc) {\n                        case 'add':\n                            bands.hiData.push([data[i][0], data[i][1] + a]);\n                            break;\n                        case 'multiply':\n                            bands.hiData.push([data[i][0], data[i][1] * a]);\n                            break;\n                    }\n                    switch (bfunc) {\n                        case 'add':\n                            bands.lowData.push([data[i][0], data[i][1] + b]);\n                            break;\n                        case 'multiply':\n                            bands.lowData.push([data[i][0], data[i][1] * b]);\n                            break;\n                    }\n                }\n            }\n\n            else {\n                bands.show = false;\n            }\n        }\n\n        var hd = bands.hiData;\n        var ld = bands.lowData;\n        for (var i = 0, l = hd.length; i<l; i++) {\n            if ((hd[i][1] != null && hd[i][1] > bands._max) || bands._max == null) {\n                bands._max = hd[i][1];\n            }\n        }\n        for (var i = 0, l = ld.length; i<l; i++) {\n            if ((ld[i][1] != null && ld[i][1] < bands._min) || bands._min == null) {\n                bands._min = ld[i][1];\n            }\n        }\n\n        // one last check for proper data\n        // these don't apply any more since allowing arbitrary x,y values\n        // if (bands.hiData.length != bands.lowData.length) {\n        //     bands.show = false;\n        // }\n\n        // if (bands.hiData.length != this.data.length) {\n        //     bands.show = false;\n        // }\n\n        if (bands.fillColor === null) {\n            var c = $.jqplot.getColorComponents(bands.color);\n            // now adjust alpha to differentiate fill\n            c[3] = c[3] * 0.5;\n            bands.fillColor = 'rgba(' + c[0] +', '+ c[1] +', '+ c[2] +', '+ c[3] + ')';\n        }\n    };\n\n    function getSteps (d, f) {\n        return (3.4182054+f) * Math.pow(d, -0.3534992);\n    }\n\n    function computeSteps (d1, d2) {\n        var s = Math.sqrt(Math.pow((d2[0]- d1[0]), 2) + Math.pow ((d2[1] - d1[1]), 2));\n        return 5.7648 * Math.log(s) + 7.4456;\n    }\n\n    function tanh (x) {\n        var a = (Math.exp(2*x) - 1) / (Math.exp(2*x) + 1);\n        return a;\n    }\n\n    //////////\n    // computeConstrainedSmoothedData\n    // An implementation of the constrained cubic spline interpolation\n    // method as presented in:\n    //\n    // Kruger, CJC, Constrained Cubic Spine Interpolation for Chemical Engineering Applications\n    // http://www.korf.co.uk/spline.pdf\n    //\n    // The implementation below borrows heavily from the sample Visual Basic\n    // implementation by CJC Kruger found in http://www.korf.co.uk/spline.xls\n    //\n    /////////\n\n    // called with scope of series\n    function computeConstrainedSmoothedData (gd) {\n        var smooth = this.renderer.smooth;\n        var dim = this.canvas.getWidth();\n        var xp = this._xaxis.series_p2u;\n        var yp = this._yaxis.series_p2u; \n        var steps =null;\n        var _steps = null;\n        var dist = gd.length/dim;\n        var _smoothedData = [];\n        var _smoothedPlotData = [];\n\n        if (!isNaN(parseFloat(smooth))) {\n            steps = parseFloat(smooth);\n        }\n        else {\n            steps = getSteps(dist, 0.5);\n        }\n\n        var yy = [];\n        var xx = [];\n\n        for (var i=0, l = gd.length; i<l; i++) {\n            yy.push(gd[i][1]);\n            xx.push(gd[i][0]);\n        }\n\n        function dxx(x1, x0) {\n            if (x1 - x0 == 0) {\n                return Math.pow(10,10);\n            }\n            else {\n                return x1 - x0;\n            }\n        }\n\n        var A, B, C, D;\n        // loop through each line segment.  Have # points - 1 line segments.  Nmber segments starting at 1.\n        var nmax = gd.length - 1;\n        for (var num = 1, gdl = gd.length; num<gdl; num++) {\n            var gxx = [];\n            var ggxx = [];\n            // point at each end of segment.\n            for (var j = 0; j < 2; j++) {\n                var i = num - 1 + j; // point number, 0 to # points.\n\n                if (i == 0 || i == nmax) {\n                    gxx[j] = Math.pow(10, 10);\n                }\n                else if (yy[i+1] - yy[i] == 0 || yy[i] - yy[i-1] == 0) {\n                    gxx[j] = 0;\n                }\n                else if (((xx[i+1] - xx[i]) / (yy[i+1] - yy[i]) + (xx[i] - xx[i-1]) / (yy[i] - yy[i-1])) == 0 ) {\n                    gxx[j] = 0;\n                }\n                else if ( (yy[i+1] - yy[i]) * (yy[i] - yy[i-1]) < 0 ) {\n                    gxx[j] = 0;\n                }\n\n                else {\n                    gxx[j] = 2 / (dxx(xx[i + 1], xx[i]) / (yy[i + 1] - yy[i]) + dxx(xx[i], xx[i - 1]) / (yy[i] - yy[i - 1]));\n                }\n            }\n\n            // Reset first derivative (slope) at first and last point\n            if (num == 1) {\n                // First point has 0 2nd derivative\n                gxx[0] = 3 / 2 * (yy[1] - yy[0]) / dxx(xx[1], xx[0]) - gxx[1] / 2;\n            }\n            else if (num == nmax) {\n                // Last point has 0 2nd derivative\n                gxx[1] = 3 / 2 * (yy[nmax] - yy[nmax - 1]) / dxx(xx[nmax], xx[nmax - 1]) - gxx[0] / 2;\n            }   \n\n            // Calc second derivative at points\n            ggxx[0] = -2 * (gxx[1] + 2 * gxx[0]) / dxx(xx[num], xx[num - 1]) + 6 * (yy[num] - yy[num - 1]) / Math.pow(dxx(xx[num], xx[num - 1]), 2);\n            ggxx[1] = 2 * (2 * gxx[1] + gxx[0]) / dxx(xx[num], xx[num - 1]) - 6 * (yy[num] - yy[num - 1]) / Math.pow(dxx(xx[num], xx[num - 1]), 2);\n\n            // Calc constants for cubic interpolation\n            D = 1 / 6 * (ggxx[1] - ggxx[0]) / dxx(xx[num], xx[num - 1]);\n            C = 1 / 2 * (xx[num] * ggxx[0] - xx[num - 1] * ggxx[1]) / dxx(xx[num], xx[num - 1]);\n            B = (yy[num] - yy[num - 1] - C * (Math.pow(xx[num], 2) - Math.pow(xx[num - 1], 2)) - D * (Math.pow(xx[num], 3) - Math.pow(xx[num - 1], 3))) / dxx(xx[num], xx[num - 1]);\n            A = yy[num - 1] - B * xx[num - 1] - C * Math.pow(xx[num - 1], 2) - D * Math.pow(xx[num - 1], 3);\n\n            var increment = (xx[num] - xx[num - 1]) / steps;\n            var temp, tempx;\n\n            for (var j = 0, l = steps; j < l; j++) {\n                temp = [];\n                tempx = xx[num - 1] + j * increment;\n                temp.push(tempx);\n                temp.push(A + B * tempx + C * Math.pow(tempx, 2) + D * Math.pow(tempx, 3));\n                _smoothedData.push(temp);\n                _smoothedPlotData.push([xp(temp[0]), yp(temp[1])]);\n            }\n        }\n\n        _smoothedData.push(gd[i]);\n        _smoothedPlotData.push([xp(gd[i][0]), yp(gd[i][1])]);\n\n        return [_smoothedData, _smoothedPlotData];\n    }\n\n    ///////\n    // computeHermiteSmoothedData\n    // A hermite spline smoothing of the plot data.\n    // This implementation is derived from the one posted\n    // by krypin on the jqplot-users mailing list:\n    //\n    // http://groups.google.com/group/jqplot-users/browse_thread/thread/748be6a445723cea?pli=1\n    //\n    // with a blog post:\n    //\n    // http://blog.statscollector.com/a-plugin-renderer-for-jqplot-to-draw-a-hermite-spline/\n    //\n    // and download of the original plugin:\n    //\n    // http://blog.statscollector.com/wp-content/uploads/2010/02/jqplot.hermiteSplineRenderer.js\n    //////////\n\n    // called with scope of series\n    function computeHermiteSmoothedData (gd) {\n        var smooth = this.renderer.smooth;\n        var tension = this.renderer.tension;\n        var dim = this.canvas.getWidth();\n        var xp = this._xaxis.series_p2u;\n        var yp = this._yaxis.series_p2u; \n        var steps =null;\n        var _steps = null;\n        var a = null;\n        var a1 = null;\n        var a2 = null;\n        var slope = null;\n        var slope2 = null;\n        var temp = null;\n        var t, s, h1, h2, h3, h4;\n        var TiX, TiY, Ti1X, Ti1Y;\n        var pX, pY, p;\n        var sd = [];\n        var spd = [];\n        var dist = gd.length/dim;\n        var min, max, stretch, scale, shift;\n        var _smoothedData = [];\n        var _smoothedPlotData = [];\n        if (!isNaN(parseFloat(smooth))) {\n            steps = parseFloat(smooth);\n        }\n        else {\n            steps = getSteps(dist, 0.5);\n        }\n        if (!isNaN(parseFloat(tension))) {\n            tension = parseFloat(tension);\n        }\n\n        for (var i=0, l = gd.length-1; i < l; i++) {\n\n            if (tension === null) {\n                slope = Math.abs((gd[i+1][1] - gd[i][1]) / (gd[i+1][0] - gd[i][0]));\n\n                min = 0.3;\n                max = 0.6;\n                stretch = (max - min)/2.0;\n                scale = 2.5;\n                shift = -1.4;\n\n                temp = slope/scale + shift;\n\n                a1 = stretch * tanh(temp) - stretch * tanh(shift) + min;\n\n                // if have both left and right line segments, will use  minimum tension. \n                if (i > 0) {\n                    slope2 = Math.abs((gd[i][1] - gd[i-1][1]) / (gd[i][0] - gd[i-1][0]));\n                }\n                temp = slope2/scale + shift;\n\n                a2 = stretch * tanh(temp) - stretch * tanh(shift) + min;\n\n                a = (a1 + a2)/2.0;\n\n            }\n            else {\n                a = tension;\n            }\n            for (t=0; t < steps; t++) {\n                s = t / steps;\n                h1 = (1 + 2*s)*Math.pow((1-s),2);\n                h2 = s*Math.pow((1-s),2);\n                h3 = Math.pow(s,2)*(3-2*s);\n                h4 = Math.pow(s,2)*(s-1);     \n                \n                if (gd[i-1]) {  \n                    TiX = a * (gd[i+1][0] - gd[i-1][0]); \n                    TiY = a * (gd[i+1][1] - gd[i-1][1]);\n                } else {\n                    TiX = a * (gd[i+1][0] - gd[i][0]); \n                    TiY = a * (gd[i+1][1] - gd[i][1]);                                  \n                }\n                if (gd[i+2]) {  \n                    Ti1X = a * (gd[i+2][0] - gd[i][0]); \n                    Ti1Y = a * (gd[i+2][1] - gd[i][1]);\n                } else {\n                    Ti1X = a * (gd[i+1][0] - gd[i][0]); \n                    Ti1Y = a * (gd[i+1][1] - gd[i][1]);                                 \n                }\n                \n                pX = h1*gd[i][0] + h3*gd[i+1][0] + h2*TiX + h4*Ti1X;\n                pY = h1*gd[i][1] + h3*gd[i+1][1] + h2*TiY + h4*Ti1Y;\n                p = [pX, pY];\n\n                _smoothedData.push(p);\n                _smoothedPlotData.push([xp(pX), yp(pY)]);\n            }\n        }\n        _smoothedData.push(gd[l]);\n        _smoothedPlotData.push([xp(gd[l][0]), yp(gd[l][1])]);\n\n        return [_smoothedData, _smoothedPlotData];\n    }\n    \n    // setGridData\n    // converts the user data values to grid coordinates and stores them\n    // in the gridData array.\n    // Called with scope of a series.\n    $.jqplot.LineRenderer.prototype.setGridData = function(plot) {\n        // recalculate the grid data\n        var xp = this._xaxis.series_u2p;\n        var yp = this._yaxis.series_u2p;\n        var data = this._plotData;\n        var pdata = this._prevPlotData;\n        this.gridData = [];\n        this._prevGridData = [];\n        this.renderer._smoothedData = [];\n        this.renderer._smoothedPlotData = [];\n        this.renderer._hiBandGridData = [];\n        this.renderer._lowBandGridData = [];\n        this.renderer._hiBandSmoothedData = [];\n        this.renderer._lowBandSmoothedData = [];\n        var bands = this.renderer.bands;\n        var hasNull = false;\n        for (var i=0, l=data.length; i < l; i++) {\n            // if not a line series or if no nulls in data, push the converted point onto the array.\n            if (data[i][0] != null && data[i][1] != null) {\n                this.gridData.push([xp.call(this._xaxis, data[i][0]), yp.call(this._yaxis, data[i][1])]);\n            }\n            // else if there is a null, preserve it.\n            else if (data[i][0] == null) {\n                hasNull = true;\n                this.gridData.push([null, yp.call(this._yaxis, data[i][1])]);\n            }\n            else if (data[i][1] == null) {\n                hasNull = true;\n                this.gridData.push([xp.call(this._xaxis, data[i][0]), null]);\n            }\n            // if not a line series or if no nulls in data, push the converted point onto the array.\n            if (pdata[i] != null && pdata[i][0] != null && pdata[i][1] != null) {\n                this._prevGridData.push([xp.call(this._xaxis, pdata[i][0]), yp.call(this._yaxis, pdata[i][1])]);\n            }\n            // else if there is a null, preserve it.\n            else if (pdata[i] != null && pdata[i][0] == null) {\n                this._prevGridData.push([null, yp.call(this._yaxis, pdata[i][1])]);\n            }  \n            else if (pdata[i] != null && pdata[i][0] != null && pdata[i][1] == null) {\n                this._prevGridData.push([xp.call(this._xaxis, pdata[i][0]), null]);\n            }\n        }\n\n        // don't do smoothing or bands on broken lines.\n        if (hasNull) {\n            this.renderer.smooth = false;\n            if (this._type === 'line') {\n                bands.show = false;\n            }\n        }\n\n        if (this._type === 'line' && bands.show) {\n            for (var i=0, l=bands.hiData.length; i<l; i++) {\n                this.renderer._hiBandGridData.push([xp.call(this._xaxis, bands.hiData[i][0]), yp.call(this._yaxis, bands.hiData[i][1])]);\n            }\n            for (var i=0, l=bands.lowData.length; i<l; i++) {\n                this.renderer._lowBandGridData.push([xp.call(this._xaxis, bands.lowData[i][0]), yp.call(this._yaxis, bands.lowData[i][1])]);\n            }\n        }\n\n        // calculate smoothed data if enough points and no nulls\n        if (this._type === 'line' && this.renderer.smooth && this.gridData.length > 2) {\n            var ret;\n            if (this.renderer.constrainSmoothing) {\n                ret = computeConstrainedSmoothedData.call(this, this.gridData);\n                this.renderer._smoothedData = ret[0];\n                this.renderer._smoothedPlotData = ret[1];\n\n                if (bands.show) {\n                    ret = computeConstrainedSmoothedData.call(this, this.renderer._hiBandGridData);\n                    this.renderer._hiBandSmoothedData = ret[0];\n                    ret = computeConstrainedSmoothedData.call(this, this.renderer._lowBandGridData);\n                    this.renderer._lowBandSmoothedData = ret[0];\n                }\n\n                ret = null;\n            }\n            else {\n                ret = computeHermiteSmoothedData.call(this, this.gridData);\n                this.renderer._smoothedData = ret[0];\n                this.renderer._smoothedPlotData = ret[1];\n\n                if (bands.show) {\n                    ret = computeHermiteSmoothedData.call(this, this.renderer._hiBandGridData);\n                    this.renderer._hiBandSmoothedData = ret[0];\n                    ret = computeHermiteSmoothedData.call(this, this.renderer._lowBandGridData);\n                    this.renderer._lowBandSmoothedData = ret[0];\n                }\n\n                ret = null;\n            }\n        }\n    };\n    \n    // makeGridData\n    // converts any arbitrary data values to grid coordinates and\n    // returns them.  This method exists so that plugins can use a series'\n    // linerenderer to generate grid data points without overwriting the\n    // grid data associated with that series.\n    // Called with scope of a series.\n    $.jqplot.LineRenderer.prototype.makeGridData = function(data, plot) {\n        // recalculate the grid data\n        var xp = this._xaxis.series_u2p;\n        var yp = this._yaxis.series_u2p;\n        var gd = [];\n        var pgd = [];\n        this.renderer._smoothedData = [];\n        this.renderer._smoothedPlotData = [];\n        this.renderer._hiBandGridData = [];\n        this.renderer._lowBandGridData = [];\n        this.renderer._hiBandSmoothedData = [];\n        this.renderer._lowBandSmoothedData = [];\n        var bands = this.renderer.bands;\n        var hasNull = false;\n        for (var i=0; i<data.length; i++) {\n            // if not a line series or if no nulls in data, push the converted point onto the array.\n            if (data[i][0] != null && data[i][1] != null) {\n                if (this.step && i>0) {\n                    gd.push([xp.call(this._xaxis, data[i][0]), yp.call(this._yaxis, data[i-1][1])]);\n                }\n                gd.push([xp.call(this._xaxis, data[i][0]), yp.call(this._yaxis, data[i][1])]);\n            }\n            // else if there is a null, preserve it.\n            else if (data[i][0] == null) {\n                hasNull = true;\n                gd.push([null, yp.call(this._yaxis, data[i][1])]);\n            }\n            else if (data[i][1] == null) {\n                hasNull = true;\n                gd.push([xp.call(this._xaxis, data[i][0]), null]);\n            }\n        }\n\n        // don't do smoothing or bands on broken lines.\n        if (hasNull) {\n            this.renderer.smooth = false;\n            if (this._type === 'line') {\n                bands.show = false;\n            }\n        }\n\n        if (this._type === 'line' && bands.show) {\n            for (var i=0, l=bands.hiData.length; i<l; i++) {\n                this.renderer._hiBandGridData.push([xp.call(this._xaxis, bands.hiData[i][0]), yp.call(this._yaxis, bands.hiData[i][1])]);\n            }\n            for (var i=0, l=bands.lowData.length; i<l; i++) {\n                this.renderer._lowBandGridData.push([xp.call(this._xaxis, bands.lowData[i][0]), yp.call(this._yaxis, bands.lowData[i][1])]);\n            }\n        }\n\n        if (this._type === 'line' && this.renderer.smooth && gd.length > 2) {\n            var ret;\n            if (this.renderer.constrainSmoothing) {\n                ret = computeConstrainedSmoothedData.call(this, gd);\n                this.renderer._smoothedData = ret[0];\n                this.renderer._smoothedPlotData = ret[1];\n\n                if (bands.show) {\n                    ret = computeConstrainedSmoothedData.call(this, this.renderer._hiBandGridData);\n                    this.renderer._hiBandSmoothedData = ret[0];\n                    ret = computeConstrainedSmoothedData.call(this, this.renderer._lowBandGridData);\n                    this.renderer._lowBandSmoothedData = ret[0];\n                }\n\n                ret = null;\n            }\n            else {\n                ret = computeHermiteSmoothedData.call(this, gd);\n                this.renderer._smoothedData = ret[0];\n                this.renderer._smoothedPlotData = ret[1];\n\n                if (bands.show) {\n                    ret = computeHermiteSmoothedData.call(this, this.renderer._hiBandGridData);\n                    this.renderer._hiBandSmoothedData = ret[0];\n                    ret = computeHermiteSmoothedData.call(this, this.renderer._lowBandGridData);\n                    this.renderer._lowBandSmoothedData = ret[0];\n                }\n\n                ret = null;\n            }\n        }\n        return gd;\n    };\n    \n\n    // called within scope of series.\n    $.jqplot.LineRenderer.prototype.draw = function(ctx, gd, options, plot) {\n        var i;\n        // get a copy of the options, so we don't modify the original object.\n        var opts = $.extend(true, {}, options);\n        var shadow = (opts.shadow != undefined) ? opts.shadow : this.shadow;\n        var showLine = (opts.showLine != undefined) ? opts.showLine : this.showLine;\n        var fill = (opts.fill != undefined) ? opts.fill : this.fill;\n        var fillAndStroke = (opts.fillAndStroke != undefined) ? opts.fillAndStroke : this.fillAndStroke;\n        var xmin, ymin, xmax, ymax;\n        ctx.save();\n        if (gd.length) {\n            if (showLine) {\n                // if we fill, we'll have to add points to close the curve.\n                if (fill) {\n                    if (this.fillToZero) { \n                        // have to break line up into shapes at axis crossings\n                        var negativeColor = this.negativeColor;\n                        if (! this.useNegativeColors) {\n                            negativeColor = opts.fillStyle;\n                        }\n                        var isnegative = false;\n                        var posfs = opts.fillStyle;\n                    \n                        // if stoking line as well as filling, get a copy of line data.\n                        if (fillAndStroke) {\n                            var fasgd = gd.slice(0);\n                        }\n                        // if not stacked, fill down to axis\n                        if (this.index == 0 || !this._stack) {\n                        \n                            var tempgd = [];\n                            var pd = (this.renderer.smooth) ? this.renderer._smoothedPlotData : this._plotData;\n                            this._areaPoints = [];\n                            var pyzero = this._yaxis.series_u2p(this.fillToValue);\n                            var pxzero = this._xaxis.series_u2p(this.fillToValue);\n\n                            opts.closePath = true;\n                            \n                            if (this.fillAxis == 'y') {\n                                tempgd.push([gd[0][0], pyzero]);\n                                this._areaPoints.push([gd[0][0], pyzero]);\n                                \n                                for (var i=0; i<gd.length-1; i++) {\n                                    tempgd.push(gd[i]);\n                                    this._areaPoints.push(gd[i]);\n                                    // do we have an axis crossing?\n                                    if (pd[i][1] * pd[i+1][1] <= 0) {\n                                        if (pd[i][1] < 0) {\n                                            isnegative = true;\n                                            opts.fillStyle = negativeColor;\n                                        }\n                                        else {\n                                            isnegative = false;\n                                            opts.fillStyle = posfs;\n                                        }\n                                        \n                                        var xintercept = gd[i][0] + (gd[i+1][0] - gd[i][0]) * (pyzero-gd[i][1])/(gd[i+1][1] - gd[i][1]);\n                                        tempgd.push([xintercept, pyzero]);\n                                        this._areaPoints.push([xintercept, pyzero]);\n                                        // now draw this shape and shadow.\n                                        if (shadow) {\n                                            this.renderer.shadowRenderer.draw(ctx, tempgd, opts);\n                                        }\n                                        this.renderer.shapeRenderer.draw(ctx, tempgd, opts);\n                                        // now empty temp array and continue\n                                        tempgd = [[xintercept, pyzero]];\n                                        // this._areaPoints = [[xintercept, pyzero]];\n                                    }   \n                                }\n                                if (pd[gd.length-1][1] < 0) {\n                                    isnegative = true;\n                                    opts.fillStyle = negativeColor;\n                                }\n                                else {\n                                    isnegative = false;\n                                    opts.fillStyle = posfs;\n                                }\n                                tempgd.push(gd[gd.length-1]);\n                                this._areaPoints.push(gd[gd.length-1]);\n                                tempgd.push([gd[gd.length-1][0], pyzero]); \n                                this._areaPoints.push([gd[gd.length-1][0], pyzero]); \n                            }\n                            // now draw the last area.\n                            if (shadow) {\n                                this.renderer.shadowRenderer.draw(ctx, tempgd, opts);\n                            }\n                            this.renderer.shapeRenderer.draw(ctx, tempgd, opts);\n                            \n                            \n                            // var gridymin = this._yaxis.series_u2p(0);\n                            // // IE doesn't return new length on unshift\n                            // gd.unshift([gd[0][0], gridymin]);\n                            // len = gd.length;\n                            // gd.push([gd[len - 1][0], gridymin]);                   \n                        }\n                        // if stacked, fill to line below \n                        else {\n                            var prev = this._prevGridData;\n                            for (var i=prev.length; i>0; i--) {\n                                gd.push(prev[i-1]);\n                                // this._areaPoints.push(prev[i-1]);\n                            }\n                            if (shadow) {\n                                this.renderer.shadowRenderer.draw(ctx, gd, opts);\n                            }\n                            this._areaPoints = gd;\n                            this.renderer.shapeRenderer.draw(ctx, gd, opts);\n                        }\n                    }\n                    /////////////////////////\n                    // Not filled to zero\n                    ////////////////////////\n                    else {                    \n                        // if stoking line as well as filling, get a copy of line data.\n                        if (fillAndStroke) {\n                            var fasgd = gd.slice(0);\n                        }\n                        // if not stacked, fill down to axis\n                        if (this.index == 0 || !this._stack) {\n                            // var gridymin = this._yaxis.series_u2p(this._yaxis.min) - this.gridBorderWidth / 2;\n                            var gridymin = ctx.canvas.height;\n                            // IE doesn't return new length on unshift\n                            gd.unshift([gd[0][0], gridymin]);\n                            var len = gd.length;\n                            gd.push([gd[len - 1][0], gridymin]);                   \n                        }\n                        // if stacked, fill to line below \n                        else {\n                            var prev = this._prevGridData;\n                            for (var i=prev.length; i>0; i--) {\n                                gd.push(prev[i-1]);\n                            }\n                        }\n                        this._areaPoints = gd;\n                        \n                        if (shadow) {\n                            this.renderer.shadowRenderer.draw(ctx, gd, opts);\n                        }\n            \n                        this.renderer.shapeRenderer.draw(ctx, gd, opts);                        \n                    }\n                    if (fillAndStroke) {\n                        var fasopts = $.extend(true, {}, opts, {fill:false, closePath:false});\n                        this.renderer.shapeRenderer.draw(ctx, fasgd, fasopts);\n                        //////////\n                        // TODO: figure out some way to do shadows nicely\n                        // if (shadow) {\n                        //     this.renderer.shadowRenderer.draw(ctx, fasgd, fasopts);\n                        // }\n                        // now draw the markers\n                        if (this.markerRenderer.show) {\n                            if (this.renderer.smooth) {\n                                fasgd = this.gridData;\n                            }\n                            for (i=0; i<fasgd.length; i++) {\n                                var markerOptions = opts.markerOptions || {};\n                                if (this.markerOptionsCallback) {\n                                    markerOptions = $.extend(true, markerOptions, this.markerOptionsCallback(plot, this, i, this.data[i], gd[i]) || {});\n                                }\n                                this.markerRenderer.draw(fasgd[i][0], fasgd[i][1], ctx, markerOptions);\n                            }\n                        }\n                    }\n                }\n                else {\n\n                    if (this.renderer.bands.show) {\n                        var bdat;\n                        var bopts = $.extend(true, {}, opts);\n                        if (this.renderer.bands.showLines) {\n                            bdat = (this.renderer.smooth) ? this.renderer._hiBandSmoothedData : this.renderer._hiBandGridData;\n                            this.renderer.shapeRenderer.draw(ctx, bdat, opts);\n                            bdat = (this.renderer.smooth) ? this.renderer._lowBandSmoothedData : this.renderer._lowBandGridData;\n                            this.renderer.shapeRenderer.draw(ctx, bdat, bopts);\n                        }\n\n                        if (this.renderer.bands.fill) {\n                            if (this.renderer.smooth) {\n                                bdat = this.renderer._hiBandSmoothedData.concat(this.renderer._lowBandSmoothedData.reverse());\n                            }\n                            else {\n                                bdat = this.renderer._hiBandGridData.concat(this.renderer._lowBandGridData.reverse());\n                            }\n                            this._areaPoints = bdat;\n                            bopts.closePath = true;\n                            bopts.fill = true;\n                            bopts.fillStyle = this.renderer.bands.fillColor;\n                            this.renderer.shapeRenderer.draw(ctx, bdat, bopts);\n                        }\n                    }\n\n                    if (shadow) {\n                        this.renderer.shadowRenderer.draw(ctx, gd, opts);\n                    }\n    \n                    this.renderer.shapeRenderer.draw(ctx, gd, opts);\n                }\n            }\n            // calculate the bounding box\n            var xmin = xmax = ymin = ymax = null;\n            for (i=0; i<this._areaPoints.length; i++) {\n                var p = this._areaPoints[i];\n                if (xmin > p[0] || xmin == null) {\n                    xmin = p[0];\n                }\n                if (ymax < p[1] || ymax == null) {\n                    ymax = p[1];\n                }\n                if (xmax < p[0] || xmax == null) {\n                    xmax = p[0];\n                }\n                if (ymin > p[1] || ymin == null) {\n                    ymin = p[1];\n                }\n            }\n\n            if (this.type === 'line' && this.renderer.bands.show) {\n                ymax = this._yaxis.series_u2p(this.renderer.bands._min);\n                ymin = this._yaxis.series_u2p(this.renderer.bands._max);\n            }\n\n            this._boundingBox = [[xmin, ymax], [xmax, ymin]];\n        \n            // now draw the markers\n            if (this.markerRenderer.show && !fill) {\n                if (this.renderer.smooth) {\n                    gd = this.gridData;\n                }\n                for (i=0; i<gd.length; i++) {\n                    var markerOptions = opts.markerOptions || {};\n                    if (this.markerOptionsCallback) {\n                        markerOptions = $.extend(true, markerOptions, this.markerOptionsCallback(plot, this, i, this.data[i], gd[i]) || {});\n                    }\n                    if (gd[i][0] != null && gd[i][1] != null) {\n                        this.markerRenderer.draw(gd[i][0], gd[i][1], ctx, markerOptions);\n                    }\n                }\n            }\n        }\n        \n        ctx.restore();\n    };  \n    \n    $.jqplot.LineRenderer.prototype.drawShadow = function(ctx, gd, options) {\n        // This is a no-op, shadows drawn with lines.\n    };\n    \n    // called with scope of plot.\n    // make sure to not leave anything highlighted.\n    function postInit(target, data, options) {\n        for (var i=0; i<this.series.length; i++) {\n            if (this.series[i].renderer.constructor == $.jqplot.LineRenderer) {\n                // don't allow mouseover and mousedown at same time.\n                if (this.series[i].highlightMouseOver) {\n                    this.series[i].highlightMouseDown = false;\n                }\n            }\n        }\n    }  \n    \n    // called within context of plot\n    // create a canvas which we can draw on.\n    // insert it before the eventCanvas, so eventCanvas will still capture events.\n    function postPlotDraw() {\n        // Memory Leaks patch    \n        if (this.plugins.lineRenderer && this.plugins.lineRenderer.highlightCanvas) {\n          this.plugins.lineRenderer.highlightCanvas.resetCanvas();\n          this.plugins.lineRenderer.highlightCanvas = null;\n        }\n        \n        this.plugins.lineRenderer.highlightedSeriesIndex = null;\n        this.plugins.lineRenderer.highlightCanvas = new $.jqplot.GenericCanvas();\n        \n        this.eventCanvas._elem.before(this.plugins.lineRenderer.highlightCanvas.createElement(this._gridPadding, 'jqplot-lineRenderer-highlight-canvas', this._plotDimensions, this));\n        this.plugins.lineRenderer.highlightCanvas.setContext();\n        this.eventCanvas._elem.bind('mouseleave', {plot:this}, function (ev) { unhighlight(ev.data.plot); });\n    } \n    \n    function highlight (plot, sidx, pidx, points) {\n        var s = plot.series[sidx];\n        var canvas = plot.plugins.lineRenderer.highlightCanvas;\n        canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width, canvas._ctx.canvas.height);\n        s._highlightedPoint = pidx;\n        plot.plugins.lineRenderer.highlightedSeriesIndex = sidx;\n        var opts = {fillStyle: s.highlightColor};\n        if (s.type === 'line' && s.renderer.bands.show) {\n            opts.fill = true;\n            opts.closePath = true;\n        }\n        s.renderer.shapeRenderer.draw(canvas._ctx, points, opts);\n        canvas = null;\n    }\n    \n    function unhighlight (plot) {\n        var canvas = plot.plugins.lineRenderer.highlightCanvas;\n        canvas._ctx.clearRect(0,0, canvas._ctx.canvas.width, canvas._ctx.canvas.height);\n        for (var i=0; i<plot.series.length; i++) {\n            plot.series[i]._highlightedPoint = null;\n        }\n        plot.plugins.lineRenderer.highlightedSeriesIndex = null;\n        plot.target.trigger('jqplotDataUnhighlight');\n        canvas = null;\n    }\n    \n    \n    function handleMove(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var evt1 = jQuery.Event('jqplotDataMouseOver');\n            evt1.pageX = ev.pageX;\n            evt1.pageY = ev.pageY;\n            plot.target.trigger(evt1, ins);\n            if (plot.series[ins[0]].highlightMouseOver && !(ins[0] == plot.plugins.lineRenderer.highlightedSeriesIndex)) {\n                var evt = jQuery.Event('jqplotDataHighlight');\n                evt.which = ev.which;\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                plot.target.trigger(evt, ins);\n                highlight (plot, neighbor.seriesIndex, neighbor.pointIndex, neighbor.points);\n            }\n        }\n        else if (neighbor == null) {\n            unhighlight (plot);\n        }\n    }\n    \n    function handleMouseDown(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            if (plot.series[ins[0]].highlightMouseDown && !(ins[0] == plot.plugins.lineRenderer.highlightedSeriesIndex)) {\n                var evt = jQuery.Event('jqplotDataHighlight');\n                evt.which = ev.which;\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                plot.target.trigger(evt, ins);\n                highlight (plot, neighbor.seriesIndex, neighbor.pointIndex, neighbor.points);\n            }\n        }\n        else if (neighbor == null) {\n            unhighlight (plot);\n        }\n    }\n    \n    function handleMouseUp(ev, gridpos, datapos, neighbor, plot) {\n        var idx = plot.plugins.lineRenderer.highlightedSeriesIndex;\n        if (idx != null && plot.series[idx].highlightMouseDown) {\n            unhighlight(plot);\n        }\n    }\n    \n    function handleClick(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var evt = jQuery.Event('jqplotDataClick');\n            evt.which = ev.which;\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            plot.target.trigger(evt, ins);\n        }\n    }\n    \n    function handleRightClick(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var idx = plot.plugins.lineRenderer.highlightedSeriesIndex;\n            if (idx != null && plot.series[idx].highlightMouseDown) {\n                unhighlight(plot);\n            }\n            var evt = jQuery.Event('jqplotDataRightClick');\n            evt.which = ev.which;\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            plot.target.trigger(evt, ins);\n        }\n    }\n    \n    \n\n    // class: $.jqplot.LinearAxisRenderer\n    // The default jqPlot axis renderer, creating a numeric axis.\n    $.jqplot.LinearAxisRenderer = function() {\n    };\n    \n    // called with scope of axis object.\n    $.jqplot.LinearAxisRenderer.prototype.init = function(options){\n        // prop: breakPoints\n        // EXPERIMENTAL!! Use at your own risk!\n        // Works only with linear axes and the default tick renderer.\n        // Array of [start, stop] points to create a broken axis.\n        // Broken axes have a \"jump\" in them, which is an immediate \n        // transition from a smaller value to a larger value.\n        // Currently, axis ticks MUST be manually assigned if using breakPoints\n        // by using the axis ticks array option.\n        this.breakPoints = null;\n        // prop: breakTickLabel\n        // Label to use at the axis break if breakPoints are specified.\n        this.breakTickLabel = \"&asymp;\";\n        // prop: drawBaseline\n        // True to draw the axis baseline.\n        this.drawBaseline = true;\n        // prop: baselineWidth\n        // width of the baseline in pixels.\n        this.baselineWidth = null;\n        // prop: baselineColor\n        // CSS color spec for the baseline.\n        this.baselineColor = null;\n        // prop: forceTickAt0\n        // This will ensure that there is always a tick mark at 0.\n        // If data range is strictly positive or negative,\n        // this will force 0 to be inside the axis bounds unless\n        // the appropriate axis pad (pad, padMin or padMax) is set\n        // to 0, then this will force an axis min or max value at 0.\n        // This has know effect when any of the following options\n        // are set:  autoscale, min, max, numberTicks or tickInterval.\n        this.forceTickAt0 = false;\n        // prop: forceTickAt100\n        // This will ensure that there is always a tick mark at 100.\n        // If data range is strictly above or below 100,\n        // this will force 100 to be inside the axis bounds unless\n        // the appropriate axis pad (pad, padMin or padMax) is set\n        // to 0, then this will force an axis min or max value at 100.\n        // This has know effect when any of the following options\n        // are set:  autoscale, min, max, numberTicks or tickInterval.\n        this.forceTickAt100 = false;\n        // prop: tickInset\n        // Controls the amount to inset the first and last ticks from \n        // the edges of the grid, in multiples of the tick interval.\n        // 0 is no inset, 0.5 is one half a tick interval, 1 is a full\n        // tick interval, etc.\n        this.tickInset = 0;\n        // prop: minorTicks\n        // Number of ticks to add between \"major\" ticks.\n        // Major ticks are ticks supplied by user or auto computed.\n        // Minor ticks cannot be created by user.\n        this.minorTicks = 0;\n        // prop: alignTicks\n        // true to align tick marks across opposed axes\n        // such as from the y2axis to yaxis.\n        this.alignTicks = false;\n        this._autoFormatString = '';\n        this._overrideFormatString = false;\n        this._scalefact = 1.0;\n        $.extend(true, this, options);\n        if (this.breakPoints) {\n            if (!$.isArray(this.breakPoints)) {\n                this.breakPoints = null;\n            }\n            else if (this.breakPoints.length < 2 || this.breakPoints[1] <= this.breakPoints[0]) {\n                this.breakPoints = null;\n            }\n        }\n        if (this.numberTicks != null && this.numberTicks < 2) {\n            this.numberTicks = 2;\n        }\n        this.resetDataBounds();\n    };\n    \n    // called with scope of axis\n    $.jqplot.LinearAxisRenderer.prototype.draw = function(ctx, plot) {\n        if (this.show) {\n            // populate the axis label and value properties.\n            // createTicks is a method on the renderer, but\n            // call it within the scope of the axis.\n            this.renderer.createTicks.call(this, plot);\n            // fill a div with axes labels in the right direction.\n            // Need to pregenerate each axis to get its bounds and\n            // position it and the labels correctly on the plot.\n            var dim=0;\n            var temp;\n            // Added for theming.\n            if (this._elem) {\n                // Memory Leaks patch\n                //this._elem.empty();\n                this._elem.emptyForce();\n                this._elem = null;\n            }\n            \n            this._elem = $(document.createElement('div'));\n            this._elem.addClass('jqplot-axis jqplot-'+this.name);\n            this._elem.css('position', 'absolute');\n\n            \n            if (this.name == 'xaxis' || this.name == 'x2axis') {\n                this._elem.width(this._plotDimensions.width);\n            }\n            else {\n                this._elem.height(this._plotDimensions.height);\n            }\n            \n            // create a _label object.\n            this.labelOptions.axis = this.name;\n            this._label = new this.labelRenderer(this.labelOptions);\n            if (this._label.show) {\n                var elem = this._label.draw(ctx, plot);\n                elem.appendTo(this._elem);\n                elem = null;\n            }\n    \n            var t = this._ticks;\n            var tick;\n            for (var i=0; i<t.length; i++) {\n                tick = t[i];\n                if (tick.show && tick.showLabel && (!tick.isMinorTick || this.showMinorTicks)) {\n                    this._elem.append(tick.draw(ctx, plot));\n                }\n            }\n            tick = null;\n            t = null;\n        }\n        return this._elem;\n    };\n    \n    // called with scope of an axis\n    $.jqplot.LinearAxisRenderer.prototype.reset = function() {\n        this.min = this._options.min;\n        this.max = this._options.max;\n        this.tickInterval = this._options.tickInterval;\n        this.numberTicks = this._options.numberTicks;\n        this._autoFormatString = '';\n        if (this._overrideFormatString && this.tickOptions && this.tickOptions.formatString) {\n            this.tickOptions.formatString = '';\n        }\n\n        // this._ticks = this.__ticks;\n    };\n    \n    // called with scope of axis\n    $.jqplot.LinearAxisRenderer.prototype.set = function() { \n        var dim = 0;\n        var temp;\n        var w = 0;\n        var h = 0;\n        var lshow = (this._label == null) ? false : this._label.show;\n        if (this.show) {\n            var t = this._ticks;\n            var tick;\n            for (var i=0; i<t.length; i++) {\n                tick = t[i];\n                if (!tick._breakTick && tick.show && tick.showLabel && (!tick.isMinorTick || this.showMinorTicks)) {\n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        temp = tick._elem.outerHeight(true);\n                    }\n                    else {\n                        temp = tick._elem.outerWidth(true);\n                    }\n                    if (temp > dim) {\n                        dim = temp;\n                    }\n                }\n            }\n            tick = null;\n            t = null;\n            \n            if (lshow) {\n                w = this._label._elem.outerWidth(true);\n                h = this._label._elem.outerHeight(true); \n            }\n            if (this.name == 'xaxis') {\n                dim = dim + h;\n                this._elem.css({'height':dim+'px', left:'0px', bottom:'0px'});\n            }\n            else if (this.name == 'x2axis') {\n                dim = dim + h;\n                this._elem.css({'height':dim+'px', left:'0px', top:'0px'});\n            }\n            else if (this.name == 'yaxis') {\n                dim = dim + w;\n                this._elem.css({'width':dim+'px', left:'0px', top:'0px'});\n                if (lshow && this._label.constructor == $.jqplot.AxisLabelRenderer) {\n                    this._label._elem.css('width', w+'px');\n                }\n            }\n            else {\n                dim = dim + w;\n                this._elem.css({'width':dim+'px', right:'0px', top:'0px'});\n                if (lshow && this._label.constructor == $.jqplot.AxisLabelRenderer) {\n                    this._label._elem.css('width', w+'px');\n                }\n            }\n        }  \n    };    \n    \n    // called with scope of axis\n    $.jqplot.LinearAxisRenderer.prototype.createTicks = function(plot) {\n        // we're are operating on an axis here\n        var ticks = this._ticks;\n        var userTicks = this.ticks;\n        var name = this.name;\n        // databounds were set on axis initialization.\n        var db = this._dataBounds;\n        var dim = (this.name.charAt(0) === 'x') ? this._plotDimensions.width : this._plotDimensions.height;\n        var interval;\n        var min, max;\n        var pos1, pos2;\n        var tt, i;\n        // get a copy of user's settings for min/max.\n        var userMin = this.min;\n        var userMax = this.max;\n        var userNT = this.numberTicks;\n        var userTI = this.tickInterval;\n\n        var threshold = 30;\n        this._scalefact =  (Math.max(dim, threshold+1) - threshold)/300.0;\n        \n        // if we already have ticks, use them.\n        // ticks must be in order of increasing value.\n        \n        if (userTicks.length) {\n            // ticks could be 1D or 2D array of [val, val, ,,,] or [[val, label], [val, label], ...] or mixed\n            for (i=0; i<userTicks.length; i++){\n                var ut = userTicks[i];\n                var t = new this.tickRenderer(this.tickOptions);\n                if ($.isArray(ut)) {\n                    t.value = ut[0];\n                    if (this.breakPoints) {\n                        if (ut[0] == this.breakPoints[0]) {\n                            t.label = this.breakTickLabel;\n                            t._breakTick = true;\n                            t.showGridline = false;\n                            t.showMark = false;\n                        }\n                        else if (ut[0] > this.breakPoints[0] && ut[0] <= this.breakPoints[1]) {\n                            t.show = false;\n                            t.showGridline = false;\n                            t.label = ut[1];\n                        }\n                        else {\n                            t.label = ut[1];\n                        }\n                    }\n                    else {\n                        t.label = ut[1];\n                    }\n                    t.setTick(ut[0], this.name);\n                    this._ticks.push(t);\n                }\n\n                else if ($.isPlainObject(ut)) {\n                    $.extend(true, t, ut);\n                    t.axis = this.name;\n                    this._ticks.push(t);\n                }\n                \n                else {\n                    t.value = ut;\n                    if (this.breakPoints) {\n                        if (ut == this.breakPoints[0]) {\n                            t.label = this.breakTickLabel;\n                            t._breakTick = true;\n                            t.showGridline = false;\n                            t.showMark = false;\n                        }\n                        else if (ut > this.breakPoints[0] && ut <= this.breakPoints[1]) {\n                            t.show = false;\n                            t.showGridline = false;\n                        }\n                    }\n                    t.setTick(ut, this.name);\n                    this._ticks.push(t);\n                }\n            }\n            this.numberTicks = userTicks.length;\n            this.min = this._ticks[0].value;\n            this.max = this._ticks[this.numberTicks-1].value;\n            this.tickInterval = (this.max - this.min) / (this.numberTicks - 1);\n        }\n        \n        // we don't have any ticks yet, let's make some!\n        else {\n            if (name == 'xaxis' || name == 'x2axis') {\n                dim = this._plotDimensions.width;\n            }\n            else {\n                dim = this._plotDimensions.height;\n            }\n\n            var _numberTicks = this.numberTicks;\n\n            // if aligning this axis, use number of ticks from previous axis.\n            // Do I need to reset somehow if alignTicks is changed and then graph is replotted??\n            if (this.alignTicks) {\n                if (this.name === 'x2axis' && plot.axes.xaxis.show) {\n                    _numberTicks = plot.axes.xaxis.numberTicks;\n                }\n                else if (this.name.charAt(0) === 'y' && this.name !== 'yaxis' && this.name !== 'yMidAxis' && plot.axes.yaxis.show) {\n                    _numberTicks = plot.axes.yaxis.numberTicks;\n                }\n            }\n        \n            min = ((this.min != null) ? this.min : db.min);\n            max = ((this.max != null) ? this.max : db.max);\n\n            var range = max - min;\n            var rmin, rmax;\n            var temp;\n\n            if (this.tickOptions == null || !this.tickOptions.formatString) {\n                this._overrideFormatString = true;\n            }\n\n            // Doing complete autoscaling\n            if (this.min == null || this.max == null && this.tickInterval == null && !this.autoscale) {\n                // Check if user must have tick at 0 or 100 and ensure they are in range.\n                // The autoscaling algorithm will always place ticks at 0 and 100 if they are in range.\n                if (this.forceTickAt0) {\n                    if (min > 0) {\n                        min = 0;\n                    }\n                    if (max < 0) {\n                        max = 0;\n                    }\n                }\n\n                if (this.forceTickAt100) {\n                    if (min > 100) {\n                        min = 100;\n                    }\n                    if (max < 100) {\n                        max = 100;\n                    }\n                }\n\n                var keepMin = false,\n                    keepMax = false;\n\n                if (this.min != null) {\n                    keepMin = true;\n                }\n\n                else if (this.max != null) {\n                    keepMax = true;\n                }\n\n                // var threshold = 30;\n                // var tdim = Math.max(dim, threshold+1);\n                // this._scalefact =  (tdim-threshold)/300.0;\n                var ret = $.jqplot.LinearTickGenerator(min, max, this._scalefact, _numberTicks, keepMin, keepMax); \n                // calculate a padded max and min, points should be less than these\n                // so that they aren't too close to the edges of the plot.\n                // User can adjust how much padding is allowed with pad, padMin and PadMax options. \n                // If min or max is set, don't pad that end of axis.\n                var tumin = (this.min != null) ? min : min + range*(this.padMin - 1);\n                var tumax = (this.max != null) ? max : max - range*(this.padMax - 1);\n\n                // if they're equal, we shouldn't have to do anything, right?\n                // if (min <=tumin || max >= tumax) {\n                if (min <tumin || max > tumax) {\n                    tumin = (this.min != null) ? min : min - range*(this.padMin - 1);\n                    tumax = (this.max != null) ? max : max + range*(this.padMax - 1);\n                    ret = $.jqplot.LinearTickGenerator(tumin, tumax, this._scalefact, _numberTicks, keepMin, keepMax);\n                }\n\n                this.min = ret[0];\n                this.max = ret[1];\n                // if numberTicks specified, it should return the same.\n                this.numberTicks = ret[2];\n                this._autoFormatString = ret[3];\n                this.tickInterval = ret[4];\n            }\n\n            // User has specified some axis scale related option, can use auto algorithm\n            else {\n                \n                // if min and max are same, space them out a bit\n                if (min == max) {\n                    var adj = 0.05;\n                    if (min > 0) {\n                        adj = Math.max(Math.log(min)/Math.LN10, 0.05);\n                    }\n                    min -= adj;\n                    max += adj;\n                }\n                \n                // autoscale.  Can't autoscale if min or max is supplied.\n                // Will use numberTicks and tickInterval if supplied.  Ticks\n                // across multiple axes may not line up depending on how\n                // bars are to be plotted.\n                if (this.autoscale && this.min == null && this.max == null) {\n                    var rrange, ti, margin;\n                    var forceMinZero = false;\n                    var forceZeroLine = false;\n                    var intervals = {min:null, max:null, average:null, stddev:null};\n                    // if any series are bars, or if any are fill to zero, and if this\n                    // is the axis to fill toward, check to see if we can start axis at zero.\n                    for (var i=0; i<this._series.length; i++) {\n                        var s = this._series[i];\n                        var faname = (s.fillAxis == 'x') ? s._xaxis.name : s._yaxis.name;\n                        // check to see if this is the fill axis\n                        if (this.name == faname) {\n                            var vals = s._plotValues[s.fillAxis];\n                            var vmin = vals[0];\n                            var vmax = vals[0];\n                            for (var j=1; j<vals.length; j++) {\n                                if (vals[j] < vmin) {\n                                    vmin = vals[j];\n                                }\n                                else if (vals[j] > vmax) {\n                                    vmax = vals[j];\n                                }\n                            }\n                            var dp = (vmax - vmin) / vmax;\n                            // is this sries a bar?\n                            if (s.renderer.constructor == $.jqplot.BarRenderer) {\n                                // if no negative values and could also check range.\n                                if (vmin >= 0 && (s.fillToZero || dp > 0.1)) {\n                                    forceMinZero = true;\n                                }\n                                else {\n                                    forceMinZero = false;\n                                    if (s.fill && s.fillToZero && vmin < 0 && vmax > 0) {\n                                        forceZeroLine = true;\n                                    }\n                                    else {\n                                        forceZeroLine = false;\n                                    }\n                                }\n                            }\n                            \n                            // if not a bar and filling, use appropriate method.\n                            else if (s.fill) {\n                                if (vmin >= 0 && (s.fillToZero || dp > 0.1)) {\n                                    forceMinZero = true;\n                                }\n                                else if (vmin < 0 && vmax > 0 && s.fillToZero) {\n                                    forceMinZero = false;\n                                    forceZeroLine = true;\n                                }\n                                else {\n                                    forceMinZero = false;\n                                    forceZeroLine = false;\n                                }\n                            }\n                            \n                            // if not a bar and not filling, only change existing state\n                            // if it doesn't make sense\n                            else if (vmin < 0) {\n                                forceMinZero = false;\n                            }\n                        }\n                    }\n                    \n                    // check if we need make axis min at 0.\n                    if (forceMinZero) {\n                        // compute number of ticks\n                        this.numberTicks = 2 + Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);\n                        this.min = 0;\n                        userMin = 0;\n                        // what order is this range?\n                        // what tick interval does that give us?\n                        ti = max/(this.numberTicks-1);\n                        temp = Math.pow(10, Math.abs(Math.floor(Math.log(ti)/Math.LN10)));\n                        if (ti/temp == parseInt(ti/temp, 10)) {\n                            ti += temp;\n                        }\n                        this.tickInterval = Math.ceil(ti/temp) * temp;\n                        this.max = this.tickInterval * (this.numberTicks - 1);\n                    }\n                    \n                    // check if we need to make sure there is a tick at 0.\n                    else if (forceZeroLine) {\n                        // compute number of ticks\n                        this.numberTicks = 2 + Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);\n                        var ntmin = Math.ceil(Math.abs(min)/range*(this.numberTicks-1));\n                        var ntmax = this.numberTicks - 1  - ntmin;\n                        ti = Math.max(Math.abs(min/ntmin), Math.abs(max/ntmax));\n                        temp = Math.pow(10, Math.abs(Math.floor(Math.log(ti)/Math.LN10)));\n                        this.tickInterval = Math.ceil(ti/temp) * temp;\n                        this.max = this.tickInterval * ntmax;\n                        this.min = -this.tickInterval * ntmin;\n                    }\n                    \n                    // if nothing else, do autoscaling which will try to line up ticks across axes.\n                    else {  \n                        if (this.numberTicks == null){\n                            if (this.tickInterval) {\n                                this.numberTicks = 3 + Math.ceil(range / this.tickInterval);\n                            }\n                            else {\n                                this.numberTicks = 2 + Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);\n                            }\n                        }\n                \n                        if (this.tickInterval == null) {\n                            // get a tick interval\n                            ti = range/(this.numberTicks - 1);\n\n                            if (ti < 1) {\n                                temp = Math.pow(10, Math.abs(Math.floor(Math.log(ti)/Math.LN10)));\n                            }\n                            else {\n                                temp = 1;\n                            }\n                            this.tickInterval = Math.ceil(ti*temp*this.pad)/temp;\n                        }\n                        else {\n                            temp = 1 / this.tickInterval;\n                        }\n                        \n                        // try to compute a nicer, more even tick interval\n                        // temp = Math.pow(10, Math.floor(Math.log(ti)/Math.LN10));\n                        // this.tickInterval = Math.ceil(ti/temp) * temp;\n                        rrange = this.tickInterval * (this.numberTicks - 1);\n                        margin = (rrange - range)/2;\n           \n                        if (this.min == null) {\n                            this.min = Math.floor(temp*(min-margin))/temp;\n                        }\n                        if (this.max == null) {\n                            this.max = this.min + rrange;\n                        }\n                    }\n\n                    // Compute a somewhat decent format string if it is needed.\n                    // get precision of interval and determine a format string.\n                    var sf = $.jqplot.getSignificantFigures(this.tickInterval);\n\n                    var fstr;\n\n                    // if we have only a whole number, use integer formatting\n                    if (sf.digitsLeft >= sf.significantDigits) {\n                        fstr = '%d';\n                    }\n\n                    else {\n                        var temp = Math.max(0, 5 - sf.digitsLeft);\n                        temp = Math.min(temp, sf.digitsRight);\n                        fstr = '%.'+ temp + 'f';\n                    }\n\n                    this._autoFormatString = fstr;\n                }\n                \n                // Use the default algorithm which pads each axis to make the chart\n                // centered nicely on the grid.\n                else {\n\n                    rmin = (this.min != null) ? this.min : min - range*(this.padMin - 1);\n                    rmax = (this.max != null) ? this.max : max + range*(this.padMax - 1);\n                    range = rmax - rmin;\n        \n                    if (this.numberTicks == null){\n                        // if tickInterval is specified by user, we will ignore computed maximum.\n                        // max will be equal or greater to fit even # of ticks.\n                        if (this.tickInterval != null) {\n                            this.numberTicks = Math.ceil((rmax - rmin)/this.tickInterval)+1;\n                        }\n                        else if (dim > 100) {\n                            this.numberTicks = parseInt(3+(dim-100)/75, 10);\n                        }\n                        else {\n                            this.numberTicks = 2;\n                        }\n                    }\n                \n                    if (this.tickInterval == null) {\n                        this.tickInterval = range / (this.numberTicks-1);\n                    }\n                    \n                    if (this.max == null) {\n                        rmax = rmin + this.tickInterval*(this.numberTicks - 1);\n                    }        \n                    if (this.min == null) {\n                        rmin = rmax - this.tickInterval*(this.numberTicks - 1);\n                    }\n\n                    // get precision of interval and determine a format string.\n                    var sf = $.jqplot.getSignificantFigures(this.tickInterval);\n\n                    var fstr;\n\n                    // if we have only a whole number, use integer formatting\n                    if (sf.digitsLeft >= sf.significantDigits) {\n                        fstr = '%d';\n                    }\n\n                    else {\n                        var temp = Math.max(0, 5 - sf.digitsLeft);\n                        temp = Math.min(temp, sf.digitsRight);\n                        fstr = '%.'+ temp + 'f';\n                    }\n\n\n                    this._autoFormatString = fstr;\n\n                    this.min = rmin;\n                    this.max = rmax;\n                }\n                \n                if (this.renderer.constructor == $.jqplot.LinearAxisRenderer && this._autoFormatString == '') {\n                    // fix for misleading tick display with small range and low precision.\n                    range = this.max - this.min;\n                    // figure out precision\n                    var temptick = new this.tickRenderer(this.tickOptions);\n                    // use the tick formatString or, the default.\n                    var fs = temptick.formatString || $.jqplot.config.defaultTickFormatString; \n                    var fs = fs.match($.jqplot.sprintf.regex)[0];\n                    var precision = 0;\n                    if (fs) {\n                        if (fs.search(/[fFeEgGpP]/) > -1) {\n                            var m = fs.match(/\\%\\.(\\d{0,})?[eEfFgGpP]/);\n                            if (m) {\n                                precision = parseInt(m[1], 10);\n                            }\n                            else {\n                                precision = 6;\n                            }\n                        }\n                        else if (fs.search(/[di]/) > -1) {\n                            precision = 0;\n                        }\n                        // fact will be <= 1;\n                        var fact = Math.pow(10, -precision);\n                        if (this.tickInterval < fact) {\n                            // need to correct underrange\n                            if (userNT == null && userTI == null) {\n                                this.tickInterval = fact;\n                                if (userMax == null && userMin == null) {\n                                    // this.min = Math.floor((this._dataBounds.min - this.tickInterval)/fact) * fact;\n                                    this.min = Math.floor(this._dataBounds.min/fact) * fact;\n                                    if (this.min == this._dataBounds.min) {\n                                        this.min = this._dataBounds.min - this.tickInterval;\n                                    }\n                                    // this.max = Math.ceil((this._dataBounds.max + this.tickInterval)/fact) * fact;\n                                    this.max = Math.ceil(this._dataBounds.max/fact) * fact;\n                                    if (this.max == this._dataBounds.max) {\n                                        this.max = this._dataBounds.max + this.tickInterval;\n                                    }\n                                    var n = (this.max - this.min)/this.tickInterval;\n                                    n = n.toFixed(11);\n                                    n = Math.ceil(n);\n                                    this.numberTicks = n + 1;\n                                }\n                                else if (userMax == null) {\n                                    // add one tick for top of range.\n                                    var n = (this._dataBounds.max - this.min) / this.tickInterval;\n                                    n = n.toFixed(11);\n                                    this.numberTicks = Math.ceil(n) + 2;\n                                    this.max = this.min + this.tickInterval * (this.numberTicks-1);\n                                }\n                                else if (userMin == null) {\n                                    // add one tick for bottom of range.\n                                    var n = (this.max - this._dataBounds.min) / this.tickInterval;\n                                    n = n.toFixed(11);\n                                    this.numberTicks = Math.ceil(n) + 2;\n                                    this.min = this.max - this.tickInterval * (this.numberTicks-1);\n                                }\n                                else {\n                                    // calculate a number of ticks so max is within axis scale\n                                    this.numberTicks = Math.ceil((userMax - userMin)/this.tickInterval) + 1;\n                                    // if user's min and max don't fit evenly in ticks, adjust.\n                                    // This takes care of cases such as user min set to 0, max set to 3.5 but tick\n                                    // format string set to %d (integer ticks)\n                                    this.min =  Math.floor(userMin*Math.pow(10, precision))/Math.pow(10, precision);\n                                    this.max =  Math.ceil(userMax*Math.pow(10, precision))/Math.pow(10, precision);\n                                    // this.max = this.min + this.tickInterval*(this.numberTicks-1);\n                                    this.numberTicks = Math.ceil((this.max - this.min)/this.tickInterval) + 1;\n                                }\n                            }\n                        }\n                    }\n                }\n                \n            }\n            \n            if (this._overrideFormatString && this._autoFormatString != '') {\n                this.tickOptions = this.tickOptions || {};\n                this.tickOptions.formatString = this._autoFormatString;\n            }\n\n            var t, to;\n            for (var i=0; i<this.numberTicks; i++){\n                tt = this.min + i * this.tickInterval;\n                t = new this.tickRenderer(this.tickOptions);\n                // var t = new $.jqplot.AxisTickRenderer(this.tickOptions);\n\n                t.setTick(tt, this.name);\n                this._ticks.push(t);\n\n                if (i < this.numberTicks - 1) {\n                    for (var j=0; j<this.minorTicks; j++) {\n                        tt += this.tickInterval/(this.minorTicks+1);\n                        to = $.extend(true, {}, this.tickOptions, {name:this.name, value:tt, label:'', isMinorTick:true});\n                        t = new this.tickRenderer(to);\n                        this._ticks.push(t);\n                    }\n                }\n                t = null;\n            }\n        }\n\n        if (this.tickInset) {\n            this.min = this.min - this.tickInset * this.tickInterval;\n            this.max = this.max + this.tickInset * this.tickInterval;\n        }\n\n        ticks = null;\n    };\n    \n    // Used to reset just the values of the ticks and then repack, which will\n    // recalculate the positioning functions.  It is assuemd that the \n    // number of ticks is the same and the values of the new array are at the\n    // proper interval.\n    // This method needs to be called with the scope of an axis object, like:\n    //\n    // > plot.axes.yaxis.renderer.resetTickValues.call(plot.axes.yaxis, yarr);\n    //\n    $.jqplot.LinearAxisRenderer.prototype.resetTickValues = function(opts) {\n        if ($.isArray(opts) && opts.length == this._ticks.length) {\n            var t;\n            for (var i=0; i<opts.length; i++) {\n                t = this._ticks[i];\n                t.value = opts[i];\n                t.label = t.formatter(t.formatString, opts[i]);\n                t.label = t.prefix + t.label;\n                t._elem.html(t.label);\n            }\n            t = null;\n            this.min = $.jqplot.arrayMin(opts);\n            this.max = $.jqplot.arrayMax(opts);\n            this.pack();\n        }\n        // Not implemented yet.\n        // else if ($.isPlainObject(opts)) {\n        // \n        // }\n    };\n    \n    // called with scope of axis\n    $.jqplot.LinearAxisRenderer.prototype.pack = function(pos, offsets) {\n        // Add defaults for repacking from resetTickValues function.\n        pos = pos || {};\n        offsets = offsets || this._offsets;\n        \n        var ticks = this._ticks;\n        var max = this.max;\n        var min = this.min;\n        var offmax = offsets.max;\n        var offmin = offsets.min;\n        var lshow = (this._label == null) ? false : this._label.show;\n        \n        for (var p in pos) {\n            this._elem.css(p, pos[p]);\n        }\n        \n        this._offsets = offsets;\n        // pixellength will be + for x axes and - for y axes becasue pixels always measured from top left.\n        var pixellength = offmax - offmin;\n        var unitlength = max - min;\n        \n        // point to unit and unit to point conversions references to Plot DOM element top left corner.\n        if (this.breakPoints) {\n            unitlength = unitlength - this.breakPoints[1] + this.breakPoints[0];\n            \n            this.p2u = function(p){\n                return (p - offmin) * unitlength / pixellength + min;\n            };\n        \n            this.u2p = function(u){\n                if (u > this.breakPoints[0] && u < this.breakPoints[1]){\n                    u = this.breakPoints[0];\n                }\n                if (u <= this.breakPoints[0]) {\n                    return (u - min) * pixellength / unitlength + offmin;\n                }\n                else {\n                    return (u - this.breakPoints[1] + this.breakPoints[0] - min) * pixellength / unitlength + offmin;\n                }\n            };\n                \n            if (this.name.charAt(0) == 'x'){\n                this.series_u2p = function(u){\n                    if (u > this.breakPoints[0] && u < this.breakPoints[1]){\n                        u = this.breakPoints[0];\n                    }\n                    if (u <= this.breakPoints[0]) {\n                        return (u - min) * pixellength / unitlength;\n                    }\n                    else {\n                        return (u - this.breakPoints[1] + this.breakPoints[0] - min) * pixellength / unitlength;\n                    }\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + min;\n                };\n            }\n        \n            else {\n                this.series_u2p = function(u){\n                    if (u > this.breakPoints[0] && u < this.breakPoints[1]){\n                        u = this.breakPoints[0];\n                    }\n                    if (u >= this.breakPoints[1]) {\n                        return (u - max) * pixellength / unitlength;\n                    }\n                    else {\n                        return (u + this.breakPoints[1] - this.breakPoints[0] - max) * pixellength / unitlength;\n                    }\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + max;\n                };\n            }\n        }\n        else {\n            this.p2u = function(p){\n                return (p - offmin) * unitlength / pixellength + min;\n            };\n        \n            this.u2p = function(u){\n                return (u - min) * pixellength / unitlength + offmin;\n            };\n                \n            if (this.name == 'xaxis' || this.name == 'x2axis'){\n                this.series_u2p = function(u){\n                    return (u - min) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + min;\n                };\n            }\n        \n            else {\n                this.series_u2p = function(u){\n                    return (u - max) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + max;\n                };\n            }\n        }\n        \n        if (this.show) {\n            if (this.name == 'xaxis' || this.name == 'x2axis') {\n                for (var i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {\n                        var shim;\n                        \n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            // will need to adjust auto positioning based on which axis this is.\n                            var temp = (this.name == 'xaxis') ? 1 : -1;\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                    if (temp * t.angle < 0) {\n                                        shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    }\n                                    // position at start\n                                    else {\n                                        shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'end':\n                                    shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                case 'start':\n                                    shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    break;\n                                case 'middle':\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                default:\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getWidth()/2;\n                        }\n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('left', val);\n                        t.pack();\n                    }\n                }\n                if (lshow) {\n                    var w = this._label._elem.outerWidth(true);\n                    this._label._elem.css('left', offmin + pixellength/2 - w/2 + 'px');\n                    if (this.name == 'xaxis') {\n                        this._label._elem.css('bottom', '0px');\n                    }\n                    else {\n                        this._label._elem.css('top', '0px');\n                    }\n                    this._label.pack();\n                }\n            }\n            else {\n                for (var i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {                        \n                        var shim;\n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            // will need to adjust auto positioning based on which axis this is.\n                            var temp = (this.name == 'yaxis') ? 1 : -1;\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                case 'end':\n                                    if (temp * t.angle < 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'start':\n                                    if (t.angle > 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'middle':\n                                    // if (t.angle > 0) {\n                                    //     shim = -t.getHeight()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    // }\n                                    // else {\n                                    //     shim = -t.getHeight()/2 - t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    // }\n                                    shim = -t.getHeight()/2;\n                                    break;\n                                default:\n                                    shim = -t.getHeight()/2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getHeight()/2;\n                        }\n                        \n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('top', val);\n                        t.pack();\n                    }\n                }\n                if (lshow) {\n                    var h = this._label._elem.outerHeight(true);\n                    this._label._elem.css('top', offmax - pixellength/2 - h/2 + 'px');\n                    if (this.name == 'yaxis') {\n                        this._label._elem.css('left', '0px');\n                    }\n                    else {\n                        this._label._elem.css('right', '0px');\n                    }   \n                    this._label.pack();\n                }\n            }\n        }\n\n        ticks = null;\n    };\n\n\n    /**\n    * The following code was generaously given to me a while back by Scott Prahl.\n    * He did a good job at computing axes min, max and number of ticks for the \n    * case where the user has not set any scale related parameters (tickInterval,\n    * numberTicks, min or max).  I had ignored this use case for a long time,\n    * focusing on the more difficult case where user has set some option controlling\n    * tick generation.  Anyway, about time I got this into jqPlot.\n    * Thanks Scott!!\n    */\n    \n    /**\n    * Copyright (c) 2010 Scott Prahl\n    * The next three routines are currently available for use in all personal \n    * or commercial projects under both the MIT and GPL version 2.0 licenses. \n    * This means that you can choose the license that best suits your project \n    * and use it accordingly. \n    */\n\n    // A good format string depends on the interval. If the interval is greater \n    // than 1 then there is no need to show any decimal digits. If it is < 1.0, then\n    // use the magnitude of the interval to determine the number of digits to show.\n    function bestFormatString (interval)\n    {\n        var fstr;\n        interval = Math.abs(interval);\n        if (interval >= 10) {\n            fstr = '%d';\n        }\n\n        else if (interval > 1) {\n            if (interval === parseInt(interval, 10)) {\n                fstr = '%d';\n            }\n            else {\n                fstr = '%.1f';\n            }\n        }\n\n        else {\n            var expv = -Math.floor(Math.log(interval)/Math.LN10);\n            fstr = '%.' + expv + 'f';\n        }\n        \n        return fstr; \n    }\n\n    var _factors = [0.1, 0.2, 0.3, 0.4, 0.5, 0.8, 1, 2, 3, 4, 5];\n\n    var _getLowerFactor = function(f) {\n        var i = _factors.indexOf(f);\n        if (i > 0) {\n            return _factors[i-1];\n        }\n        else {\n            return _factors[_factors.length - 1] / 100;\n        }\n    };\n\n    var _getHigherFactor = function(f) {\n        var i = _factors.indexOf(f);\n        if (i < _factors.length-1) {\n            return _factors[i+1];\n        }\n        else {\n            return _factors[0] * 100;\n        }\n    };\n\n    // Given a fixed minimum and maximum and a target number ot ticks\n    // figure out the best interval and \n    // return min, max, number ticks, format string and tick interval\n    function bestConstrainedInterval(min, max, nttarget) {\n        // run through possible number to ticks and see which interval is best\n        var low = Math.floor(nttarget/2);\n        var hi = Math.ceil(nttarget*1.5);\n        var badness = Number.MAX_VALUE;\n        var r = (max - min);\n        var temp;\n        var sd;\n        var bestNT;\n        var gsf = $.jqplot.getSignificantFigures;\n        var fsd;\n        var fs;\n        var currentNT;\n        var bestPrec;\n\n        for (var i=0, l=hi-low+1; i<l; i++) {\n            currentNT = low + i;\n            temp = r/(currentNT-1);\n            sd = gsf(temp);\n\n            temp = Math.abs(nttarget - currentNT) + sd.digitsRight;\n            if (temp < badness) {\n                badness = temp;\n                bestNT = currentNT;\n                bestPrec = sd.digitsRight;\n            }\n            else if (temp === badness) {\n                // let nicer ticks trump number ot ticks\n                if (sd.digitsRight < bestPrec) {\n                    bestNT = currentNT;\n                    bestPrec = sd.digitsRight;\n                }\n            }\n\n        }\n\n        fsd = Math.max(bestPrec, Math.max(gsf(min).digitsRight, gsf(max).digitsRight));\n        if (fsd === 0) {\n            fs = '%d';\n        }\n        else {\n            fs = '%.' + fsd + 'f';\n        }\n        temp = r / (bestNT - 1);\n        // min, max, number ticks, format string, tick interval\n        return [min, max, bestNT, fs, temp];\n    }\n\n    // This will return an interval of form 2 * 10^n, 5 * 10^n or 10 * 10^n\n    // it is based soley on the range and number of ticks.  So if user specifies\n    // number of ticks, use this.\n    function bestInterval(range, numberTicks) {\n        numberTicks = numberTicks || 7;\n        var minimum = range / (numberTicks - 1);\n        var magnitude = Math.pow(10, Math.floor(Math.log(minimum) / Math.LN10));\n        var residual = minimum / magnitude;\n        var interval;\n        // \"nicest\" ranges are 1, 2, 5 or powers of these.\n        // for magnitudes below 1, only allow these. \n        if (magnitude < 1) {\n            if (residual > 5) {\n                interval = 10 * magnitude;\n            }\n            else if (residual > 2) {\n                interval = 5 * magnitude;\n            }\n            else if (residual > 1) {\n                interval = 2 * magnitude;\n            }\n            else {\n                interval = magnitude;\n            }\n        }\n        // for large ranges (whole integers), allow intervals like 3, 4 or powers of these.\n        // this helps a lot with poor choices for number of ticks. \n        else {\n            if (residual > 5) {\n                interval = 10 * magnitude;\n            }\n            else if (residual > 4) {\n                interval = 5 * magnitude;\n            }\n            else if (residual > 3) {\n                interval = 4 * magnitude;\n            }\n            else if (residual > 2) {\n                interval = 3 * magnitude;\n            }\n            else if (residual > 1) {\n                interval = 2 * magnitude;\n            }\n            else {\n                interval = magnitude;\n            }\n        }\n\n        return interval;\n    }\n\n    // This will return an interval of form 2 * 10^n, 5 * 10^n or 10 * 10^n\n    // it is based soley on the range of data, number of ticks must be computed later.\n    function bestLinearInterval(range, scalefact) {\n        scalefact = scalefact || 1;\n        var expv = Math.floor(Math.log(range)/Math.LN10);\n        var magnitude = Math.pow(10, expv);\n        // 0 < f < 10\n        var f = range / magnitude;\n        var fact;\n        // for large plots, scalefact will decrease f and increase number of ticks.\n        // for small plots, scalefact will increase f and decrease number of ticks.\n        f = f/scalefact;\n\n        // for large plots, smaller interval, more ticks.\n        if (f<=0.38) {\n            fact = 0.1;\n        }\n        else if (f<=1.6) {\n            fact = 0.2;\n        }\n        else if (f<=4.0) {\n            fact = 0.5;\n        }\n        else if (f<=8.0) {\n            fact = 1.0;\n        }\n        // for very small plots, larger interval, less ticks in number ticks\n        else if (f<=16.0) {\n            fact = 2;\n        }\n        else {\n            fact = 5;\n        } \n\n        return fact*magnitude; \n    }\n\n    function bestLinearComponents(range, scalefact) {\n        var expv = Math.floor(Math.log(range)/Math.LN10);\n        var magnitude = Math.pow(10, expv);\n        // 0 < f < 10\n        var f = range / magnitude;\n        var interval;\n        var fact;\n        // for large plots, scalefact will decrease f and increase number of ticks.\n        // for small plots, scalefact will increase f and decrease number of ticks.\n        f = f/scalefact;\n\n        // for large plots, smaller interval, more ticks.\n        if (f<=0.38) {\n            fact = 0.1;\n        }\n        else if (f<=1.6) {\n            fact = 0.2;\n        }\n        else if (f<=4.0) {\n            fact = 0.5;\n        }\n        else if (f<=8.0) {\n            fact = 1.0;\n        }\n        // for very small plots, larger interval, less ticks in number ticks\n        else if (f<=16.0) {\n            fact = 2;\n        }\n        // else if (f<=20.0) {\n        //     fact = 3;\n        // }\n        // else if (f<=24.0) {\n        //     fact = 4;\n        // }\n        else {\n            fact = 5;\n        } \n\n        interval = fact * magnitude;\n\n        return [interval, fact, magnitude];\n    }\n\n    // Given the min and max for a dataset, return suitable endpoints\n    // for the graphing, a good number for the number of ticks, and a\n    // format string so that extraneous digits are not displayed.\n    // returned is an array containing [min, max, nTicks, format]\n    $.jqplot.LinearTickGenerator = function(axis_min, axis_max, scalefact, numberTicks, keepMin, keepMax) {\n        // Set to preserve EITHER min OR max.\n        // If min is preserved, max must be free.\n        keepMin = (keepMin === null) ? false : keepMin;\n        keepMax = (keepMax === null || keepMin) ? false : keepMax;\n        // if endpoints are equal try to include zero otherwise include one\n        if (axis_min === axis_max) {\n            axis_max = (axis_max) ? 0 : 1;\n        }\n\n        scalefact = scalefact || 1.0;\n\n        // make sure range is positive\n        if (axis_max < axis_min) {\n            var a = axis_max;\n            axis_max = axis_min;\n            axis_min = a;\n        }\n\n        var r = [];\n        var ss = bestLinearInterval(axis_max - axis_min, scalefact);\n\n        var gsf = $.jqplot.getSignificantFigures;\n        \n        if (numberTicks == null) {\n\n            // Figure out the axis min, max and number of ticks\n            // the min and max will be some multiple of the tick interval,\n            // 1*10^n, 2*10^n or 5*10^n.  This gaurantees that, if the\n            // axis min is negative, 0 will be a tick.\n            if (!keepMin && !keepMax) {\n                r[0] = Math.floor(axis_min / ss) * ss;  // min\n                r[1] = Math.ceil(axis_max / ss) * ss;   // max\n                r[2] = Math.round((r[1]-r[0])/ss+1.0);  // number of ticks\n                r[3] = bestFormatString(ss);            // format string\n                r[4] = ss;                              // tick Interval\n            }\n\n            else if (keepMin) {\n                r[0] = axis_min;                                        // min\n                r[2] = Math.ceil((axis_max - axis_min) / ss + 1.0);     // number of ticks\n                r[1] = axis_min + (r[2] - 1) * ss;                      // max\n                var digitsMin = gsf(axis_min).digitsRight;\n                var digitsSS = gsf(ss).digitsRight;\n                if (digitsMin < digitsSS) {\n                    r[3] = bestFormatString(ss);                        // format string\n                }\n                else {\n                    r[3] = '%.' + digitsMin + 'f';\n                }\n                r[4] = ss;                                              // tick Interval\n            }\n\n            else if (keepMax) {\n                r[1] = axis_max;                                        // max\n                r[2] = Math.ceil((axis_max - axis_min) / ss + 1.0);     // number of ticks\n                r[0] = axis_max - (r[2] - 1) * ss;                      // min\n                var digitsMax = gsf(axis_max).digitsRight;\n                var digitsSS = gsf(ss).digitsRight;\n                if (digitsMax < digitsSS) {\n                    r[3] = bestFormatString(ss);                        // format string\n                }\n                else {\n                    r[3] = '%.' + digitsMax + 'f';\n                }\n                r[4] = ss;                                              // tick Interval\n            }\n        }\n\n        else {\n            var tempr = [];\n\n            // Figure out the axis min, max and number of ticks\n            // the min and max will be some multiple of the tick interval,\n            // 1*10^n, 2*10^n or 5*10^n.  This gaurantees that, if the\n            // axis min is negative, 0 will be a tick.\n            tempr[0] = Math.floor(axis_min / ss) * ss;  // min\n            tempr[1] = Math.ceil(axis_max / ss) * ss;   // max\n            tempr[2] = Math.round((tempr[1]-tempr[0])/ss+1.0);    // number of ticks\n            tempr[3] = bestFormatString(ss);            // format string\n            tempr[4] = ss;                              // tick Interval\n\n            // first, see if we happen to get the right number of ticks\n            if (tempr[2] === numberTicks) {\n                r = tempr;\n            }\n\n            else {\n\n                var newti = bestInterval(tempr[1] - tempr[0], numberTicks);\n\n                r[0] = tempr[0];                        // min\n                r[2] = numberTicks;                     // number of ticks\n                r[4] = newti;                           // tick interval\n                r[3] = bestFormatString(newti);         // format string\n                r[1] = r[0] + (r[2] - 1) * r[4];        // max\n            }\n        }\n\n        return r;\n    };\n\n    $.jqplot.LinearTickGenerator.bestLinearInterval = bestLinearInterval;\n    $.jqplot.LinearTickGenerator.bestInterval = bestInterval;\n    $.jqplot.LinearTickGenerator.bestLinearComponents = bestLinearComponents;\n    $.jqplot.LinearTickGenerator.bestConstrainedInterval = bestConstrainedInterval;\n\n\n    // class: $.jqplot.MarkerRenderer\n    // The default jqPlot marker renderer, rendering the points on the line.\n    $.jqplot.MarkerRenderer = function(options){\n        // Group: Properties\n        \n        // prop: show\n        // whether or not to show the marker.\n        this.show = true;\n        // prop: style\n        // One of diamond, circle, square, x, plus, dash, filledDiamond, filledCircle, filledSquare\n        this.style = 'filledCircle';\n        // prop: lineWidth\n        // size of the line for non-filled markers.\n        this.lineWidth = 2;\n        // prop: size\n        // Size of the marker (diameter or circle, length of edge of square, etc.)\n        this.size = 9.0;\n        // prop: color\n        // color of marker.  Will be set to color of series by default on init.\n        this.color = '#666666';\n        // prop: shadow\n        // whether or not to draw a shadow on the line\n        this.shadow = true;\n        // prop: shadowAngle\n        // Shadow angle in degrees\n        this.shadowAngle = 45;\n        // prop: shadowOffset\n        // Shadow offset from line in pixels\n        this.shadowOffset = 1;\n        // prop: shadowDepth\n        // Number of times shadow is stroked, each stroke offset shadowOffset from the last.\n        this.shadowDepth = 3;\n        // prop: shadowAlpha\n        // Alpha channel transparency of shadow.  0 = transparent.\n        this.shadowAlpha = '0.07';\n        // prop: shadowRenderer\n        // Renderer that will draws the shadows on the marker.\n        this.shadowRenderer = new $.jqplot.ShadowRenderer();\n        // prop: shapeRenderer\n        // Renderer that will draw the marker.\n        this.shapeRenderer = new $.jqplot.ShapeRenderer();\n        \n        $.extend(true, this, options);\n    };\n    \n    function getShadowRendererOptions(opts) {\n        var sdopt = {angle:opts.shadowAngle, offset:opts.shadowOffset, alpha:opts.shadowAlpha, lineWidth:opts.lineWidth, depth:opts.shadowDepth, closePath:true};\n        if (opts.style.indexOf('filled') != -1) {\n            sdopt.fill = true;\n        }\n        if (opts.style.indexOf('ircle') != -1) {\n            sdopt.isarc = true;\n            sdopt.closePath = false;\n        }\n        return $.extend(true, {}, sdopt);\n    }\n    \n    function getShapeRendererOptions(opts) {\n        var shopt = {fill:false, isarc:false, strokeStyle:opts.color, fillStyle:opts.color, lineWidth:opts.lineWidth, closePath:true};\n        if (opts.style.indexOf('filled') != -1) {\n            shopt.fill = true;\n        }\n        if (opts.style.indexOf('ircle') != -1) {\n            shopt.isarc = true;\n            shopt.closePath = false;\n        }\n        return $.extend(true, {}, shopt);\n    }\n    \n    $.jqplot.MarkerRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawDiamond = function(x, y, ctx, fill, options) {\n        var opts;\n        if (options == null || $.isEmptyObject(options)) {\n            opts = this;\n        } else {\n            opts = $.extend(true, {}, this, options);\n        }\n        var stretch = 1.2;\n        var dx = this.size/2/stretch;\n        var dy = this.size/2*stretch;\n        var points = [[x-dx, y], [x, y+dy], [x+dx, y], [x, y-dy]];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawPlus = function(x, y, ctx, fill, options) {\n        var opts = $.extend(true, {}, this, options, {closePath:false});\n        var stretch = 1.0;\n        var dx = opts.size/2*stretch;\n        var dy = opts.size/2*stretch;\n        var points1 = [[x, y-dy], [x, y+dy]];\n        var points2 = [[x+dx, y], [x-dx, y]];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points1, getShadowRendererOptions(opts));\n            this.shadowRenderer.draw(ctx, points2, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points1, opts);\n        this.shapeRenderer.draw(ctx, points2, opts);\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawX = function(x, y, ctx, fill, options) {\n        var opts = $.extend(true, {}, this, options, {closePath:false});\n        var stretch = 1.0;\n        var dx = opts.size/2*stretch;\n        var dy = opts.size/2*stretch;\n        var points1 = [[x-dx, y-dy], [x+dx, y+dy]];\n        var points2 = [[x-dx, y+dy], [x+dx, y-dy]];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points1, getShadowRendererOptions(opts));\n            this.shadowRenderer.draw(ctx, points2, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points1, getShapeRendererOptions(opts));\n        this.shapeRenderer.draw(ctx, points2, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawDash = function(x, y, ctx, fill, options) {\n        var opts;\n        if (options == null || $.isEmptyObject(options)) {\n            opts = this;\n        } else {\n            opts = $.extend(true, {}, this, options);\n        }\n        var stretch = 1.0;\n        var dx = this.size/2*stretch;\n        var dy = this.size/2*stretch;\n        var points = [[x-dx, y], [x+dx, y]];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points);\n        }\n        this.shapeRenderer.draw(ctx, points, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawLine = function(p1, p2, ctx, fill, options) {\n        var opts;\n        if (options == null || $.isEmptyObject(options)) {\n            opts = this;\n        } else {\n            opts = $.extend(true, {}, this, options);\n        }\n        var points = [p1, p2];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawSquare = function(x, y, ctx, fill, options) {\n        var opts;\n        if (options == null || $.isEmptyObject(options)) {\n            opts = this;\n        } else {\n            opts = $.extend(true, {}, this, options);\n        }\n        var stretch = 1.0;\n        var dx = this.size/2/stretch;\n        var dy = this.size/2*stretch;\n        var points = [[x-dx, y-dy], [x-dx, y+dy], [x+dx, y+dy], [x+dx, y-dy]];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.drawCircle = function(x, y, ctx, fill, options) {\n        var opts;\n        if (options == null || $.isEmptyObject(options)) {\n            opts = this;\n        } else {\n            opts = $.extend(true, {}, this, options);\n        }\n        var radius = this.size/2;\n        var end = 2*Math.PI;\n        var points = [x, y, radius, 0, end, true];\n        if (opts.shadow) {\n            this.shadowRenderer.draw(ctx, points, getShadowRendererOptions(opts));\n        }\n        this.shapeRenderer.draw(ctx, points, getShapeRendererOptions(opts));\n    };\n    \n    $.jqplot.MarkerRenderer.prototype.draw = function(x, y, ctx, options) {\n        options = options || {};\n        // hack here b/c shape renderer uses canvas based color style options\n        // and marker uses css style names.\n        if (options.show == null || options.show != false) {\n            if (options.color && !options.fillStyle) {\n                options.fillStyle = options.color;\n            }\n            if (options.color && !options.strokeStyle) {\n                options.strokeStyle = options.color;\n            }\n            var style = options.style || this.style;\n            switch (style) {\n                case 'diamond':\n                    this.drawDiamond(x,y,ctx, false, options);\n                    break;\n                case 'filledDiamond':\n                    this.drawDiamond(x,y,ctx, true, options);\n                    break;\n                case 'circle':\n                    this.drawCircle(x,y,ctx, false, options);\n                    break;\n                case 'filledCircle':\n                    this.drawCircle(x,y,ctx, true, options);\n                    break;\n                case 'square':\n                    this.drawSquare(x,y,ctx, false, options);\n                    break;\n                case 'filledSquare':\n                    this.drawSquare(x,y,ctx, true, options);\n                    break;\n                case 'x':\n                    this.drawX(x,y,ctx, true, options);\n                    break;\n                case 'plus':\n                    this.drawPlus(x,y,ctx, true, options);\n                    break;\n                case 'dash':\n                    this.drawDash(x,y,ctx, true, options);\n                    break;\n                case 'line':\n                    this.drawLine(x, y, ctx, false, options);\n                    break;\n                default:\n                    this.drawDiamond(x,y,ctx, false, options);\n                    break;\n            }\n        }\n    };\n    \n\n    // class: $.jqplot.shadowRenderer\n    // The default jqPlot shadow renderer, rendering shadows behind shapes.\n    $.jqplot.ShadowRenderer = function(options){ \n        // Group: Properties\n        \n        // prop: angle\n        // Angle of the shadow in degrees.  Measured counter-clockwise from the x axis.\n        this.angle = 45;\n        // prop: offset\n        // Pixel offset at the given shadow angle of each shadow stroke from the last stroke.\n        this.offset = 1;\n        // prop: alpha\n        // alpha transparency of shadow stroke.\n        this.alpha = 0.07;\n        // prop: lineWidth\n        // width of the shadow line stroke.\n        this.lineWidth = 1.5;\n        // prop: lineJoin\n        // How line segments of the shadow are joined.\n        this.lineJoin = 'miter';\n        // prop: lineCap\n        // how ends of the shadow line are rendered.\n        this.lineCap = 'round';\n        // prop; closePath\n        // whether line path segment is closed upon itself.\n        this.closePath = false;\n        // prop: fill\n        // whether to fill the shape.\n        this.fill = false;\n        // prop: depth\n        // how many times the shadow is stroked.  Each stroke will be offset by offset at angle degrees.\n        this.depth = 3;\n        this.strokeStyle = 'rgba(0,0,0,0.1)';\n        // prop: isarc\n        // whether the shadow is an arc or not.\n        this.isarc = false;\n        \n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.ShadowRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    // function: draw\n    // draws an transparent black (i.e. gray) shadow.\n    //\n    // ctx - canvas drawing context\n    // points - array of points or [x, y, radius, start angle (rad), end angle (rad)]\n    $.jqplot.ShadowRenderer.prototype.draw = function(ctx, points, options) {\n        ctx.save();\n        var opts = (options != null) ? options : {};\n        var fill = (opts.fill != null) ? opts.fill : this.fill;\n        var fillRect = (opts.fillRect != null) ? opts.fillRect : this.fillRect;\n        var closePath = (opts.closePath != null) ? opts.closePath : this.closePath;\n        var offset = (opts.offset != null) ? opts.offset : this.offset;\n        var alpha = (opts.alpha != null) ? opts.alpha : this.alpha;\n        var depth = (opts.depth != null) ? opts.depth : this.depth;\n        var isarc = (opts.isarc != null) ? opts.isarc : this.isarc;\n        var linePattern = (opts.linePattern != null) ? opts.linePattern : this.linePattern;\n        ctx.lineWidth = (opts.lineWidth != null) ? opts.lineWidth : this.lineWidth;\n        ctx.lineJoin = (opts.lineJoin != null) ? opts.lineJoin : this.lineJoin;\n        ctx.lineCap = (opts.lineCap != null) ? opts.lineCap : this.lineCap;\n        ctx.strokeStyle = opts.strokeStyle || this.strokeStyle || 'rgba(0,0,0,'+alpha+')';\n        ctx.fillStyle = opts.fillStyle || this.fillStyle || 'rgba(0,0,0,'+alpha+')';\n        for (var j=0; j<depth; j++) {\n            var ctxPattern = $.jqplot.LinePattern(ctx, linePattern);\n            ctx.translate(Math.cos(this.angle*Math.PI/180)*offset, Math.sin(this.angle*Math.PI/180)*offset);\n            ctxPattern.beginPath();\n            if (isarc) {\n                ctx.arc(points[0], points[1], points[2], points[3], points[4], true);                \n            }\n            else if (fillRect) {\n                if (fillRect) {\n                    ctx.fillRect(points[0], points[1], points[2], points[3]);\n                }\n            }\n            else if (points && points.length){\n                var move = true;\n                for (var i=0; i<points.length; i++) {\n                    // skip to the first non-null point and move to it.\n                    if (points[i][0] != null && points[i][1] != null) {\n                        if (move) {\n                            ctxPattern.moveTo(points[i][0], points[i][1]);\n                            move = false;\n                        }\n                        else {\n                            ctxPattern.lineTo(points[i][0], points[i][1]);\n                        }\n                    }\n                    else {\n                        move = true;\n                    }\n                }\n                \n            }\n            if (closePath) {\n                ctxPattern.closePath();\n            }\n            if (fill) {\n                ctx.fill();\n            }\n            else {\n                ctx.stroke();\n            }\n        }\n        ctx.restore();\n    };\n    \n    // class: $.jqplot.shapeRenderer\n    // The default jqPlot shape renderer.  Given a set of points will\n    // plot them and either stroke a line (fill = false) or fill them (fill = true).\n    // If a filled shape is desired, closePath = true must also be set to close\n    // the shape.\n    $.jqplot.ShapeRenderer = function(options){\n        \n        this.lineWidth = 1.5;\n        // prop: linePattern\n        // line pattern 'dashed', 'dotted', 'solid', some combination\n        // of '-' and '.' characters such as '.-.' or a numerical array like \n        // [draw, skip, draw, skip, ...] such as [1, 10] to draw a dotted line, \n        // [1, 10, 20, 10] to draw a dot-dash line, and so on.\n        this.linePattern = 'solid';\n        // prop: lineJoin\n        // How line segments of the shadow are joined.\n        this.lineJoin = 'miter';\n        // prop: lineCap\n        // how ends of the shadow line are rendered.\n        this.lineCap = 'round';\n        // prop; closePath\n        // whether line path segment is closed upon itself.\n        this.closePath = false;\n        // prop: fill\n        // whether to fill the shape.\n        this.fill = false;\n        // prop: isarc\n        // whether the shadow is an arc or not.\n        this.isarc = false;\n        // prop: fillRect\n        // true to draw shape as a filled rectangle.\n        this.fillRect = false;\n        // prop: strokeRect\n        // true to draw shape as a stroked rectangle.\n        this.strokeRect = false;\n        // prop: clearRect\n        // true to cear a rectangle.\n        this.clearRect = false;\n        // prop: strokeStyle\n        // css color spec for the stoke style\n        this.strokeStyle = '#999999';\n        // prop: fillStyle\n        // css color spec for the fill style.\n        this.fillStyle = '#999999'; \n        \n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.ShapeRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n    \n    // function: draw\n    // draws the shape.\n    //\n    // ctx - canvas drawing context\n    // points - array of points for shapes or \n    // [x, y, width, height] for rectangles or\n    // [x, y, radius, start angle (rad), end angle (rad)] for circles and arcs.\n    $.jqplot.ShapeRenderer.prototype.draw = function(ctx, points, options) {\n        ctx.save();\n        var opts = (options != null) ? options : {};\n        var fill = (opts.fill != null) ? opts.fill : this.fill;\n        var closePath = (opts.closePath != null) ? opts.closePath : this.closePath;\n        var fillRect = (opts.fillRect != null) ? opts.fillRect : this.fillRect;\n        var strokeRect = (opts.strokeRect != null) ? opts.strokeRect : this.strokeRect;\n        var clearRect = (opts.clearRect != null) ? opts.clearRect : this.clearRect;\n        var isarc = (opts.isarc != null) ? opts.isarc : this.isarc;\n        var linePattern = (opts.linePattern != null) ? opts.linePattern : this.linePattern;\n        var ctxPattern = $.jqplot.LinePattern(ctx, linePattern);\n        ctx.lineWidth = opts.lineWidth || this.lineWidth;\n        ctx.lineJoin = opts.lineJoin || this.lineJoin;\n        ctx.lineCap = opts.lineCap || this.lineCap;\n        ctx.strokeStyle = (opts.strokeStyle || opts.color) || this.strokeStyle;\n        ctx.fillStyle = opts.fillStyle || this.fillStyle;\n        ctx.beginPath();\n        if (isarc) {\n            ctx.arc(points[0], points[1], points[2], points[3], points[4], true);   \n            if (closePath) {\n                ctx.closePath();\n            }\n            if (fill) {\n                ctx.fill();\n            }\n            else {\n                ctx.stroke();\n            }\n            ctx.restore();\n            return;\n        }\n        else if (clearRect) {\n            ctx.clearRect(points[0], points[1], points[2], points[3]);\n            ctx.restore();\n            return;\n        }\n        else if (fillRect || strokeRect) {\n            if (fillRect) {\n                ctx.fillRect(points[0], points[1], points[2], points[3]);\n            }\n            if (strokeRect) {\n                ctx.strokeRect(points[0], points[1], points[2], points[3]);\n                ctx.restore();\n                return;\n            }\n        }\n        else if (points && points.length){\n            var move = true;\n            for (var i=0; i<points.length; i++) {\n                // skip to the first non-null point and move to it.\n                if (points[i][0] != null && points[i][1] != null) {\n                    if (move) {\n                        ctxPattern.moveTo(points[i][0], points[i][1]);\n                        move = false;\n                    }\n                    else {\n                        ctxPattern.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n                else {\n                    move = true;\n                }\n            }\n            if (closePath) {\n                ctxPattern.closePath();\n            }\n            if (fill) {\n                ctx.fill();\n            }\n            else {\n                ctx.stroke();\n            }\n        }\n        ctx.restore();\n    };\n    \n    // class $.jqplot.TableLegendRenderer\n    // The default legend renderer for jqPlot.\n    $.jqplot.TableLegendRenderer = function(){\n        //\n    };\n    \n    $.jqplot.TableLegendRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n    };\n        \n    $.jqplot.TableLegendRenderer.prototype.addrow = function (label, color, pad, reverse) {\n        var rs = (pad) ? this.rowSpacing+'px' : '0px';\n        var tr;\n        var td;\n        var elem;\n        var div0;\n        var div1;\n        elem = document.createElement('tr');\n        tr = $(elem);\n        tr.addClass('jqplot-table-legend');\n        elem = null;\n\n        if (reverse){\n            tr.prependTo(this._elem);\n        }\n\n        else{\n            tr.appendTo(this._elem);\n        }\n\n        if (this.showSwatches) {\n            td = $(document.createElement('td'));\n            td.addClass('jqplot-table-legend jqplot-table-legend-swatch');\n            td.css({textAlign: 'center', paddingTop: rs});\n\n            div0 = $(document.createElement('div'));\n            div0.addClass('jqplot-table-legend-swatch-outline');\n            div1 = $(document.createElement('div'));\n            div1.addClass('jqplot-table-legend-swatch');\n            div1.css({backgroundColor: color, borderColor: color});\n\n            tr.append(td.append(div0.append(div1)));\n\n            // $('<td class=\"jqplot-table-legend\" style=\"text-align:center;padding-top:'+rs+';\">'+\n            // '<div><div class=\"jqplot-table-legend-swatch\" style=\"background-color:'+color+';border-color:'+color+';\"></div>'+\n            // '</div></td>').appendTo(tr);\n        }\n        if (this.showLabels) {\n            td = $(document.createElement('td'));\n            td.addClass('jqplot-table-legend jqplot-table-legend-label');\n            td.css('paddingTop', rs);\n            tr.append(td);\n\n            // elem = $('<td class=\"jqplot-table-legend\" style=\"padding-top:'+rs+';\"></td>');\n            // elem.appendTo(tr);\n            if (this.escapeHtml) {\n                td.text(label);\n            }\n            else {\n                td.html(label);\n            }\n        }\n        td = null;\n        div0 = null;\n        div1 = null;\n        tr = null;\n        elem = null;\n    };\n    \n    // called with scope of legend\n    $.jqplot.TableLegendRenderer.prototype.draw = function() {\n        if (this._elem) {\n            this._elem.emptyForce();\n            this._elem = null;\n        }\n\n        if (this.show) {\n            var series = this._series;\n            // make a table.  one line label per row.\n            var elem = document.createElement('table');\n            this._elem = $(elem);\n            this._elem.addClass('jqplot-table-legend');\n\n            var ss = {position:'absolute'};\n            if (this.background) {\n                ss['background'] = this.background;\n            }\n            if (this.border) {\n                ss['border'] = this.border;\n            }\n            if (this.fontSize) {\n                ss['fontSize'] = this.fontSize;\n            }\n            if (this.fontFamily) {\n                ss['fontFamily'] = this.fontFamily;\n            }\n            if (this.textColor) {\n                ss['textColor'] = this.textColor;\n            }\n            if (this.marginTop != null) {\n                ss['marginTop'] = this.marginTop;\n            }\n            if (this.marginBottom != null) {\n                ss['marginBottom'] = this.marginBottom;\n            }\n            if (this.marginLeft != null) {\n                ss['marginLeft'] = this.marginLeft;\n            }\n            if (this.marginRight != null) {\n                ss['marginRight'] = this.marginRight;\n            }\n            \n        \n            var pad = false, \n                reverse = false,\n                s;\n            for (var i = 0; i< series.length; i++) {\n                s = series[i];\n                if (s._stack || s.renderer.constructor == $.jqplot.BezierCurveRenderer){\n                    reverse = true;\n                }\n                if (s.show && s.showLabel) {\n                    var lt = this.labels[i] || s.label.toString();\n                    if (lt) {\n                        var color = s.color;\n                        if (reverse && i < series.length - 1){\n                            pad = true;\n                        }\n                        else if (reverse && i == series.length - 1){\n                            pad = false;\n                        }\n                        this.renderer.addrow.call(this, lt, color, pad, reverse);\n                        pad = true;\n                    }\n                    // let plugins add more rows to legend.  Used by trend line plugin.\n                    for (var j=0; j<$.jqplot.addLegendRowHooks.length; j++) {\n                        var item = $.jqplot.addLegendRowHooks[j].call(this, s);\n                        if (item) {\n                            this.renderer.addrow.call(this, item.label, item.color, pad);\n                            pad = true;\n                        } \n                    }\n                    lt = null;\n                }\n            }\n        }\n        return this._elem;\n    };\n    \n    $.jqplot.TableLegendRenderer.prototype.pack = function(offsets) {\n        if (this.show) {       \n            if (this.placement == 'insideGrid') {\n                switch (this.location) {\n                    case 'nw':\n                        var a = offsets.left;\n                        var b = offsets.top;\n                        this._elem.css('left', a);\n                        this._elem.css('top', b);\n                        break;\n                    case 'n':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        var b = offsets.top;\n                        this._elem.css('left', a);\n                        this._elem.css('top', b);\n                        break;\n                    case 'ne':\n                        var a = offsets.right;\n                        var b = offsets.top;\n                        this._elem.css({right:a, top:b});\n                        break;\n                    case 'e':\n                        var a = offsets.right;\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({right:a, top:b});\n                        break;\n                    case 'se':\n                        var a = offsets.right;\n                        var b = offsets.bottom;\n                        this._elem.css({right:a, bottom:b});\n                        break;\n                    case 's':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        var b = offsets.bottom;\n                        this._elem.css({left:a, bottom:b});\n                        break;\n                    case 'sw':\n                        var a = offsets.left;\n                        var b = offsets.bottom;\n                        this._elem.css({left:a, bottom:b});\n                        break;\n                    case 'w':\n                        var a = offsets.left;\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({left:a, top:b});\n                        break;\n                    default:  // same as 'se'\n                        var a = offsets.right;\n                        var b = offsets.bottom;\n                        this._elem.css({right:a, bottom:b});\n                        break;\n                }\n                \n            }\n            else if (this.placement == 'outside'){\n                switch (this.location) {\n                    case 'nw':\n                        var a = this._plotDimensions.width - offsets.left;\n                        var b = offsets.top;\n                        this._elem.css('right', a);\n                        this._elem.css('top', b);\n                        break;\n                    case 'n':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        var b = this._plotDimensions.height - offsets.top;\n                        this._elem.css('left', a);\n                        this._elem.css('bottom', b);\n                        break;\n                    case 'ne':\n                        var a = this._plotDimensions.width - offsets.right;\n                        var b = offsets.top;\n                        this._elem.css({left:a, top:b});\n                        break;\n                    case 'e':\n                        var a = this._plotDimensions.width - offsets.right;\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({left:a, top:b});\n                        break;\n                    case 'se':\n                        var a = this._plotDimensions.width - offsets.right;\n                        var b = offsets.bottom;\n                        this._elem.css({left:a, bottom:b});\n                        break;\n                    case 's':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        var b = this._plotDimensions.height - offsets.bottom;\n                        this._elem.css({left:a, top:b});\n                        break;\n                    case 'sw':\n                        var a = this._plotDimensions.width - offsets.left;\n                        var b = offsets.bottom;\n                        this._elem.css({right:a, bottom:b});\n                        break;\n                    case 'w':\n                        var a = this._plotDimensions.width - offsets.left;\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({right:a, top:b});\n                        break;\n                    default:  // same as 'se'\n                        var a = offsets.right;\n                        var b = offsets.bottom;\n                        this._elem.css({right:a, bottom:b});\n                        break;\n                }\n            }\n            else {\n                switch (this.location) {\n                    case 'nw':\n                        this._elem.css({left:0, top:offsets.top});\n                        break;\n                    case 'n':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        this._elem.css({left: a, top:offsets.top});\n                        break;\n                    case 'ne':\n                        this._elem.css({right:0, top:offsets.top});\n                        break;\n                    case 'e':\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({right:offsets.right, top:b});\n                        break;\n                    case 'se':\n                        this._elem.css({right:offsets.right, bottom:offsets.bottom});\n                        break;\n                    case 's':\n                        var a = (offsets.left + (this._plotDimensions.width - offsets.right))/2 - this.getWidth()/2;\n                        this._elem.css({left: a, bottom:offsets.bottom});\n                        break;\n                    case 'sw':\n                        this._elem.css({left:offsets.left, bottom:offsets.bottom});\n                        break;\n                    case 'w':\n                        var b = (offsets.top + (this._plotDimensions.height - offsets.bottom))/2 - this.getHeight()/2;\n                        this._elem.css({left:offsets.left, top:b});\n                        break;\n                    default:  // same as 'se'\n                        this._elem.css({right:offsets.right, bottom:offsets.bottom});\n                        break;\n                }\n            }\n        } \n    };\n\n    /**\n     * Class: $.jqplot.ThemeEngine\n     * Theme Engine provides a programatic way to change some of the  more\n     * common jqplot styling options such as fonts, colors and grid options.\n     * A theme engine instance is created with each plot.  The theme engine\n     * manages a collection of themes which can be modified, added to, or \n     * applied to the plot.\n     * \n     * The themeEngine class is not instantiated directly.\n     * When a plot is initialized, the current plot options are scanned\n     * an a default theme named \"Default\" is created.  This theme is\n     * used as the basis for other themes added to the theme engine and\n     * is always available.\n     * \n     * A theme is a simple javascript object with styling parameters for\n     * various entities of the plot.  A theme has the form:\n     * \n     * \n     * > {\n     * >     _name:f \"Default\",\n     * >     target: {\n     * >         backgroundColor: \"transparent\"\n     * >     },\n     * >     legend: {\n     * >         textColor: null,\n     * >         fontFamily: null,\n     * >         fontSize: null,\n     * >         border: null,\n     * >         background: null\n     * >     },\n     * >     title: {\n     * >         textColor: \"rgb(102, 102, 102)\",\n     * >         fontFamily: \"'Trebuchet MS',Arial,Helvetica,sans-serif\",\n     * >         fontSize: \"19.2px\",\n     * >         textAlign: \"center\"\n     * >     },\n     * >     seriesStyles: {},\n     * >     series: [{\n     * >         color: \"#4bb2c5\",\n     * >         lineWidth: 2.5,\n     * >         linePattern: \"solid\",\n     * >         shadow: true,\n     * >         fillColor: \"#4bb2c5\",\n     * >         showMarker: true,\n     * >         markerOptions: {\n     * >             color: \"#4bb2c5\",\n     * >             show: true,\n     * >             style: 'filledCircle',\n     * >             lineWidth: 1.5,\n     * >             size: 4,\n     * >             shadow: true\n     * >         }\n     * >     }],\n     * >     grid: {\n     * >         drawGridlines: true,\n     * >         gridLineColor: \"#cccccc\",\n     * >         gridLineWidth: 1,\n     * >         backgroundColor: \"#fffdf6\",\n     * >         borderColor: \"#999999\",\n     * >         borderWidth: 2,\n     * >         shadow: true\n     * >     },\n     * >     axesStyles: {\n     * >         label: {},\n     * >         ticks: {}\n     * >     },\n     * >     axes: {\n     * >         xaxis: {\n     * >             borderColor: \"#999999\",\n     * >             borderWidth: 2,\n     * >             ticks: {\n     * >                 show: true,\n     * >                 showGridline: true,\n     * >                 showLabel: true,\n     * >                 showMark: true,\n     * >                 size: 4,\n     * >                 textColor: \"\",\n     * >                 whiteSpace: \"nowrap\",\n     * >                 fontSize: \"12px\",\n     * >                 fontFamily: \"'Trebuchet MS',Arial,Helvetica,sans-serif\"\n     * >             },\n     * >             label: {\n     * >                 textColor: \"rgb(102, 102, 102)\",\n     * >                 whiteSpace: \"normal\",\n     * >                 fontSize: \"14.6667px\",\n     * >                 fontFamily: \"'Trebuchet MS',Arial,Helvetica,sans-serif\",\n     * >                 fontWeight: \"400\"\n     * >             }\n     * >         },\n     * >         yaxis: {\n     * >             borderColor: \"#999999\",\n     * >             borderWidth: 2,\n     * >             ticks: {\n     * >                 show: true,\n     * >                 showGridline: true,\n     * >                 showLabel: true,\n     * >                 showMark: true,\n     * >                 size: 4,\n     * >                 textColor: \"\",\n     * >                 whiteSpace: \"nowrap\",\n     * >                 fontSize: \"12px\",\n     * >                 fontFamily: \"'Trebuchet MS',Arial,Helvetica,sans-serif\"\n     * >             },\n     * >             label: {\n     * >                 textColor: null,\n     * >                 whiteSpace: null,\n     * >                 fontSize: null,\n     * >                 fontFamily: null,\n     * >                 fontWeight: null\n     * >             }\n     * >         },\n     * >         x2axis: {...\n     * >         },\n     * >         ...\n     * >         y9axis: {...\n     * >         }\n     * >     }\n     * > }\n     * \n     * \"seriesStyles\" is a style object that will be applied to all series in the plot.\n     * It will forcibly override any styles applied on the individual series.  \"axesStyles\" is\n     * a style object that will be applied to all axes in the plot.  It will also forcibly\n     * override any styles on the individual axes.\n     * \n     * The example shown above has series options for a line series.  Options for other\n     * series types are shown below:\n     * \n     * Bar Series:\n     * \n     * > {\n     * >     color: \"#4bb2c5\",\n     * >     seriesColors: [\"#4bb2c5\", \"#EAA228\", \"#c5b47f\", \"#579575\", \"#839557\", \"#958c12\", \"#953579\", \"#4b5de4\", \"#d8b83f\", \"#ff5800\", \"#0085cc\", \"#c747a3\", \"#cddf54\", \"#FBD178\", \"#26B4E3\", \"#bd70c7\"],\n     * >     lineWidth: 2.5,\n     * >     shadow: true,\n     * >     barPadding: 2,\n     * >     barMargin: 10,\n     * >     barWidth: 15.09375,\n     * >     highlightColors: [\"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\", \"rgb(129,201,214)\"]\n     * > }\n     * \n     * Pie Series:\n     * \n     * > {\n     * >     seriesColors: [\"#4bb2c5\", \"#EAA228\", \"#c5b47f\", \"#579575\", \"#839557\", \"#958c12\", \"#953579\", \"#4b5de4\", \"#d8b83f\", \"#ff5800\", \"#0085cc\", \"#c747a3\", \"#cddf54\", \"#FBD178\", \"#26B4E3\", \"#bd70c7\"],\n     * >     padding: 20,\n     * >     sliceMargin: 0,\n     * >     fill: true,\n     * >     shadow: true,\n     * >     startAngle: 0,\n     * >     lineWidth: 2.5,\n     * >     highlightColors: [\"rgb(129,201,214)\", \"rgb(240,189,104)\", \"rgb(214,202,165)\", \"rgb(137,180,158)\", \"rgb(168,180,137)\", \"rgb(180,174,89)\", \"rgb(180,113,161)\", \"rgb(129,141,236)\", \"rgb(227,205,120)\", \"rgb(255,138,76)\", \"rgb(76,169,219)\", \"rgb(215,126,190)\", \"rgb(220,232,135)\", \"rgb(200,167,96)\", \"rgb(103,202,235)\", \"rgb(208,154,215)\"]\n     * > }\n     * \n     * Funnel Series:\n     * \n     * > {\n     * >     color: \"#4bb2c5\",\n     * >     lineWidth: 2,\n     * >     shadow: true,\n     * >     padding: {\n     * >         top: 20,\n     * >         right: 20,\n     * >         bottom: 20,\n     * >         left: 20\n     * >     },\n     * >     sectionMargin: 6,\n     * >     seriesColors: [\"#4bb2c5\", \"#EAA228\", \"#c5b47f\", \"#579575\", \"#839557\", \"#958c12\", \"#953579\", \"#4b5de4\", \"#d8b83f\", \"#ff5800\", \"#0085cc\", \"#c747a3\", \"#cddf54\", \"#FBD178\", \"#26B4E3\", \"#bd70c7\"],\n     * >     highlightColors: [\"rgb(147,208,220)\", \"rgb(242,199,126)\", \"rgb(220,210,178)\", \"rgb(154,191,172)\", \"rgb(180,191,154)\", \"rgb(191,186,112)\", \"rgb(191,133,174)\", \"rgb(147,157,238)\", \"rgb(231,212,139)\", \"rgb(255,154,102)\", \"rgb(102,181,224)\", \"rgb(221,144,199)\", \"rgb(225,235,152)\", \"rgb(200,167,96)\", \"rgb(124,210,238)\", \"rgb(215,169,221)\"]\n     * > }\n     * \n     */\n    $.jqplot.ThemeEngine = function(){\n        // Group: Properties\n        //\n        // prop: themes\n        // hash of themes managed by the theme engine.  \n        // Indexed by theme name.\n        this.themes = {};\n        // prop: activeTheme\n        // Pointer to currently active theme\n        this.activeTheme=null;\n        \n    };\n    \n    // called with scope of plot\n    $.jqplot.ThemeEngine.prototype.init = function() {\n        // get the Default theme from the current plot settings.\n        var th = new $.jqplot.Theme({_name:'Default'});\n        var n, i, nn;\n        \n        for (n in th.target) {\n            if (n == \"textColor\") {\n                th.target[n] = this.target.css('color');\n            }\n            else {\n                th.target[n] = this.target.css(n);\n            }\n        }\n        \n        if (this.title.show && this.title._elem) {\n            for (n in th.title) {\n                if (n == \"textColor\") {\n                    th.title[n] = this.title._elem.css('color');\n                }\n                else {\n                    th.title[n] = this.title._elem.css(n);\n                }\n            }\n        }\n        \n        for (n in th.grid) {\n            th.grid[n] = this.grid[n];\n        }\n        if (th.grid.backgroundColor == null && this.grid.background != null) {\n            th.grid.backgroundColor = this.grid.background;\n        }\n        if (this.legend.show && this.legend._elem) {\n            for (n in th.legend) {\n                if (n == 'textColor') {\n                    th.legend[n] = this.legend._elem.css('color');\n                }\n                else {\n                    th.legend[n] = this.legend._elem.css(n);\n                }\n            }\n        }\n        var s;\n        \n        for (i=0; i<this.series.length; i++) {\n            s = this.series[i];\n            if (s.renderer.constructor == $.jqplot.LineRenderer) {\n                th.series.push(new LineSeriesProperties());\n            }\n            else if (s.renderer.constructor == $.jqplot.BarRenderer) {\n                th.series.push(new BarSeriesProperties());\n            }\n            else if (s.renderer.constructor == $.jqplot.PieRenderer) {\n                th.series.push(new PieSeriesProperties());\n            }\n            else if (s.renderer.constructor == $.jqplot.DonutRenderer) {\n                th.series.push(new DonutSeriesProperties());\n            }\n            else if (s.renderer.constructor == $.jqplot.FunnelRenderer) {\n                th.series.push(new FunnelSeriesProperties());\n            }\n            else if (s.renderer.constructor == $.jqplot.MeterGaugeRenderer) {\n                th.series.push(new MeterSeriesProperties());\n            }\n            else {\n                th.series.push({});\n            }\n            for (n in th.series[i]) {\n                th.series[i][n] = s[n];\n            }\n        }\n        var a, ax;\n        for (n in this.axes) {\n            ax = this.axes[n];\n            a = th.axes[n] = new AxisProperties();\n            a.borderColor = ax.borderColor;\n            a.borderWidth = ax.borderWidth;\n            if (ax._ticks && ax._ticks[0]) {\n                for (nn in a.ticks) {\n                    if (ax._ticks[0].hasOwnProperty(nn)) {\n                        a.ticks[nn] = ax._ticks[0][nn];\n                    }\n                    else if (ax._ticks[0]._elem){\n                        a.ticks[nn] = ax._ticks[0]._elem.css(nn);\n                    }\n                }\n            }\n            if (ax._label && ax._label.show) {\n                for (nn in a.label) {\n                    // a.label[nn] = ax._label._elem.css(nn);\n                    if (ax._label[nn]) {\n                        a.label[nn] = ax._label[nn];\n                    }\n                    else if (ax._label._elem){\n                        if (nn == 'textColor') {\n                            a.label[nn] = ax._label._elem.css('color');\n                        }\n                        else {\n                            a.label[nn] = ax._label._elem.css(nn);\n                        }\n                    }\n                }\n            }\n        }\n        this.themeEngine._add(th);\n        this.themeEngine.activeTheme  = this.themeEngine.themes[th._name];\n    };\n    /**\n     * Group: methods\n     * \n     * method: get\n     * \n     * Get and return the named theme or the active theme if no name given.\n     * \n     * parameter:\n     * \n     * name - name of theme to get.\n     * \n     * returns:\n     * \n     * Theme instance of given name.\n     */   \n    $.jqplot.ThemeEngine.prototype.get = function(name) {\n        if (!name) {\n            // return the active theme\n            return this.activeTheme;\n        }\n        else {\n            return this.themes[name];\n        }\n    };\n    \n    function numericalOrder(a,b) { return a-b; }\n    \n    /**\n     * method: getThemeNames\n     * \n     * Return the list of theme names in this manager in alpha-numerical order.\n     * \n     * parameter:\n     * \n     * None\n     * \n     * returns:\n     * \n     * A the list of theme names in this manager in alpha-numerical order.\n     */       \n    $.jqplot.ThemeEngine.prototype.getThemeNames = function() {\n        var tn = [];\n        for (var n in this.themes) {\n            tn.push(n);\n        }\n        return tn.sort(numericalOrder);\n    };\n\n    /**\n     * method: getThemes\n     * \n     * Return a list of themes in alpha-numerical order by name.\n     * \n     * parameter:\n     * \n     * None\n     * \n     * returns:\n     * \n     * A list of themes in alpha-numerical order by name.\n     */ \n    $.jqplot.ThemeEngine.prototype.getThemes = function() {\n        var tn = [];\n        var themes = [];\n        for (var n in this.themes) {\n            tn.push(n);\n        }\n        tn.sort(numericalOrder);\n        for (var i=0; i<tn.length; i++) {\n            themes.push(this.themes[tn[i]]);\n        }\n        return themes;\n    };\n    \n    $.jqplot.ThemeEngine.prototype.activate = function(plot, name) {\n        // sometimes need to redraw whole plot.\n        var redrawPlot = false;\n        if (!name && this.activeTheme && this.activeTheme._name) {\n            name = this.activeTheme._name;\n        }\n        if (!this.themes.hasOwnProperty(name)) {\n            throw new Error(\"No theme of that name\");\n        }\n        else {\n            var th = this.themes[name];\n            this.activeTheme = th;\n            var val, checkBorderColor = false, checkBorderWidth = false;\n            var arr = ['xaxis', 'x2axis', 'yaxis', 'y2axis'];\n            \n            for (i=0; i<arr.length; i++) {\n                var ax = arr[i];\n                if (th.axesStyles.borderColor != null) {\n                    plot.axes[ax].borderColor = th.axesStyles.borderColor;\n                }\n                if (th.axesStyles.borderWidth != null) {\n                    plot.axes[ax].borderWidth = th.axesStyles.borderWidth;\n                }\n            }\n            \n            for (var axname in plot.axes) {\n                var axis = plot.axes[axname];\n                if (axis.show) {\n                    var thaxis = th.axes[axname] || {};\n                    var thaxstyle = th.axesStyles;\n                    var thax = $.jqplot.extend(true, {}, thaxis, thaxstyle);\n                    val = (th.axesStyles.borderColor != null) ? th.axesStyles.borderColor : thax.borderColor;\n                    if (thax.borderColor != null) {\n                        axis.borderColor = thax.borderColor;\n                        redrawPlot = true;\n                    }\n                    val = (th.axesStyles.borderWidth != null) ? th.axesStyles.borderWidth : thax.borderWidth;\n                    if (thax.borderWidth != null) {\n                        axis.borderWidth = thax.borderWidth;\n                        redrawPlot = true;\n                    }\n                    if (axis._ticks && axis._ticks[0]) {\n                        for (var nn in thax.ticks) {\n                            // val = null;\n                            // if (th.axesStyles.ticks && th.axesStyles.ticks[nn] != null) {\n                            //     val = th.axesStyles.ticks[nn];\n                            // }\n                            // else if (thax.ticks[nn] != null){\n                            //     val = thax.ticks[nn]\n                            // }\n                            val = thax.ticks[nn];\n                            if (val != null) {\n                                axis.tickOptions[nn] = val;\n                                axis._ticks = [];\n                                redrawPlot = true;\n                            }\n                        }\n                    }\n                    if (axis._label && axis._label.show) {\n                        for (var nn in thax.label) {\n                            // val = null;\n                            // if (th.axesStyles.label && th.axesStyles.label[nn] != null) {\n                            //     val = th.axesStyles.label[nn];\n                            // }\n                            // else if (thax.label && thax.label[nn] != null){\n                            //     val = thax.label[nn]\n                            // }\n                            val = thax.label[nn];\n                            if (val != null) {\n                                axis.labelOptions[nn] = val;\n                                redrawPlot = true;\n                            }\n                        }\n                    }\n                    \n                }\n            }            \n            \n            for (var n in th.grid) {\n                if (th.grid[n] != null) {\n                    plot.grid[n] = th.grid[n];\n                }\n            }\n            if (!redrawPlot) {\n                plot.grid.draw();\n            }\n            \n            if (plot.legend.show) { \n                for (n in th.legend) {\n                    if (th.legend[n] != null) {\n                        plot.legend[n] = th.legend[n];\n                    }\n                }\n            }\n            if (plot.title.show) {\n                for (n in th.title) {\n                    if (th.title[n] != null) {\n                        plot.title[n] = th.title[n];\n                    }\n                }\n            }\n            \n            var i;\n            for (i=0; i<th.series.length; i++) {\n                var opts = {};\n                var redrawSeries = false;\n                for (n in th.series[i]) {\n                    val = (th.seriesStyles[n] != null) ? th.seriesStyles[n] : th.series[i][n];\n                    if (val != null) {\n                        opts[n] = val;\n                        if (n == 'color') {\n                            plot.series[i].renderer.shapeRenderer.fillStyle = val;\n                            plot.series[i].renderer.shapeRenderer.strokeStyle = val;\n                            plot.series[i][n] = val;\n                        }\n                        else if ((n == 'lineWidth') || (n == 'linePattern')) {\n                            plot.series[i].renderer.shapeRenderer[n] = val;\n                            plot.series[i][n] = val;\n                        }\n                        else if (n == 'markerOptions') {\n                            merge (plot.series[i].markerOptions, val);\n                            merge (plot.series[i].markerRenderer, val);\n                        }\n                        else {\n                            plot.series[i][n] = val;\n                        }\n                        redrawPlot = true;\n                    }\n                }\n            }\n            \n            if (redrawPlot) {\n                plot.target.empty();\n                plot.draw();\n            }\n            \n            for (n in th.target) {\n                if (th.target[n] != null) {\n                    plot.target.css(n, th.target[n]);\n                }\n            }\n        }\n        \n    };\n    \n    $.jqplot.ThemeEngine.prototype._add = function(theme, name) {\n        if (name) {\n            theme._name = name;\n        }\n        if (!theme._name) {\n            theme._name = Date.parse(new Date());\n        }\n        if (!this.themes.hasOwnProperty(theme._name)) {\n            this.themes[theme._name] = theme;\n        }\n        else {\n            throw new Error(\"jqplot.ThemeEngine Error: Theme already in use\");\n        }\n    };\n    \n    // method remove\n    // Delete the named theme, return true on success, false on failure.\n    \n\n    /**\n     * method: remove\n     * \n     * Remove the given theme from the themeEngine.\n     * \n     * parameters:\n     * \n     * name - name of the theme to remove.\n     * \n     * returns:\n     * \n     * true on success, false on failure.\n     */\n    $.jqplot.ThemeEngine.prototype.remove = function(name) {\n        if (name == 'Default') {\n            return false;\n        }\n        return delete this.themes[name];\n    };\n\n    /**\n     * method: newTheme\n     * \n     * Create a new theme based on the default theme, adding it the themeEngine.\n     * \n     * parameters:\n     * \n     * name - name of the new theme.\n     * obj - optional object of styles to be applied to this new theme.\n     * \n     * returns:\n     * \n     * new Theme object.\n     */\n    $.jqplot.ThemeEngine.prototype.newTheme = function(name, obj) {\n        if (typeof(name) == 'object') {\n            obj = obj || name;\n            name = null;\n        }\n        if (obj && obj._name) {\n            name = obj._name;\n        }\n        else {\n            name = name || Date.parse(new Date());\n        }\n        // var th = new $.jqplot.Theme(name);\n        var th = this.copy(this.themes['Default']._name, name);\n        $.jqplot.extend(th, obj);\n        return th;\n    };\n    \n    // function clone(obj) {\n    //     return eval(obj.toSource());\n    // }\n    \n    function clone(obj){\n        if(obj == null || typeof(obj) != 'object'){\n            return obj;\n        }\n    \n        var temp = new obj.constructor();\n        for(var key in obj){\n            temp[key] = clone(obj[key]);\n        }   \n        return temp;\n    }\n    \n    $.jqplot.clone = clone;\n    \n    function merge(obj1, obj2) {\n        if (obj2 ==  null || typeof(obj2) != 'object') {\n            return;\n        }\n        for (var key in obj2) {\n            if (key == 'highlightColors') {\n                obj1[key] = clone(obj2[key]);\n            }\n            if (obj2[key] != null && typeof(obj2[key]) == 'object') {\n                if (!obj1.hasOwnProperty(key)) {\n                    obj1[key] = {};\n                }\n                merge(obj1[key], obj2[key]);\n            }\n            else {\n                obj1[key] = obj2[key];\n            }\n        }\n    }\n    \n    $.jqplot.merge = merge;\n    \n        // Use the jQuery 1.3.2 extend function since behaviour in jQuery 1.4 seems problematic\n    $.jqplot.extend = function() {\n        // copy reference to target object\n        var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\n\n        // Handle a deep copy situation\n        if ( typeof target === \"boolean\" ) {\n            deep = target;\n            target = arguments[1] || {};\n            // skip the boolean and the target\n            i = 2;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if ( typeof target !== \"object\" && !toString.call(target) === \"[object Function]\" ) {\n            target = {};\n        }\n\n        for ( ; i < length; i++ ){\n            // Only deal with non-null/undefined values\n            if ( (options = arguments[ i ]) != null ) {\n                // Extend the base object\n                for ( var name in options ) {\n                    var src = target[ name ], copy = options[ name ];\n\n                    // Prevent never-ending loop\n                    if ( target === copy ) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging object values\n                    if ( deep && copy && typeof copy === \"object\" && !copy.nodeType ) {\n                        target[ name ] = $.jqplot.extend( deep, \n                            // Never move original objects, clone them\n                            src || ( copy.length != null ? [ ] : { } )\n                        , copy );\n                    }\n                    // Don't bring in undefined values\n                    else if ( copy !== undefined ) {\n                        target[ name ] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n\n    /**\n     * method: rename\n     * \n     * Rename a theme.\n     * \n     * parameters:\n     * \n     * oldName - current name of the theme.\n     * newName - desired name of the theme.\n     * \n     * returns:\n     * \n     * new Theme object.\n     */\n    $.jqplot.ThemeEngine.prototype.rename = function (oldName, newName) {\n        if (oldName == 'Default' || newName == 'Default') {\n            throw new Error (\"jqplot.ThemeEngine Error: Cannot rename from/to Default\");\n        }\n        if (this.themes.hasOwnProperty(newName)) {\n            throw new Error (\"jqplot.ThemeEngine Error: New name already in use.\");\n        }\n        else if (this.themes.hasOwnProperty(oldName)) {\n            var th = this.copy (oldName, newName);\n            this.remove(oldName);\n            return th;\n        }\n        throw new Error(\"jqplot.ThemeEngine Error: Old name or new name invalid\");\n    };\n\n    /**\n     * method: copy\n     * \n     * Create a copy of an existing theme in the themeEngine, adding it the themeEngine.\n     * \n     * parameters:\n     * \n     * sourceName - name of the existing theme.\n     * targetName - name of the copy.\n     * obj - optional object of style parameter to apply to the new theme.\n     * \n     * returns:\n     * \n     * new Theme object.\n     */\n    $.jqplot.ThemeEngine.prototype.copy = function (sourceName, targetName, obj) {\n        if (targetName == 'Default') {\n            throw new Error (\"jqplot.ThemeEngine Error: Cannot copy over Default theme\");\n        }\n        if (!this.themes.hasOwnProperty(sourceName)) {\n            var s = \"jqplot.ThemeEngine Error: Source name invalid\";\n            throw new Error(s);\n        }\n        if (this.themes.hasOwnProperty(targetName)) {\n            var s = \"jqplot.ThemeEngine Error: Target name invalid\";\n            throw new Error(s);\n        }\n        else {\n            var th = clone(this.themes[sourceName]);\n            th._name = targetName;\n            $.jqplot.extend(true, th, obj);\n            this._add(th);\n            return th;\n        }\n    };\n    \n    \n    $.jqplot.Theme = function(name, obj) {\n        if (typeof(name) == 'object') {\n            obj = obj || name;\n            name = null;\n        }\n        name = name || Date.parse(new Date());\n        this._name = name;\n        this.target = {\n            backgroundColor: null\n        };\n        this.legend = {\n            textColor: null,\n            fontFamily: null,\n            fontSize: null,\n            border: null,\n            background: null\n        };\n        this.title = {\n            textColor: null,\n            fontFamily: null,\n            fontSize: null,\n            textAlign: null\n        };\n        this.seriesStyles = {};\n        this.series = [];\n        this.grid = {\n            drawGridlines: null,\n            gridLineColor: null,\n            gridLineWidth: null,\n            backgroundColor: null,\n            borderColor: null,\n            borderWidth: null,\n            shadow: null\n        };\n        this.axesStyles = {label:{}, ticks:{}};\n        this.axes = {};\n        if (typeof(obj) == 'string') {\n            this._name = obj;\n        }\n        else if(typeof(obj) == 'object') {\n            $.jqplot.extend(true, this, obj);\n        }\n    };\n    \n    var AxisProperties = function() {\n        this.borderColor = null;\n        this.borderWidth = null;\n        this.ticks = new AxisTicks();\n        this.label = new AxisLabel();\n    };\n    \n    var AxisTicks = function() {\n        this.show = null;\n        this.showGridline = null;\n        this.showLabel = null;\n        this.showMark = null;\n        this.size = null;\n        this.textColor = null;\n        this.whiteSpace = null;\n        this.fontSize = null;\n        this.fontFamily = null;\n    };\n    \n    var AxisLabel = function() {\n        this.textColor = null;\n        this.whiteSpace = null;\n        this.fontSize = null;\n        this.fontFamily = null;\n        this.fontWeight = null;\n    };\n    \n    var LineSeriesProperties = function() {\n        this.color=null;\n        this.lineWidth=null;\n        this.linePattern=null;\n        this.shadow=null;\n        this.fillColor=null;\n        this.showMarker=null;\n        this.markerOptions = new MarkerOptions();\n    };\n    \n    var MarkerOptions = function() {\n        this.show = null;\n        this.style = null;\n        this.lineWidth = null;\n        this.size = null;\n        this.color = null;\n        this.shadow = null;\n    };\n    \n    var BarSeriesProperties = function() {\n        this.color=null;\n        this.seriesColors=null;\n        this.lineWidth=null;\n        this.shadow=null;\n        this.barPadding=null;\n        this.barMargin=null;\n        this.barWidth=null;\n        this.highlightColors=null;\n    };\n    \n    var PieSeriesProperties = function() {\n        this.seriesColors=null;\n        this.padding=null;\n        this.sliceMargin=null;\n        this.fill=null;\n        this.shadow=null;\n        this.startAngle=null;\n        this.lineWidth=null;\n        this.highlightColors=null;\n    };\n    \n    var DonutSeriesProperties = function() {\n        this.seriesColors=null;\n        this.padding=null;\n        this.sliceMargin=null;\n        this.fill=null;\n        this.shadow=null;\n        this.startAngle=null;\n        this.lineWidth=null;\n        this.innerDiameter=null;\n        this.thickness=null;\n        this.ringMargin=null;\n        this.highlightColors=null;\n    };\n    \n    var FunnelSeriesProperties = function() {\n        this.color=null;\n        this.lineWidth=null;\n        this.shadow=null;\n        this.padding=null;\n        this.sectionMargin=null;\n        this.seriesColors=null;\n        this.highlightColors=null;\n    };\n    \n    var MeterSeriesProperties = function() {\n        this.padding=null;\n        this.backgroundColor=null;\n        this.ringColor=null;\n        this.tickColor=null;\n        this.ringWidth=null;\n        this.intervalColors=null;\n        this.intervalInnerRadius=null;\n        this.intervalOuterRadius=null;\n        this.hubRadius=null;\n        this.needleThickness=null;\n        this.needlePad=null;\n    };\n        \n\n\n\n    $.fn.jqplotChildText = function() {\n        return $(this).contents().filter(function() {\n            return this.nodeType == 3;  // Node.TEXT_NODE not defined in I7\n        }).text();\n    };\n\n    // Returns font style as abbreviation for \"font\" property.\n    $.fn.jqplotGetComputedFontStyle = function() {\n        var css = window.getComputedStyle ?  window.getComputedStyle(this[0], \"\") : this[0].currentStyle;\n        var attrs = css['font-style'] ? ['font-style', 'font-weight', 'font-size', 'font-family'] : ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily'];\n        var style = [];\n\n        for (var i=0 ; i < attrs.length; ++i) {\n            var attr = String(css[attrs[i]]);\n\n            if (attr && attr != 'normal') {\n                style.push(attr);\n            }\n        }\n        return style.join(' ');\n    };\n\n    /**\n     * Namespace: $.fn\n     * jQuery namespace to attach functions to jQuery elements.\n     *  \n     */\n\n    $.fn.jqplotToImageCanvas = function(options) {\n\n        options = options || {};\n        var x_offset = (options.x_offset == null) ? 0 : options.x_offset;\n        var y_offset = (options.y_offset == null) ? 0 : options.y_offset;\n        var backgroundColor = (options.backgroundColor == null) ? 'rgb(255,255,255)' : options.backgroundColor;\n\n        if ($(this).width() == 0 || $(this).height() == 0) {\n            return null;\n        }\n\n        // excanvas and hence IE < 9 do not support toDataURL and cannot export images.\n        if ($.jqplot.use_excanvas) {\n            return null;\n        }\n        \n        var newCanvas = document.createElement(\"canvas\");\n        var h = $(this).outerHeight(true);\n        var w = $(this).outerWidth(true);\n        var offs = $(this).offset();\n        var plotleft = offs.left;\n        var plottop = offs.top;\n        var transx = 0, transy = 0;\n\n        // have to check if any elements are hanging outside of plot area before rendering,\n        // since changing width of canvas will erase canvas.\n\n        var clses = ['jqplot-table-legend', 'jqplot-xaxis-tick', 'jqplot-x2axis-tick', 'jqplot-yaxis-tick', 'jqplot-y2axis-tick', 'jqplot-y3axis-tick', \n        'jqplot-y4axis-tick', 'jqplot-y5axis-tick', 'jqplot-y6axis-tick', 'jqplot-y7axis-tick', 'jqplot-y8axis-tick', 'jqplot-y9axis-tick',\n        'jqplot-xaxis-label', 'jqplot-x2axis-label', 'jqplot-yaxis-label', 'jqplot-y2axis-label', 'jqplot-y3axis-label', 'jqplot-y4axis-label', \n        'jqplot-y5axis-label', 'jqplot-y6axis-label', 'jqplot-y7axis-label', 'jqplot-y8axis-label', 'jqplot-y9axis-label' ];\n\n        var temptop, templeft, tempbottom, tempright;\n\n        for (var i = 0; i < clses.length; i++) {\n            $(this).find('.'+clses[i]).each(function() {\n                temptop = $(this).offset().top - plottop;\n                templeft = $(this).offset().left - plotleft;\n                tempright = templeft + $(this).outerWidth(true) + transx;\n                tempbottom = temptop + $(this).outerHeight(true) + transy;\n                if (templeft < -transx) {\n                    w = w - transx - templeft;\n                    transx = -templeft;\n                }\n                if (temptop < -transy) {\n                    h = h - transy - temptop;\n                    transy = - temptop;\n                }\n                if (tempright > w) {\n                    w = tempright;\n                }\n                if (tempbottom > h) {\n                    h =  tempbottom;\n                }\n            });\n        }\n\n        newCanvas.width = w + Number(x_offset);\n        newCanvas.height = h + Number(y_offset);\n\n        var newContext = newCanvas.getContext(\"2d\"); \n\n        newContext.save();\n        newContext.fillStyle = backgroundColor;\n        newContext.fillRect(0,0, newCanvas.width, newCanvas.height);\n        newContext.restore();\n\n        newContext.translate(transx, transy);\n        newContext.textAlign = 'left';\n        newContext.textBaseline = 'top';\n\n        function getLineheight(el) {\n            var lineheight = parseInt($(el).css('line-height'), 10);\n\n            if (isNaN(lineheight)) {\n                lineheight = parseInt($(el).css('font-size'), 10) * 1.2;\n            }\n            return lineheight;\n        }\n\n        function writeWrappedText (el, context, text, left, top, canvasWidth) {\n            var lineheight = getLineheight(el);\n            var tagwidth = $(el).innerWidth();\n            var tagheight = $(el).innerHeight();\n            var words = text.split(/\\s+/);\n            var wl = words.length;\n            var w = '';\n            var breaks = [];\n            var temptop = top;\n            var templeft = left;\n\n            for (var i=0; i<wl; i++) {\n                w += words[i];\n                if (context.measureText(w).width > tagwidth && w.length > words[i].length) {\n                    breaks.push(i);\n                    w = '';\n                    i--;\n                }   \n            }\n            if (breaks.length === 0) {\n                // center text if necessary\n                if ($(el).css('textAlign') === 'center') {\n                    templeft = left + (canvasWidth - context.measureText(w).width)/2  - transx;\n                }\n                context.fillText(text, templeft, top);\n            }\n            else {\n                w = words.slice(0, breaks[0]).join(' ');\n                // center text if necessary\n                if ($(el).css('textAlign') === 'center') {\n                    templeft = left + (canvasWidth - context.measureText(w).width)/2  - transx;\n                }\n                context.fillText(w, templeft, temptop);\n                temptop += lineheight;\n                for (var i=1, l=breaks.length; i<l; i++) {\n                    w = words.slice(breaks[i-1], breaks[i]).join(' ');\n                    // center text if necessary\n                    if ($(el).css('textAlign') === 'center') {\n                        templeft = left + (canvasWidth - context.measureText(w).width)/2  - transx;\n                    }\n                    context.fillText(w, templeft, temptop);\n                    temptop += lineheight;\n                }\n                w = words.slice(breaks[i-1], words.length).join(' ');\n                // center text if necessary\n                if ($(el).css('textAlign') === 'center') {\n                    templeft = left + (canvasWidth - context.measureText(w).width)/2  - transx;\n                }\n                context.fillText(w, templeft, temptop);\n            }\n\n        }\n\n        function _jqpToImage(el, x_offset, y_offset) {\n            var tagname = el.tagName.toLowerCase();\n            var p = $(el).position();\n            var css = window.getComputedStyle ?  window.getComputedStyle(el, \"\") : el.currentStyle; // for IE < 9\n            var left = x_offset + p.left + parseInt(css.marginLeft, 10) + parseInt(css.borderLeftWidth, 10) + parseInt(css.paddingLeft, 10);\n            var top = y_offset + p.top + parseInt(css.marginTop, 10) + parseInt(css.borderTopWidth, 10)+ parseInt(css.paddingTop, 10);\n            var w = newCanvas.width;\n            // var left = x_offset + p.left + $(el).css('marginLeft') + $(el).css('borderLeftWidth') \n\n            // somehow in here, for divs within divs, the width of the inner div should be used instead of the canvas.\n\n            if ((tagname == 'div' || tagname == 'span') && !$(el).hasClass('jqplot-highlighter-tooltip') && !$(el).hasClass('jqplot-canvasOverlay-tooltip')) {\n                $(el).children().each(function() {\n                    _jqpToImage(this, left, top);\n                });\n                var text = $(el).jqplotChildText();\n\n                if (text) {\n                    newContext.font = $(el).jqplotGetComputedFontStyle();\n                    newContext.fillStyle = $(el).css('color');\n\n                    writeWrappedText(el, newContext, text, left, top, w);\n                }\n            }\n\n            // handle the standard table legend\n\n            else if (tagname === 'table' && $(el).hasClass('jqplot-table-legend')) {\n                newContext.strokeStyle = $(el).css('border-top-color');\n                newContext.fillStyle = $(el).css('background-color');\n                newContext.fillRect(left, top, $(el).innerWidth(), $(el).innerHeight());\n                if (parseInt($(el).css('border-top-width'), 10) > 0) {\n                    newContext.strokeRect(left, top, $(el).innerWidth(), $(el).innerHeight());\n                }\n\n                // find all the swatches\n                $(el).find('div.jqplot-table-legend-swatch-outline').each(function() {\n                    // get the first div and stroke it\n                    var elem = $(this);\n                    newContext.strokeStyle = elem.css('border-top-color');\n                    var l = left + elem.position().left;\n                    var t = top + elem.position().top;\n                    newContext.strokeRect(l, t, elem.innerWidth(), elem.innerHeight());\n\n                    // now fill the swatch\n                    \n                    l += parseInt(elem.css('padding-left'), 10);\n                    t += parseInt(elem.css('padding-top'), 10);\n                    var h = elem.innerHeight() - 2 * parseInt(elem.css('padding-top'), 10);\n                    var w = elem.innerWidth() - 2 * parseInt(elem.css('padding-left'), 10);\n\n                    var swatch = elem.children('div.jqplot-table-legend-swatch');\n                    newContext.fillStyle = swatch.css('background-color');\n                    newContext.fillRect(l, t, w, h);\n                });\n\n                // now add text\n\n                $(el).find('td.jqplot-table-legend-label').each(function(){\n                    var elem = $(this);\n                    var l = left + elem.position().left;\n                    var t = top + elem.position().top + parseInt(elem.css('padding-top'), 10);\n                    newContext.font = elem.jqplotGetComputedFontStyle();\n                    newContext.fillStyle = elem.css('color');\n                    writeWrappedText(elem, newContext, elem.text(), l, t, w);\n                });\n\n                var elem = null;\n            }\n\n            else if (tagname == 'canvas') {\n                newContext.drawImage(el, left, top);\n            }\n        }\n        $(this).children().each(function() {\n            _jqpToImage(this, x_offset, y_offset);\n        });\n        return newCanvas;\n    };\n\n    // return the raw image data string.\n    // Should work on canvas supporting browsers.\n    $.fn.jqplotToImageStr = function(options) {\n        var imgCanvas = $(this).jqplotToImageCanvas(options);\n        if (imgCanvas) {\n            return imgCanvas.toDataURL(\"image/png\");\n        }\n        else {\n            return null;\n        }\n    };\n\n    // return a DOM <img> element and return it.\n    // Should work on canvas supporting browsers.\n    $.fn.jqplotToImageElem = function(options) {\n        var elem = document.createElement(\"img\");\n        var str = $(this).jqplotToImageStr(options);\n        elem.src = str;\n        return elem;\n    };\n\n    // return a string for an <img> element and return it.\n    // Should work on canvas supporting browsers.\n    $.fn.jqplotToImageElemStr = function(options) {\n        var str = '<img src='+$(this).jqplotToImageStr(options)+' />';\n        return str;\n    };\n\n    // Not guaranteed to work, even on canvas supporting browsers due to \n    // limitations with location.href and browser support.\n    $.fn.jqplotSaveImage = function() {\n        var imgData = $(this).jqplotToImageStr({});\n        if (imgData) {\n            window.location.href = imgData.replace(\"image/png\", \"image/octet-stream\");\n        }\n\n    };\n\n    // Not guaranteed to work, even on canvas supporting browsers due to\n    // limitations with window.open and arbitrary data.\n    $.fn.jqplotViewImage = function() {\n        var imgStr = $(this).jqplotToImageElemStr({});\n        var imgData = $(this).jqplotToImageStr({});\n        if (imgStr) {\n            var w = window.open('');\n            w.document.open(\"image/png\");\n            w.document.write(imgStr);\n            w.document.close();\n            w = null;\n        }\n    };\n    \n\n\n\n    /** \n     * @description\n     * <p>Object with extended date parsing and formatting capabilities.\n     * This library borrows many concepts and ideas from the Date Instance \n     * Methods by Ken Snyder along with some parts of Ken's actual code.</p>\n     *\n     * <p>jsDate takes a different approach by not extending the built-in \n     * Date Object, improving date parsing, allowing for multiple formatting \n     * syntaxes and multiple and more easily expandable localization.</p>\n     * \n     * @author Chris Leonello\n     * @date #date#\n     * @version #VERSION#\n     * @copyright (c) 2010-2015 Chris Leonello\n     * jsDate is currently available for use in all personal or commercial projects \n     * under both the MIT and GPL version 2.0 licenses. This means that you can \n     * choose the license that best suits your project and use it accordingly.\n     * \n     * <p>Ken's original Date Instance Methods and copyright notice:</p>\n     * <pre>\n     * Ken Snyder (ken d snyder at gmail dot com)\n     * 2008-09-10\n     * version 2.0.2 (http://kendsnyder.com/sandbox/date/)     \n     * Creative Commons Attribution License 3.0 (http://creativecommons.org/licenses/by/3.0/)\n     * </pre>\n     * \n     * @class\n     * @name jsDate\n     * @param  {String | Number | Array | Date&nbsp;Object | Options&nbsp;Object} arguments Optional arguments, either a parsable date/time string,\n     * a JavaScript timestamp, an array of numbers of form [year, month, day, hours, minutes, seconds, milliseconds],\n     * a Date object, or an options object of form {syntax: \"perl\", date:some Date} where all options are optional.\n     */\n     \n    var jsDate = function () {\n    \n        this.syntax = jsDate.config.syntax;\n        this._type = \"jsDate\";\n        this.proxy = new Date();\n        this.options = {};\n        this.locale = jsDate.regional.getLocale();\n        this.formatString = '';\n        this.defaultCentury = jsDate.config.defaultCentury;\n\n        switch ( arguments.length ) {\n            case 0:\n                break;\n            case 1:\n                // other objects either won't have a _type property or,\n                // if they do, it shouldn't be set to \"jsDate\", so\n                // assume it is an options argument.\n                if (get_type(arguments[0]) == \"[object Object]\" && arguments[0]._type != \"jsDate\") {\n                    var opts = this.options = arguments[0];\n                    this.syntax = opts.syntax || this.syntax;\n                    this.defaultCentury = opts.defaultCentury || this.defaultCentury;\n                    this.proxy = jsDate.createDate(opts.date);\n                }\n                else {\n                    this.proxy = jsDate.createDate(arguments[0]);\n                }\n                break;\n            default:\n                var a = [];\n                for ( var i=0; i<arguments.length; i++ ) {\n                    a.push(arguments[i]);\n                }\n                // this should be the current date/time?\n                this.proxy = new Date();\n                this.proxy.setFullYear.apply( this.proxy, a.slice(0,3) );\n                if ( a.slice(3).length ) {\n                    this.proxy.setHours.apply( this.proxy, a.slice(3) );\n                }\n                break;\n        }\n    };\n    \n    /**\n     * @namespace Configuration options that will be used as defaults for all instances on the page.\n     * @property {String} defaultLocale The default locale to use [en].\n     * @property {String} syntax The default syntax to use [perl].\n     * @property {Number} defaultCentury The default centry for 2 digit dates.\n     */\n    jsDate.config = {\n        defaultLocale: 'en',\n        syntax: 'perl',\n        defaultCentury: 1900\n    };\n        \n    /**\n     * Add an arbitrary amount to the currently stored date\n     * \n     * @param {Number} number      \n     * @param {String} unit\n     * @returns {jsDate}       \n     */\n     \n    jsDate.prototype.add = function(number, unit) {\n        var factor = multipliers[unit] || multipliers.day;\n        if (typeof factor == 'number') {\n            this.proxy.setTime(this.proxy.getTime() + (factor * number));\n        } else {\n            factor.add(this, number);\n        }\n        return this;\n    };\n        \n    /**\n     * Create a new jqplot.date object with the same date\n     * \n     * @returns {jsDate}\n     */  \n     \n    jsDate.prototype.clone = function() {\n            return new jsDate(this.proxy.getTime());\n    };\n\n    /**\n     * Get the UTC TimeZone Offset of this date in milliseconds.\n     *\n     * @returns {Number}\n     */\n\n    jsDate.prototype.getUtcOffset = function() {\n        return this.proxy.getTimezoneOffset() * 60000;\n    };\n\n    /**\n     * Find the difference between this jsDate and another date.\n     * \n     * @param {String| Number| Array| jsDate&nbsp;Object| Date&nbsp;Object} dateObj\n     * @param {String} unit\n     * @param {Boolean} allowDecimal\n     * @returns {Number} Number of units difference between dates.\n     */\n     \n    jsDate.prototype.diff = function(dateObj, unit, allowDecimal) {\n        // ensure we have a Date object\n        dateObj = new jsDate(dateObj);\n        if (dateObj === null) {\n            return null;\n        }\n        // get the multiplying factor integer or factor function\n        var factor = multipliers[unit] || multipliers.day;\n        if (typeof factor == 'number') {\n            // multiply\n            var unitDiff = (this.proxy.getTime() - dateObj.proxy.getTime()) / factor;\n        } else {\n            // run function\n            var unitDiff = factor.diff(this.proxy, dateObj.proxy);\n        }\n        // if decimals are not allowed, round toward zero\n        return (allowDecimal ? unitDiff : Math[unitDiff > 0 ? 'floor' : 'ceil'](unitDiff));          \n    };\n    \n    /**\n     * Get the abbreviated name of the current week day\n     * \n     * @returns {String}\n     */   \n     \n    jsDate.prototype.getAbbrDayName = function() {\n        return jsDate.regional[this.locale][\"dayNamesShort\"][this.proxy.getDay()];\n    };\n    \n    /**\n     * Get the abbreviated name of the current month\n     * \n     * @returns {String}\n     */\n     \n    jsDate.prototype.getAbbrMonthName = function() {\n        return jsDate.regional[this.locale][\"monthNamesShort\"][this.proxy.getMonth()];\n    };\n    \n    /**\n     * Get UPPER CASE AM or PM for the current time\n     * \n     * @returns {String}\n     */\n     \n    jsDate.prototype.getAMPM = function() {\n        return this.proxy.getHours() >= 12 ? 'PM' : 'AM';\n    };\n    \n    /**\n     * Get lower case am or pm for the current time\n     * \n     * @returns {String}\n     */\n     \n    jsDate.prototype.getAmPm = function() {\n        return this.proxy.getHours() >= 12 ? 'pm' : 'am';\n    };\n    \n    /**\n     * Get the century (19 for 20th Century)\n     *\n     * @returns {Integer} Century (19 for 20th century).\n     */\n    jsDate.prototype.getCentury = function() { \n        return parseInt(this.proxy.getFullYear()/100, 10);\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getDate = function() {\n        return this.proxy.getDate();\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getDay = function() {\n        return this.proxy.getDay();\n    };\n    \n    /**\n     * Get the Day of week 1 (Monday) thru 7 (Sunday)\n     * \n     * @returns {Integer} Day of week 1 (Monday) thru 7 (Sunday)\n     */\n    jsDate.prototype.getDayOfWeek = function() { \n        var dow = this.proxy.getDay(); \n        return dow===0?7:dow; \n    };\n    \n    /**\n     * Get the day of the year\n     * \n     * @returns {Integer} 1 - 366, day of the year\n     */\n    jsDate.prototype.getDayOfYear = function() {\n        var d = this.proxy;\n        var ms = d - new Date('' + d.getFullYear() + '/1/1 GMT');\n        ms += d.getTimezoneOffset()*60000;\n        d = null;\n        return parseInt(ms/60000/60/24, 10)+1;\n    };\n    \n    /**\n     * Get the name of the current week day\n     * \n     * @returns {String}\n     */  \n     \n    jsDate.prototype.getDayName = function() {\n        return jsDate.regional[this.locale][\"dayNames\"][this.proxy.getDay()];\n    };\n    \n    /**\n     * Get the week number of the given year, starting with the first Sunday as the first week\n     * @returns {Integer} Week number (13 for the 13th full week of the year).\n     */\n    jsDate.prototype.getFullWeekOfYear = function() {\n        var d = this.proxy;\n        var doy = this.getDayOfYear();\n        var rdow = 6-d.getDay();\n        var woy = parseInt((doy+rdow)/7, 10);\n        return woy;\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getFullYear = function() {\n        return this.proxy.getFullYear();\n    };\n    \n    /**\n     * Get the GMT offset in hours and minutes (e.g. +06:30)\n     * \n     * @returns {String}\n     */\n     \n    jsDate.prototype.getGmtOffset = function() {\n        // divide the minutes offset by 60\n        var hours = this.proxy.getTimezoneOffset() / 60;\n        // decide if we are ahead of or behind GMT\n        var prefix = hours < 0 ? '+' : '-';\n        // remove the negative sign if any\n        hours = Math.abs(hours);\n        // add the +/- to the padded number of hours to : to the padded minutes\n        return prefix + addZeros(Math.floor(hours), 2) + ':' + addZeros((hours % 1) * 60, 2);\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getHours = function() {\n        return this.proxy.getHours();\n    };\n    \n    /**\n     * Get the current hour on a 12-hour scheme\n     * \n     * @returns {Integer}\n     */\n     \n    jsDate.prototype.getHours12  = function() {\n        var hours = this.proxy.getHours();\n        return hours > 12 ? hours - 12 : (hours == 0 ? 12 : hours);\n    };\n    \n    \n    jsDate.prototype.getIsoWeek = function() {\n        var d = this.proxy;\n        var woy = this.getWeekOfYear();\n        var dow1_1 = (new Date('' + d.getFullYear() + '/1/1')).getDay();\n        // First week is 01 and not 00 as in the case of %U and %W,\n        // so we add 1 to the final result except if day 1 of the year\n        // is a Monday (then %W returns 01).\n        // We also need to subtract 1 if the day 1 of the year is \n        // Friday-Sunday, so the resulting equation becomes:\n        var idow = woy + (dow1_1 > 4 || dow1_1 <= 1 ? 0 : 1);\n        if(idow == 53 && (new Date('' + d.getFullYear() + '/12/31')).getDay() < 4)\n        {\n            idow = 1;\n        }\n        else if(idow === 0)\n        {\n            d = new jsDate(new Date('' + (d.getFullYear()-1) + '/12/31'));\n            idow = d.getIsoWeek();\n        }\n        d = null;\n        return idow;\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getMilliseconds = function() {\n        return this.proxy.getMilliseconds();\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getMinutes = function() {\n        return this.proxy.getMinutes();\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getMonth = function() {\n        return this.proxy.getMonth();\n    };\n    \n    /**\n     * Get the name of the current month\n     * \n     * @returns {String}\n     */\n     \n    jsDate.prototype.getMonthName = function() {\n        return jsDate.regional[this.locale][\"monthNames\"][this.proxy.getMonth()];\n    };\n    \n    /**\n     * Get the number of the current month, 1-12\n     * \n     * @returns {Integer}\n     */\n     \n    jsDate.prototype.getMonthNumber = function() {\n        return this.proxy.getMonth() + 1;\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getSeconds = function() {\n        return this.proxy.getSeconds();\n    };\n    \n    /**\n     * Return a proper two-digit year integer\n     * \n     * @returns {Integer}\n     */\n     \n    jsDate.prototype.getShortYear = function() {\n        return this.proxy.getYear() % 100;\n    };\n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getTime = function() {\n        return this.proxy.getTime();\n    };\n    \n    /**\n     * Get the timezone abbreviation\n     *\n     * @returns {String} Abbreviation for the timezone\n     */\n    jsDate.prototype.getTimezoneAbbr = function() {\n        return this.proxy.toString().replace(/^.*\\(([^)]+)\\)$/, '$1'); \n    };\n    \n    /**\n     * Get the browser-reported name for the current timezone (e.g. MDT, Mountain Daylight Time)\n     * \n     * @returns {String}\n     */\n    jsDate.prototype.getTimezoneName = function() {\n        var match = /(?:\\((.+)\\)$| ([A-Z]{3}) )/.exec(this.toString());\n        return match[1] || match[2] || 'GMT' + this.getGmtOffset();\n    }; \n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getTimezoneOffset = function() {\n        return this.proxy.getTimezoneOffset();\n    };\n    \n    \n    /**\n     * Get the week number of the given year, starting with the first Monday as the first week\n     * @returns {Integer} Week number (13 for the 13th week of the year).\n     */\n    jsDate.prototype.getWeekOfYear = function() {\n        var doy = this.getDayOfYear();\n        var rdow = 7 - this.getDayOfWeek();\n        var woy = parseInt((doy+rdow)/7, 10);\n        return woy;\n    };\n    \n    /**\n     * Get the current date as a Unix timestamp\n     * \n     * @returns {Integer}\n     */\n     \n    jsDate.prototype.getUnix = function() {\n        return Math.round(this.proxy.getTime() / 1000, 0);\n    }; \n    \n    /**\n     * Implements Date functionality\n     */\n    jsDate.prototype.getYear = function() {\n        return this.proxy.getYear();\n    };\n    \n    /**\n     * Return a date one day ahead (or any other unit)\n     * \n     * @param {String} unit Optional, year | month | day | week | hour | minute | second | millisecond\n     * @returns {jsDate}\n     */\n     \n    jsDate.prototype.next = function(unit) {\n        unit = unit || 'day';\n        return this.clone().add(1, unit);\n    };\n    \n    /**\n     * Set the jsDate instance to a new date.\n     *\n     * @param  {String | Number | Array | Date Object | jsDate Object | Options Object} arguments Optional arguments, \n     * either a parsable date/time string,\n     * a JavaScript timestamp, an array of numbers of form [year, month, day, hours, minutes, seconds, milliseconds],\n     * a Date object, jsDate Object or an options object of form {syntax: \"perl\", date:some Date} where all options are optional.\n     */\n    jsDate.prototype.set = function() {\n        switch ( arguments.length ) {\n            case 0:\n                this.proxy = new Date();\n                break;\n            case 1:\n                // other objects either won't have a _type property or,\n                // if they do, it shouldn't be set to \"jsDate\", so\n                // assume it is an options argument.\n                if (get_type(arguments[0]) == \"[object Object]\" && arguments[0]._type != \"jsDate\") {\n                    var opts = this.options = arguments[0];\n                    this.syntax = opts.syntax || this.syntax;\n                    this.defaultCentury = opts.defaultCentury || this.defaultCentury;\n                    this.proxy = jsDate.createDate(opts.date);\n                }\n                else {\n                    this.proxy = jsDate.createDate(arguments[0]);\n                }\n                break;\n            default:\n                var a = [];\n                for ( var i=0; i<arguments.length; i++ ) {\n                    a.push(arguments[i]);\n                }\n                // this should be the current date/time\n                this.proxy = new Date();\n                this.proxy.setFullYear.apply( this.proxy, a.slice(0,3) );\n                if ( a.slice(3).length ) {\n                    this.proxy.setHours.apply( this.proxy, a.slice(3) );\n                }\n                break;\n        }\n        return this;\n    };\n    \n    /**\n     * Sets the day of the month for a specified date according to local time.\n     * @param {Integer} dayValue An integer from 1 to 31, representing the day of the month. \n     */\n    jsDate.prototype.setDate = function(n) {\n        this.proxy.setDate(n);\n        return this;\n    };\n    \n    /**\n     * Sets the full year for a specified date according to local time.\n     * @param {Integer} yearValue The numeric value of the year, for example, 1995.  \n     * @param {Integer} monthValue Optional, between 0 and 11 representing the months January through December.  \n     * @param {Integer} dayValue Optional, between 1 and 31 representing the day of the month. If you specify the dayValue parameter, you must also specify the monthValue. \n     */\n    jsDate.prototype.setFullYear = function() {\n        this.proxy.setFullYear.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Sets the hours for a specified date according to local time.\n     * \n     * @param {Integer} hoursValue An integer between 0 and 23, representing the hour.  \n     * @param {Integer} minutesValue Optional, An integer between 0 and 59, representing the minutes.  \n     * @param {Integer} secondsValue Optional, An integer between 0 and 59, representing the seconds. \n     * If you specify the secondsValue parameter, you must also specify the minutesValue.  \n     * @param {Integer} msValue Optional, A number between 0 and 999, representing the milliseconds. \n     * If you specify the msValue parameter, you must also specify the minutesValue and secondsValue. \n     */\n    jsDate.prototype.setHours = function() {\n        this.proxy.setHours.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setMilliseconds = function(n) {\n        this.proxy.setMilliseconds(n);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setMinutes = function() {\n        this.proxy.setMinutes.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setMonth = function() {\n        this.proxy.setMonth.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setSeconds = function() {\n        this.proxy.setSeconds.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setTime = function(n) {\n        this.proxy.setTime(n);\n        return this;\n    };\n    \n    /**\n     * Implements Date functionality\n     */ \n    jsDate.prototype.setYear = function() {\n        this.proxy.setYear.apply(this.proxy, arguments);\n        return this;\n    };\n    \n    /**\n     * Provide a formatted string representation of this date.\n     * \n     * @param {String} formatString A format string.  \n     * See: {@link jsDate.formats}.\n     * @returns {String} Date String.\n     */\n            \n    jsDate.prototype.strftime = function(formatString) {\n        formatString = formatString || this.formatString || jsDate.regional[this.locale]['formatString'];\n        return jsDate.strftime(this, formatString, this.syntax);\n    };\n        \n    /**\n     * Return a String representation of this jsDate object.\n     * @returns {String} Date string.\n     */\n    \n    jsDate.prototype.toString = function() {\n        return this.proxy.toString();\n    };\n        \n    /**\n     * Convert the current date to an 8-digit integer (%Y%m%d)\n     * \n     * @returns {Integer}\n     */\n     \n    jsDate.prototype.toYmdInt = function() {\n        return (this.proxy.getFullYear() * 10000) + (this.getMonthNumber() * 100) + this.proxy.getDate();\n    };\n    \n    /**\n     * @namespace Holds localizations for month/day names.\n     * <p>jsDate attempts to detect locale when loaded and defaults to 'en'.\n     * If a localization is detected which is not available, jsDate defaults to 'en'.\n     * Additional localizations can be added after jsDate loads.  After adding a localization,\n     * call the jsDate.regional.getLocale() method.  Currently, en, fr and de are defined.</p>\n     * \n     * <p>Localizations must be an object and have the following properties defined:  monthNames, monthNamesShort, dayNames, dayNamesShort and Localizations are added like:</p>\n     * <pre class=\"code\">\n     * jsDate.regional['en'] = {\n     * monthNames      : 'January February March April May June July August September October November December'.split(' '),\n     * monthNamesShort : 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' '),\n     * dayNames        : 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' '),\n     * dayNamesShort   : 'Sun Mon Tue Wed Thu Fri Sat'.split(' ')\n     * };\n     * </pre>\n     * <p>After adding localizations, call <code>jsDate.regional.getLocale();</code> to update the locale setting with the\n     * new localizations.</p>\n     */\n     \n    jsDate.regional = {\n        'en': {\n            monthNames: ['January','February','March','April','May','June','July','August','September','October','November','December'],\n            monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'fr': {\n            monthNames: ['Janvier','Février','Mars','Avril','Mai','Juin','Juillet','Août','Septembre','Octobre','Novembre','Décembre'],\n            monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun','Jul','Aoû','Sep','Oct','Nov','Déc'],\n            dayNames: ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi'],\n            dayNamesShort: ['Dim','Lun','Mar','Mer','Jeu','Ven','Sam'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'de': {\n            monthNames: ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'],\n            monthNamesShort: ['Jan','Feb','Mär','Apr','Mai','Jun','Jul','Aug','Sep','Okt','Nov','Dez'],\n            dayNames: ['Sonntag','Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag'],\n            dayNamesShort: ['So','Mo','Di','Mi','Do','Fr','Sa'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'es': {\n            monthNames: ['Enero','Febrero','Marzo','Abril','Mayo','Junio', 'Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'],\n            monthNamesShort: ['Ene','Feb','Mar','Abr','May','Jun', 'Jul','Ago','Sep','Oct','Nov','Dic'],\n            dayNames: ['Domingo','Lunes','Martes','Mi&eacute;rcoles','Jueves','Viernes','S&aacute;bado'],\n            dayNamesShort: ['Dom','Lun','Mar','Mi&eacute;','Juv','Vie','S&aacute;b'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'ru': {\n            monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\n            monthNamesShort: ['Янв','Фев','Мар','Апр','Май','Июн','Июл','Авг','Сен','Окт','Ноя','Дек'],\n            dayNames: ['воскресенье','понедельник','вторник','среда','четверг','пятница','суббота'],\n            dayNamesShort: ['вск','пнд','втр','срд','чтв','птн','сбт'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'ar': {\n            monthNames: ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'آذار', 'حزيران','تموز', 'آب', 'أيلول',   'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n            monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'],\n            dayNames: ['السبت', 'الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة'],\n            dayNamesShort: ['سبت', 'أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'pt': {\n            monthNames: ['Janeiro','Fevereiro','Mar&ccedil;o','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],\n            monthNamesShort: ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'],\n            dayNames: ['Domingo','Segunda-feira','Ter&ccedil;a-feira','Quarta-feira','Quinta-feira','Sexta-feira','S&aacute;bado'],\n            dayNamesShort: ['Dom','Seg','Ter','Qua','Qui','Sex','S&aacute;b'],\n            formatString: '%Y-%m-%d %H:%M:%S'   \n        },\n        \n        'pt-BR': {\n            monthNames: ['Janeiro','Fevereiro','Mar&ccedil;o','Abril','Maio','Junho', 'Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],\n            monthNamesShort: ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'],\n            dayNames: ['Domingo','Segunda-feira','Ter&ccedil;a-feira','Quarta-feira','Quinta-feira','Sexta-feira','S&aacute;bado'],\n            dayNamesShort: ['Dom','Seg','Ter','Qua','Qui','Sex','S&aacute;b'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n        \n        'pl': {\n            monthNames: ['Styczeń','Luty','Marzec','Kwiecień','Maj','Czerwiec','Lipiec','Sierpień','Wrzesień','Październik','Listopad','Grudzień'],\n            monthNamesShort: ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze','Lip', 'Sie', 'Wrz', 'Paź', 'Lis', 'Gru'],\n            dayNames: ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'],\n            dayNamesShort: ['Ni', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'Sb'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n\n        'nl': {\n            monthNames: ['Januari','Februari','Maart','April','Mei','Juni','July','Augustus','September','Oktober','November','December'],\n            monthNamesShort: ['Jan','Feb','Mar','Apr','Mei','Jun','Jul','Aug','Sep','Okt','Nov','Dec'],\n            dayNames:','['Zondag','Maandag','Dinsdag','Woensdag','Donderdag','Vrijdag','Zaterdag'],\n            dayNamesShort: ['Zo','Ma','Di','Wo','Do','Vr','Za'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n\n        'sv': {\n            monthNames: ['januari','februari','mars','april','maj','juni','juli','augusti','september','oktober','november','december'],\n            monthNamesShort: ['jan','feb','mar','apr','maj','jun','jul','aug','sep','okt','nov','dec'],\n            dayNames: ['söndag','måndag','tisdag','onsdag','torsdag','fredag','lördag'],\n            dayNamesShort: ['sön','mån','tis','ons','tor','fre','lör'],\n            formatString: '%Y-%m-%d %H:%M:%S'\n        },\n\n        'it': {\n            monthNames: ['Gennaio','Febbraio','Marzo','Aprile','Maggio','Giugno','Luglio','Agosto','Settembre','Ottobre','Novembre','Dicembre'],\n            monthNamesShort: ['Gen','Feb','Mar','Apr','Mag','Giu','Lug','Ago','Set','Ott','Nov','Dic'],\n            dayNames: ['Domenica','Lunedi','Martedi','Mercoledi','Giovedi','Venerdi','Sabato'],\n            dayNamesShort: ['Dom','Lun','Mar','Mer','Gio','Ven','Sab'],\n            formatString: '%d-%m-%Y %H:%M:%S'\n        }\n    \n    };\n    \n    // Set english variants to 'en'\n    jsDate.regional['en-US'] = jsDate.regional['en-GB'] = jsDate.regional['en'];\n    \n    /**\n     * Try to determine the users locale based on the lang attribute of the html page.  Defaults to 'en'\n     * if it cannot figure out a locale of if the locale does not have a localization defined.\n     * @returns {String} locale\n     */\n     \n    jsDate.regional.getLocale = function () {\n        var l = jsDate.config.defaultLocale;\n        \n        if ( document && document.getElementsByTagName('html') && document.getElementsByTagName('html')[0].lang ) {\n            l = document.getElementsByTagName('html')[0].lang;\n            if (!jsDate.regional.hasOwnProperty(l)) {\n                l = jsDate.config.defaultLocale;\n            }\n        }\n        \n        return l;\n    };\n    \n    // ms in day\n    var day = 24 * 60 * 60 * 1000;\n    \n    // padd a number with zeros\n    var addZeros = function(num, digits) {\n        num = String(num);\n        var i = digits - num.length;\n        var s = String(Math.pow(10, i)).slice(1);\n        return s.concat(num);\n    };\n\n    // representations used for calculating differences between dates.\n    // This borrows heavily from Ken Snyder's work.\n    var multipliers = {\n        millisecond: 1,\n        second: 1000,\n        minute: 60 * 1000,\n        hour: 60 * 60 * 1000,\n        day: day,\n        week: 7 * day,\n        month: {\n            // add a number of months\n            add: function(d, number) {\n                // add any years needed (increments of 12)\n                multipliers.year.add(d, Math[number > 0 ? 'floor' : 'ceil'](number / 12));\n                // ensure that we properly wrap betwen December and January\n                // 11 % 12 = 11\n                // 12 % 12 = 0\n                var prevMonth = d.getMonth() + (number % 12);\n                if (prevMonth == 12) {\n                    prevMonth = 0;\n                    d.setYear(d.getFullYear() + 1);\n                } else if (prevMonth == -1) {\n                    prevMonth = 11;\n                    d.setYear(d.getFullYear() - 1);\n                }\n                d.setMonth(prevMonth);\n            },\n            // get the number of months between two Date objects (decimal to the nearest day)\n            diff: function(d1, d2) {\n                // get the number of years\n                var diffYears = d1.getFullYear() - d2.getFullYear();\n                // get the number of remaining months\n                var diffMonths = d1.getMonth() - d2.getMonth() + (diffYears * 12);\n                // get the number of remaining days\n                var diffDays = d1.getDate() - d2.getDate();\n                // return the month difference with the days difference as a decimal\n                return diffMonths + (diffDays / 30);\n            }\n        },\n        year: {\n            // add a number of years\n            add: function(d, number) {\n                d.setYear(d.getFullYear() + Math[number > 0 ? 'floor' : 'ceil'](number));\n            },\n            // get the number of years between two Date objects (decimal to the nearest day)\n            diff: function(d1, d2) {\n                return multipliers.month.diff(d1, d2) / 12;\n            }\n        }        \n    };\n    //\n    // Alias each multiplier with an 's' to allow 'year' and 'years' for example.\n    // This comes from Ken Snyders work.\n    //\n    for (var unit in multipliers) {\n        if (unit.substring(unit.length - 1) != 's') { // IE will iterate newly added properties :|\n            multipliers[unit + 's'] = multipliers[unit];\n        }\n    }\n    \n    //\n    // take a jsDate instance and a format code and return the formatted value.\n    // This is a somewhat modified version of Ken Snyder's method.\n    //\n    var format = function(d, code, syntax) {\n        // if shorcut codes are used, recursively expand those.\n        if (jsDate.formats[syntax][\"shortcuts\"][code]) {\n            return jsDate.strftime(d, jsDate.formats[syntax][\"shortcuts\"][code], syntax);\n        } else {\n            // get the format code function and addZeros() argument\n            var getter = (jsDate.formats[syntax][\"codes\"][code] || '').split('.');\n            var nbr = d['get' + getter[0]] ? d['get' + getter[0]]() : '';\n            if (getter[1]) {\n                nbr = addZeros(nbr, getter[1]);\n            }\n            return nbr;\n        }       \n    };\n    \n    /**\n     * @static\n     * Static function for convert a date to a string according to a given format.  Also acts as namespace for strftime format codes.\n     * <p>strftime formatting can be accomplished without creating a jsDate object by calling jsDate.strftime():</p>\n     * <pre class=\"code\">\n     * var formattedDate = jsDate.strftime('Feb 8, 2006 8:48:32', '%Y-%m-%d %H:%M:%S');\n     * </pre>\n     * @param {String | Number | Array | jsDate&nbsp;Object | Date&nbsp;Object} date A parsable date string, JavaScript time stamp, Array of form [year, month, day, hours, minutes, seconds, milliseconds], jsDate Object or Date object.\n     * @param {String} formatString String with embedded date formatting codes.  \n     * See: {@link jsDate.formats}. \n     * @param {String} syntax Optional syntax to use [default perl].\n     * @param {String} locale Optional locale to use.\n     * @returns {String} Formatted representation of the date.\n    */\n    //\n    // Logic as implemented here is very similar to Ken Snyder's Date Instance Methods.\n    //\n    jsDate.strftime = function(d, formatString, syntax, locale) {\n        var syn = 'perl';\n        var loc = jsDate.regional.getLocale();\n        \n        // check if syntax and locale are available or reversed\n        if (syntax && jsDate.formats.hasOwnProperty(syntax)) {\n            syn = syntax;\n        }\n        else if (syntax && jsDate.regional.hasOwnProperty(syntax)) {\n            loc = syntax;\n        }\n        \n        if (locale && jsDate.formats.hasOwnProperty(locale)) {\n            syn = locale;\n        }\n        else if (locale && jsDate.regional.hasOwnProperty(locale)) {\n            loc = locale;\n        }\n        \n        if (get_type(d) != \"[object Object]\" || d._type != \"jsDate\") {\n            d = new jsDate(d);\n            d.locale = loc;\n        }\n        if (!formatString) {\n            formatString = d.formatString || jsDate.regional[loc]['formatString'];\n        }\n        // default the format string to year-month-day\n        var source = formatString || '%Y-%m-%d', \n            result = '', \n            match;\n        // replace each format code\n        while (source.length > 0) {\n            if (match = source.match(jsDate.formats[syn].codes.matcher)) {\n                result += source.slice(0, match.index);\n                result += (match[1] || '') + format(d, match[2], syn);\n                source = source.slice(match.index + match[0].length);\n            } else {\n                result += source;\n                source = '';\n            }\n        }\n        return result;\n    };\n    \n    /**\n     * @namespace\n     * Namespace to hold format codes and format shortcuts.  \"perl\" and \"php\" format codes \n     * and shortcuts are defined by default.  Additional codes and shortcuts can be\n     * added like:\n     * \n     * <pre class=\"code\">\n     * jsDate.formats[\"perl\"] = {\n     *     \"codes\": {\n     *         matcher: /someregex/,\n     *         Y: \"fullYear\",  // name of \"get\" method without the \"get\",\n     *         ...,            // more codes\n     *     },\n     *     \"shortcuts\": {\n     *         F: '%Y-%m-%d',\n     *         ...,            // more shortcuts\n     *     }\n     * };\n     * </pre>\n     * \n     * <p>Additionally, ISO and SQL shortcuts are defined and can be accesses via:\n     * <code>jsDate.formats.ISO</code> and <code>jsDate.formats.SQL</code>\n     */\n    \n    jsDate.formats = {\n        ISO:'%Y-%m-%dT%H:%M:%S.%N%G',\n        SQL:'%Y-%m-%d %H:%M:%S'\n    };\n    \n    /**\n     * Perl format codes and shortcuts for strftime.\n     * \n     * A hash (object) of codes where each code must be an array where the first member is \n     * the name of a Date.prototype or jsDate.prototype function to call\n     * and optionally a second member indicating the number to pass to addZeros()\n     * \n     * <p>The following format codes are defined:</p>\n     * \n     * <pre class=\"code\">\n     * Code    Result                    Description\n     * == Years ==           \n     * %Y      2008                      Four-digit year\n     * %y      08                        Two-digit year\n     * \n     * == Months ==          \n     * %m      09                        Two-digit month\n     * %#m     9                         One or two-digit month\n     * %B      September                 Full month name\n     * %b      Sep                       Abbreviated month name\n     * \n     * == Days ==            \n     * %d      05                        Two-digit day of month\n     * %#d     5                         One or two-digit day of month\n     * %e      5                         One or two-digit day of month\n     * %A      Sunday                    Full name of the day of the week\n     * %a      Sun                       Abbreviated name of the day of the week\n     * %w      0                         Number of the day of the week (0 = Sunday, 6 = Saturday)\n     * \n     * == Hours ==           \n     * %H      23                        Hours in 24-hour format (two digits)\n     * %#H     3                         Hours in 24-hour integer format (one or two digits)\n     * %I      11                        Hours in 12-hour format (two digits)\n     * %#I     3                         Hours in 12-hour integer format (one or two digits)\n     * %p      PM                        AM or PM\n     * \n     * == Minutes ==         \n     * %M      09                        Minutes (two digits)\n     * %#M     9                         Minutes (one or two digits)\n     * \n     * == Seconds ==         \n     * %S      02                        Seconds (two digits)\n     * %#S     2                         Seconds (one or two digits)\n     * %s      1206567625723             Unix timestamp (Seconds past 1970-01-01 00:00:00)\n     * \n     * == Milliseconds ==    \n     * %N      008                       Milliseconds (three digits)\n     * %#N     8                         Milliseconds (one to three digits)\n     * \n     * == Timezone ==        \n     * %O      360                       difference in minutes between local time and GMT\n     * %Z      Mountain Standard Time    Name of timezone as reported by browser\n     * %G      06:00                     Hours and minutes between GMT\n     * \n     * == Shortcuts ==       \n     * %F      2008-03-26                %Y-%m-%d\n     * %T      05:06:30                  %H:%M:%S\n     * %X      05:06:30                  %H:%M:%S\n     * %x      03/26/08                  %m/%d/%y\n     * %D      03/26/08                  %m/%d/%y\n     * %#c     Wed Mar 26 15:31:00 2008  %a %b %e %H:%M:%S %Y\n     * %v      3-Sep-2008                %e-%b-%Y\n     * %R      15:31                     %H:%M\n     * %r      03:31:00 PM               %I:%M:%S %p\n     * \n     * == Characters ==      \n     * %n      \\n                        Newline\n     * %t      \\t                        Tab\n     * %%      %                         Percent Symbol\n     * </pre>\n     * \n     * <p>Formatting shortcuts that will be translated into their longer version.\n     * Be sure that format shortcuts do not refer to themselves: this will cause an infinite loop.</p>\n     * \n     * <p>Format codes and format shortcuts can be redefined after the jsDate\n     * module is imported.</p>\n     * \n     * <p>Note that if you redefine the whole hash (object), you must supply a \"matcher\"\n     * regex for the parser.  The default matcher is:</p>\n     * \n     * <code>/()%(#?(%|[a-z]))/i</code>\n     * \n     * <p>which corresponds to the Perl syntax used by default.</p>\n     * \n     * <p>By customizing the matcher and format codes, nearly any strftime functionality is possible.</p>\n     */\n     \n    jsDate.formats.perl = {\n        codes: {\n            //\n            // 2-part regex matcher for format codes\n            //\n            // first match must be the character before the code (to account for escaping)\n            // second match must be the format code character(s)\n            //\n            matcher: /()%(#?(%|[a-z]))/i,\n            // year\n            Y: 'FullYear',\n            y: 'ShortYear.2',\n            // month\n            m: 'MonthNumber.2',\n            '#m': 'MonthNumber',\n            B: 'MonthName',\n            b: 'AbbrMonthName',\n            // day\n            d: 'Date.2',\n            '#d': 'Date',\n            e: 'Date',\n            A: 'DayName',\n            a: 'AbbrDayName',\n            w: 'Day',\n            // hours\n            H: 'Hours.2',\n            '#H': 'Hours',\n            I: 'Hours12.2',\n            '#I': 'Hours12',\n            p: 'AMPM',\n            // minutes\n            M: 'Minutes.2',\n            '#M': 'Minutes',\n            // seconds\n            S: 'Seconds.2',\n            '#S': 'Seconds',\n            s: 'Unix',\n            // milliseconds\n            N: 'Milliseconds.3',\n            '#N': 'Milliseconds',\n            // timezone\n            O: 'TimezoneOffset',\n            Z: 'TimezoneName',\n            G: 'GmtOffset'  \n        },\n        \n        shortcuts: {\n            // date\n            F: '%Y-%m-%d',\n            // time\n            T: '%H:%M:%S',\n            X: '%H:%M:%S',\n            // local format date\n            x: '%m/%d/%y',\n            D: '%m/%d/%y',\n            // local format extended\n            '#c': '%a %b %e %H:%M:%S %Y',\n            // local format short\n            v: '%e-%b-%Y',\n            R: '%H:%M',\n            r: '%I:%M:%S %p',\n            // tab and newline\n            t: '\\t',\n            n: '\\n',\n            '%': '%'\n        }\n    };\n    \n    /**\n     * PHP format codes and shortcuts for strftime.\n     * \n     * A hash (object) of codes where each code must be an array where the first member is \n     * the name of a Date.prototype or jsDate.prototype function to call\n     * and optionally a second member indicating the number to pass to addZeros()\n     * \n     * <p>The following format codes are defined:</p>\n     * \n     * <pre class=\"code\">\n     * Code    Result                    Description\n     * === Days ===        \n     * %a      Sun through Sat           An abbreviated textual representation of the day\n     * %A      Sunday - Saturday         A full textual representation of the day\n     * %d      01 to 31                  Two-digit day of the month (with leading zeros)\n     * %e      1 to 31                   Day of the month, with a space preceding single digits.\n     * %j      001 to 366                Day of the year, 3 digits with leading zeros\n     * %u      1 - 7 (Mon - Sun)         ISO-8601 numeric representation of the day of the week\n     * %w      0 - 6 (Sun - Sat)         Numeric representation of the day of the week\n     *                                  \n     * === Week ===                     \n     * %U      13                        Full Week number, starting with the first Sunday as the first week\n     * %V      01 through 53             ISO-8601:1988 week number, starting with the first week of the year \n     *                                   with at least 4 weekdays, with Monday being the start of the week\n     * %W      46                        A numeric representation of the week of the year, \n     *                                   starting with the first Monday as the first week\n     * === Month ===                    \n     * %b      Jan through Dec           Abbreviated month name, based on the locale\n     * %B      January - December        Full month name, based on the locale\n     * %h      Jan through Dec           Abbreviated month name, based on the locale (an alias of %b)\n     * %m      01 - 12 (Jan - Dec)       Two digit representation of the month\n     * \n     * === Year ===                     \n     * %C      19                        Two digit century (year/100, truncated to an integer)\n     * %y      09 for 2009               Two digit year\n     * %Y      2038                      Four digit year\n     * \n     * === Time ===                     \n     * %H      00 through 23             Two digit representation of the hour in 24-hour format\n     * %I      01 through 12             Two digit representation of the hour in 12-hour format\n     * %l      1 through 12              Hour in 12-hour format, with a space preceeding single digits\n     * %M      00 through 59             Two digit representation of the minute\n     * %p      AM/PM                     UPPER-CASE 'AM' or 'PM' based on the given time\n     * %P      am/pm                     lower-case 'am' or 'pm' based on the given time\n     * %r      09:34:17 PM               Same as %I:%M:%S %p\n     * %R      00:35                     Same as %H:%M\n     * %S      00 through 59             Two digit representation of the second\n     * %T      21:34:17                  Same as %H:%M:%S\n     * %X      03:59:16                  Preferred time representation based on locale, without the date\n     * %z      -0500 or EST              Either the time zone offset from UTC or the abbreviation\n     * %Z      -0500 or EST              The time zone offset/abbreviation option NOT given by %z\n     * \n     * === Time and Date ===            \n     * %D      02/05/09                  Same as %m/%d/%y\n     * %F      2009-02-05                Same as %Y-%m-%d (commonly used in database datestamps)\n     * %s      305815200                 Unix Epoch Time timestamp (same as the time() function)\n     * %x      02/05/09                  Preferred date representation, without the time\n     * \n     * === Miscellaneous ===            \n     * %n        ---                     A newline character (\\n)\n     * %t        ---                     A Tab character (\\t)\n     * %%        ---                     A literal percentage character (%)\n     * </pre>\n     */\n \n    jsDate.formats.php = {\n        codes: {\n            //\n            // 2-part regex matcher for format codes\n            //\n            // first match must be the character before the code (to account for escaping)\n            // second match must be the format code character(s)\n            //\n            matcher: /()%((%|[a-z]))/i,\n            // day\n            a: 'AbbrDayName',\n            A: 'DayName',\n            d: 'Date.2',\n            e: 'Date',\n            j: 'DayOfYear.3',\n            u: 'DayOfWeek',\n            w: 'Day',\n            // week\n            U: 'FullWeekOfYear.2',\n            V: 'IsoWeek.2',\n            W: 'WeekOfYear.2',\n            // month\n            b: 'AbbrMonthName',\n            B: 'MonthName',\n            m: 'MonthNumber.2',\n            h: 'AbbrMonthName',\n            // year\n            C: 'Century.2',\n            y: 'ShortYear.2',\n            Y: 'FullYear',\n            // time\n            H: 'Hours.2',\n            I: 'Hours12.2',\n            l: 'Hours12',\n            p: 'AMPM',\n            P: 'AmPm',\n            M: 'Minutes.2',\n            S: 'Seconds.2',\n            s: 'Unix',\n            O: 'TimezoneOffset',\n            z: 'GmtOffset',\n            Z: 'TimezoneAbbr'\n        },\n        \n        shortcuts: {\n            D: '%m/%d/%y',\n            F: '%Y-%m-%d',\n            T: '%H:%M:%S',\n            X: '%H:%M:%S',\n            x: '%m/%d/%y',\n            R: '%H:%M',\n            r: '%I:%M:%S %p',\n            t: '\\t',\n            n: '\\n',\n            '%': '%'\n        }\n    };   \n    //\n    // Conceptually, the logic implemented here is similar to Ken Snyder's Date Instance Methods.\n    // I use his idea of a set of parsers which can be regular expressions or functions,\n    // iterating through those, and then seeing if Date.parse() will create a date.\n    // The parser expressions and functions are a little different and some bugs have been\n    // worked out.  Also, a lot of \"pre-parsing\" is done to fix implementation\n    // variations of Date.parse() between browsers.\n    //\n    jsDate.createDate = function(date) {\n        // if passing in multiple arguments, try Date constructor\n        if (date == null) {\n            return new Date();\n        }\n        // If the passed value is already a date object, return it\n        if (date instanceof Date) {\n            return date;\n        }\n        // if (typeof date == 'number') return new Date(date * 1000);\n        // If the passed value is an integer, interpret it as a javascript timestamp\n        if (typeof date == 'number') {\n            return new Date(date);\n        }\n        \n        // Before passing strings into Date.parse(), have to normalize them for certain conditions.\n        // If strings are not formatted staccording to the EcmaScript spec, results from Date parse will be implementation dependent.  \n        // \n        // For example: \n        //  * FF and Opera assume 2 digit dates are pre y2k, Chome assumes <50 is pre y2k, 50+ is 21st century.  \n        //  * Chrome will correctly parse '1984-1-25' into localtime, FF and Opera will not parse.\n        //  * Both FF, Chrome and Opera will parse '1984/1/25' into localtime.\n        \n        // remove leading and trailing spaces\n        var parsable = String(date).replace(/^\\s*(.+)\\s*$/g, '$1');\n        \n        // replace dahses (-) with slashes (/) in dates like n[nnn]/n[n]/n[nnn]\n        parsable = parsable.replace(/^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,4})/, \"$1/$2/$3\");\n        \n        /////////\n        // Need to check for '15-Dec-09' also.\n        // FF will not parse, but Chrome will.\n        // Chrome will set date to 2009 as well.\n        /////////\n        \n        // first check for 'dd-mmm-yyyy' or 'dd/mmm/yyyy' like '15-Dec-2010'\n        parsable = parsable.replace(/^(3[01]|[0-2]?\\d)[-\\/]([a-z]{3,})[-\\/](\\d{4})/i, \"$1 $2 $3\");\n        \n        // Now check for 'dd-mmm-yy' or 'dd/mmm/yy' and normalize years to default century.\n        var match = parsable.match(/^(3[01]|[0-2]?\\d)[-\\/]([a-z]{3,})[-\\/](\\d{2})\\D*/i);\n        if (match && match.length > 3) {\n            var m3 = parseFloat(match[3]);\n            var ny = jsDate.config.defaultCentury + m3;\n            ny = String(ny);\n            \n            // now replace 2 digit year with 4 digit year\n            parsable = parsable.replace(/^(3[01]|[0-2]?\\d)[-\\/]([a-z]{3,})[-\\/](\\d{2})\\D*/i, match[1] +' '+ match[2] +' '+ ny);\n            \n        }\n        \n        // Check for '1/19/70 8:14PM'\n        // where starts with mm/dd/yy or yy/mm/dd and have something after\n        // Check if 1st postiion is greater than 31, assume it is year.\n        // Assme all 2 digit years are 1900's.\n        // Finally, change them into US style mm/dd/yyyy representations.\n        match = parsable.match(/^([0-9]{1,2})[-\\/]([0-9]{1,2})[-\\/]([0-9]{1,2})[^0-9]/);\n        \n        function h1(parsable, match) {\n            var m1 = parseFloat(match[1]);\n            var m2 = parseFloat(match[2]);\n            var m3 = parseFloat(match[3]);\n            var cent = jsDate.config.defaultCentury;\n            var ny, nd, nm, str;\n            \n            if (m1 > 31) { // first number is a year\n                nd = m3;\n                nm = m2;\n                ny = cent + m1;\n            }\n            \n            else { // last number is the year\n                nd = m2;\n                nm = m1;\n                ny = cent + m3;\n            }\n            \n            str = nm+'/'+nd+'/'+ny;\n            \n            // now replace 2 digit year with 4 digit year\n            return  parsable.replace(/^([0-9]{1,2})[-\\/]([0-9]{1,2})[-\\/]([0-9]{1,2})/, str);\n        \n        }\n        \n        if (match && match.length > 3) {\n            parsable = h1(parsable, match);\n        }\n        \n        // Now check for '1/19/70' with nothing after and do as above\n        var match = parsable.match(/^([0-9]{1,2})[-\\/]([0-9]{1,2})[-\\/]([0-9]{1,2})$/);\n        \n        if (match && match.length > 3) {\n            parsable = h1(parsable, match);\n        }\n                \n        \n        var i = 0;\n        var length = jsDate.matchers.length;\n        var pattern,\n            ms,\n            current = parsable,\n            obj;\n        while (i < length) {\n            ms = Date.parse(current);\n            if (!isNaN(ms)) {\n                return new Date(ms);\n            }\n            pattern = jsDate.matchers[i];\n            if (typeof pattern == 'function') {\n                obj = pattern.call(jsDate, current);\n                if (obj instanceof Date) {\n                    return obj;\n                }\n            } else {\n                current = parsable.replace(pattern[0], pattern[1]);\n            }\n            i++;\n        }\n        return NaN;\n    };\n    \n\n    /**\n     * @static\n     * Handy static utility function to return the number of days in a given month.\n     * @param {Integer} year Year\n     * @param {Integer} month Month (1-12)\n     * @returns {Integer} Number of days in the month.\n    */\n    //\n    // handy utility method Borrowed right from Ken Snyder's Date Instance Mehtods.\n    // \n    jsDate.daysInMonth = function(year, month) {\n        if (month == 2) {\n            return new Date(year, 1, 29).getDate() == 29 ? 29 : 28;\n        }\n        return [undefined,31,undefined,31,30,31,30,31,31,30,31,30,31][month];\n    };\n\n\n    //\n    // An Array of regular expressions or functions that will attempt to match the date string.\n    // Functions are called with scope of a jsDate instance.\n    //\n    jsDate.matchers = [\n        // convert dd.mmm.yyyy to mm/dd/yyyy (world date to US date).\n        [/(3[01]|[0-2]\\d)\\s*\\.\\s*(1[0-2]|0\\d)\\s*\\.\\s*([1-9]\\d{3})/, '$2/$1/$3'],\n        // convert yyyy-mm-dd to mm/dd/yyyy (ISO date to US date).\n        [/([1-9]\\d{3})\\s*-\\s*(1[0-2]|0\\d)\\s*-\\s*(3[01]|[0-2]\\d)/, '$2/$3/$1'],\n        // Handle 12 hour or 24 hour time with milliseconds am/pm and optional date part.\n        function(str) { \n            var match = str.match(/^(?:(.+)\\s+)?([012]?\\d)(?:\\s*\\:\\s*(\\d\\d))?(?:\\s*\\:\\s*(\\d\\d(\\.\\d*)?))?\\s*(am|pm)?\\s*$/i);\n            //                   opt. date      hour       opt. minute     opt. second       opt. msec   opt. am or pm\n            if (match) {\n                if (match[1]) {\n                    var d = this.createDate(match[1]);\n                    if (isNaN(d)) {\n                        return;\n                    }\n                } else {\n                    var d = new Date();\n                    d.setMilliseconds(0);\n                }\n                var hour = parseFloat(match[2]);\n                if (match[6]) {\n                    hour = match[6].toLowerCase() == 'am' ? (hour == 12 ? 0 : hour) : (hour == 12 ? 12 : hour + 12);\n                }\n                d.setHours(hour, parseInt(match[3] || 0, 10), parseInt(match[4] || 0, 10), ((parseFloat(match[5] || 0)) || 0)*1000);\n                return d;\n            }\n            else {\n                return str;\n            }\n        },\n        // Handle ISO timestamp with time zone.\n        function(str) {\n            var match = str.match(/^(?:(.+))[T|\\s+]([012]\\d)(?:\\:(\\d\\d))(?:\\:(\\d\\d))(?:\\.\\d+)([\\+\\-]\\d\\d\\:\\d\\d)$/i);\n            if (match) {\n                if (match[1]) {\n                    var d = this.createDate(match[1]);\n                    if (isNaN(d)) {\n                        return;\n                    }\n                } else {\n                    var d = new Date();\n                    d.setMilliseconds(0);\n                }\n                var hour = parseFloat(match[2]);\n                d.setHours(hour, parseInt(match[3], 10), parseInt(match[4], 10), parseFloat(match[5])*1000);\n                return d;\n            }\n            else {\n                    return str;\n            }\n        },\n        // Try to match ambiguous strings like 12/8/22.\n        // Use FF date assumption that 2 digit years are 20th century (i.e. 1900's).\n        // This may be redundant with pre processing of date already performed.\n        function(str) {\n            var match = str.match(/^([0-3]?\\d)\\s*[-\\/.\\s]{1}\\s*([a-zA-Z]{3,9})\\s*[-\\/.\\s]{1}\\s*([0-3]?\\d)$/);\n            if (match) {\n                var d = new Date();\n                var cent = jsDate.config.defaultCentury;\n                var m1 = parseFloat(match[1]);\n                var m3 = parseFloat(match[3]);\n                var ny, nd, nm;\n                if (m1 > 31) { // first number is a year\n                    nd = m3;\n                    ny = cent + m1;\n                }\n                \n                else { // last number is the year\n                    nd = m1;\n                    ny = cent + m3;\n                }\n                \n                var nm = inArray(match[2], jsDate.regional[jsDate.regional.getLocale()][\"monthNamesShort\"]);\n                \n                if (nm == -1) {\n                    nm = inArray(match[2], jsDate.regional[jsDate.regional.getLocale()][\"monthNames\"]);\n                }\n            \n                d.setFullYear(ny, nm, nd);\n                d.setHours(0,0,0,0);\n                return d;\n            }\n            \n            else {\n                return str;\n            }\n        }      \n    ];\n\n    //\n    // I think John Reisig published this method on his blog, ejohn.\n    //\n    function inArray( elem, array ) {\n        if ( array.indexOf ) {\n            return array.indexOf( elem );\n        }\n\n        for ( var i = 0, length = array.length; i < length; i++ ) {\n            if ( array[ i ] === elem ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n    \n    //\n    // Thanks to Kangax, Christian Sciberras and Stack Overflow for this method.\n    //\n    function get_type(thing){\n        if(thing===null) return \"[object Null]\"; // special case\n        return Object.prototype.toString.call(thing);\n    }\n    \n    $.jsDate = jsDate;\n\n      \n    /**\n     * JavaScript printf/sprintf functions.\n     * \n     * This code has been adapted from the publicly available sprintf methods\n     * by Ash Searle. His original header follows:\n     *\n     *     This code is unrestricted: you are free to use it however you like.\n     *     \n     *     The functions should work as expected, performing left or right alignment,\n     *     truncating strings, outputting numbers with a required precision etc.\n     *\n     *     For complex cases, these functions follow the Perl implementations of\n     *     (s)printf, allowing arguments to be passed out-of-order, and to set the\n     *     precision or length of the output based on arguments instead of fixed\n     *     numbers.\n     *\n     *     See http://perldoc.perl.org/functions/sprintf.html for more information.\n     *\n     *     Implemented:\n     *     - zero and space-padding\n     *     - right and left-alignment,\n     *     - base X prefix (binary, octal and hex)\n     *     - positive number prefix\n     *     - (minimum) width\n     *     - precision / truncation / maximum width\n     *     - out of order arguments\n     *\n     *     Not implemented (yet):\n     *     - vector flag\n     *     - size (bytes, words, long-words etc.)\n     *     \n     *     Will not implement:\n     *     - %n or %p (no pass-by-reference in JavaScript)\n     *\n     *     @version 2007.04.27\n     *     @author Ash Searle \n     * \n     * You can see the original work and comments on his blog:\n     * http://hexmen.com/blog/2007/03/printf-sprintf/\n     * http://hexmen.com/js/sprintf.js\n     */\n     \n     /**\n      * @Modifications 2009.05.26\n      * @author Chris Leonello\n      * \n      * Added %p %P specifier\n      * Acts like %g or %G but will not add more significant digits to the output than present in the input.\n      * Example:\n      * Format: '%.3p', Input: 0.012, Output: 0.012\n      * Format: '%.3g', Input: 0.012, Output: 0.0120\n      * Format: '%.4p', Input: 12.0, Output: 12.0\n      * Format: '%.4g', Input: 12.0, Output: 12.00\n      * Format: '%.4p', Input: 4.321e-5, Output: 4.321e-5\n      * Format: '%.4g', Input: 4.321e-5, Output: 4.3210e-5\n      * \n      * Example:\n      * >>> $.jqplot.sprintf('%.2f, %d', 23.3452, 43.23)\n      * \"23.35, 43\"\n      * >>> $.jqplot.sprintf(\"no value: %n, decimal with thousands separator: %'d\", 23.3452, 433524)\n      * \"no value: , decimal with thousands separator: 433,524\"\n      */\n    $.jqplot.sprintf = function() {\n        function pad(str, len, chr, leftJustify) {\n            var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);\n            return leftJustify ? str + padding : padding + str;\n\n        }\n\n        function thousand_separate(value) {\n            var value_str = new String(value);\n            for (var i=10; i>0; i--) {\n                if (value_str == (value_str = value_str.replace(/^(\\d+)(\\d{3})/, \"$1\"+$.jqplot.sprintf.thousandsSeparator+\"$2\"))) break;\n            }\n            return value_str; \n        }\n\n        function justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace) {\n            var diff = minWidth - value.length;\n            if (diff > 0) {\n                var spchar = ' ';\n                if (htmlSpace) { spchar = '&nbsp;'; }\n                if (leftJustify || !zeroPad) {\n                    value = pad(value, minWidth, spchar, leftJustify);\n                } else {\n                    value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n                }\n            }\n            return value;\n        }\n\n        function formatBaseX(value, base, prefix, leftJustify, minWidth, precision, zeroPad, htmlSpace) {\n            // Note: casts negative numbers to positive ones\n            var number = value >>> 0;\n            prefix = prefix && number && {'2': '0b', '8': '0', '16': '0x'}[base] || '';\n            value = prefix + pad(number.toString(base), precision || 0, '0', false);\n            return justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace);\n        }\n\n        function formatString(value, leftJustify, minWidth, precision, zeroPad, htmlSpace) {\n            if (precision != null) {\n                value = value.slice(0, precision);\n            }\n            return justify(value, '', leftJustify, minWidth, zeroPad, htmlSpace);\n        }\n\n        var a = arguments, i = 0, format = a[i++];\n\n        return format.replace($.jqplot.sprintf.regex, function(substring, valueIndex, flags, minWidth, _, precision, type) {\n            if (substring == '%%') { return '%'; }\n\n            // parse flags\n            var leftJustify = false, positivePrefix = '', zeroPad = false, prefixBaseX = false, htmlSpace = false, thousandSeparation = false;\n            for (var j = 0; flags && j < flags.length; j++) switch (flags.charAt(j)) {\n                case ' ': positivePrefix = ' '; break;\n                case '+': positivePrefix = '+'; break;\n                case '-': leftJustify = true; break;\n                case '0': zeroPad = true; break;\n                case '#': prefixBaseX = true; break;\n                case '&': htmlSpace = true; break;\n                case '\\'': thousandSeparation = true; break;\n            }\n\n            // parameters may be null, undefined, empty-string or real valued\n            // we want to ignore null, undefined and empty-string values\n\n            if (!minWidth) {\n                minWidth = 0;\n            } \n            else if (minWidth == '*') {\n                minWidth = +a[i++];\n            } \n            else if (minWidth.charAt(0) == '*') {\n                minWidth = +a[minWidth.slice(1, -1)];\n            } \n            else {\n                minWidth = +minWidth;\n            }\n\n            // Note: undocumented perl feature:\n            if (minWidth < 0) {\n                minWidth = -minWidth;\n                leftJustify = true;\n            }\n\n            if (!isFinite(minWidth)) {\n                throw new Error('$.jqplot.sprintf: (minimum-)width must be finite');\n            }\n\n            if (!precision) {\n                precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : void(0);\n            } \n            else if (precision == '*') {\n                precision = +a[i++];\n            } \n            else if (precision.charAt(0) == '*') {\n                precision = +a[precision.slice(1, -1)];\n            } \n            else {\n                precision = +precision;\n            }\n\n            // grab value using valueIndex if required?\n            var value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n\n            switch (type) {\n            case 's': {\n                if (value == null) {\n                    return '';\n                }\n                return formatString(String(value), leftJustify, minWidth, precision, zeroPad, htmlSpace);\n            }\n            case 'c': return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad, htmlSpace);\n            case 'b': return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad,htmlSpace);\n            case 'o': return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad, htmlSpace);\n            case 'x': return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad, htmlSpace);\n            case 'X': return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad, htmlSpace).toUpperCase();\n            case 'u': return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad, htmlSpace);\n            case 'i': {\n              var number = parseInt(+value, 10);\n              if (isNaN(number)) {\n                return '';\n              }\n              var prefix = number < 0 ? '-' : positivePrefix;\n              var number_str = thousandSeparation ? thousand_separate(String(Math.abs(number))): String(Math.abs(number));\n              value = prefix + pad(number_str, precision, '0', false);\n              //value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n              return justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace);\n                  }\n            case 'd': {\n              var number = Math.round(+value);\n              if (isNaN(number)) {\n                return '';\n              }\n              var prefix = number < 0 ? '-' : positivePrefix;\n              var number_str = thousandSeparation ? thousand_separate(String(Math.abs(number))): String(Math.abs(number));\n              value = prefix + pad(number_str, precision, '0', false);\n              return justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace);\n                  }\n            case 'e':\n            case 'E':\n            case 'f':\n            case 'F':\n            case 'g':\n            case 'G':\n                      {\n                      var number = +value;\n                      if (isNaN(number)) {\n                          return '';\n                      }\n                      var prefix = number < 0 ? '-' : positivePrefix;\n                      var method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n                      var textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n                      var number_str = Math.abs(number)[method](precision);\n                      \n                      // Apply the decimal mark properly by splitting the number by the\n                      //   decimalMark, applying thousands separator, and then placing it\n                      //   back in.\n                      var parts = number_str.toString().split('.');\n                      parts[0] = thousandSeparation ? thousand_separate(parts[0]) : parts[0];\n                      number_str = parts.join($.jqplot.sprintf.decimalMark);\n                      \n                      value = prefix + number_str;\n                      var justified = justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace)[textTransform]();\n                      \n                      return justified;\n                  }\n            case 'p':\n            case 'P':\n            {\n                // make sure number is a number\n                var number = +value;\n                if (isNaN(number)) {\n                    return '';\n                }\n                var prefix = number < 0 ? '-' : positivePrefix;\n\n                var parts = String(Number(Math.abs(number)).toExponential()).split(/e|E/);\n                var sd = (parts[0].indexOf('.') != -1) ? parts[0].length - 1 : String(number).length;\n                var zeros = (parts[1] < 0) ? -parts[1] - 1 : 0;\n                \n                if (Math.abs(number) < 1) {\n                    if (sd + zeros  <= precision) {\n                        value = prefix + Math.abs(number).toPrecision(sd);\n                    }\n                    else {\n                        if (sd  <= precision - 1) {\n                            value = prefix + Math.abs(number).toExponential(sd-1);\n                        }\n                        else {\n                            value = prefix + Math.abs(number).toExponential(precision-1);\n                        }\n                    }\n                }\n                else {\n                    var prec = (sd <= precision) ? sd : precision;\n                    value = prefix + Math.abs(number).toPrecision(prec);\n                }\n                var textTransform = ['toString', 'toUpperCase']['pP'.indexOf(type) % 2];\n                return justify(value, prefix, leftJustify, minWidth, zeroPad, htmlSpace)[textTransform]();\n            }\n            case 'n': return '';\n            default: return substring;\n            }\n        });\n    };\n\n    $.jqplot.sprintf.thousandsSeparator = ',';\n    // Specifies the decimal mark for floating point values. By default a period '.'\n    // is used. If you change this value to for example a comma be sure to also\n    // change the thousands separator or else this won't work since a simple String\n    // replace is used (replacing all periods with the mark specified here).\n    $.jqplot.sprintf.decimalMark = '.';\n    \n    $.jqplot.sprintf.regex = /%%|%(\\d+\\$)?([-+#0&\\' ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([nAscboxXuidfegpEGP])/g;\n\n    $.jqplot.getSignificantFigures = function(number) {\n        var parts = String(Number(Math.abs(number)).toExponential()).split(/e|E/);\n        // total significant digits\n        var sd = (parts[0].indexOf('.') != -1) ? parts[0].length - 1 : parts[0].length;\n        var zeros = (parts[1] < 0) ? -parts[1] - 1 : 0;\n        // exponent\n        var expn = parseInt(parts[1], 10);\n        // digits to the left of the decimal place\n        var dleft = (expn + 1 > 0) ? expn + 1 : 0;\n        // digits to the right of the decimal place\n        var dright = (sd <= dleft) ? 0 : sd - expn - 1;\n        return {significantDigits: sd, digitsLeft: dleft, digitsRight: dright, zeros: zeros, exponent: expn} ;\n    };\n\n    $.jqplot.getPrecision = function(number) {\n        return $.jqplot.getSignificantFigures(number).digitsRight;\n    };\n\n  \n\n\n    var backCompat = $.uiBackCompat !== false;\n\n    $.jqplot.effects = {\n        effect: {}\n    };\n\n    // prefix used for storing data on .data()\n    var dataSpace = \"jqplot.storage.\";\n\n    /******************************************************************************/\n    /*********************************** EFFECTS **********************************/\n    /******************************************************************************/\n\n    $.extend( $.jqplot.effects, {\n        version: \"1.9pre\",\n\n        // Saves a set of properties in a data storage\n        save: function( element, set ) {\n            for( var i=0; i < set.length; i++ ) {\n                if ( set[ i ] !== null ) {\n                    element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );\n                }\n            }\n        },\n\n        // Restores a set of previously saved properties from a data storage\n        restore: function( element, set ) {\n            for( var i=0; i < set.length; i++ ) {\n                if ( set[ i ] !== null ) {\n                    element.css( set[ i ], element.data( dataSpace + set[ i ] ) );\n                }\n            }\n        },\n\n        setMode: function( el, mode ) {\n            if (mode === \"toggle\") {\n                mode = el.is( \":hidden\" ) ? \"show\" : \"hide\";\n            }\n            return mode;\n        },\n\n        // Wraps the element around a wrapper that copies position properties\n        createWrapper: function( element ) {\n\n            // if the element is already wrapped, return it\n            if ( element.parent().is( \".ui-effects-wrapper\" )) {\n                return element.parent();\n            }\n\n            // wrap the element\n            var props = {\n                    width: element.outerWidth(true),\n                    height: element.outerHeight(true),\n                    \"float\": element.css( \"float\" )\n                },\n                wrapper = $( \"<div></div>\" )\n                    .addClass( \"ui-effects-wrapper\" )\n                    .css({\n                        fontSize: \"100%\",\n                        background: \"transparent\",\n                        border: \"none\",\n                        margin: 0,\n                        padding: 0\n                    }),\n                // Store the size in case width/height are defined in % - Fixes #5245\n                size = {\n                    width: element.width(),\n                    height: element.height()\n                },\n                active = document.activeElement;\n\n            element.wrap( wrapper );\n\n            // Fixes #7595 - Elements lose focus when wrapped.\n            if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {\n                $( active ).focus();\n            }\n\n            wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually loose the reference to the wrapped element\n\n            // transfer positioning properties to the wrapper\n            if ( element.css( \"position\" ) === \"static\" ) {\n                wrapper.css({ position: \"relative\" });\n                element.css({ position: \"relative\" });\n            } else {\n                $.extend( props, {\n                    position: element.css( \"position\" ),\n                    zIndex: element.css( \"z-index\" )\n                });\n                $.each([ \"top\", \"left\", \"bottom\", \"right\" ], function(i, pos) {\n                    props[ pos ] = element.css( pos );\n                    if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {\n                        props[ pos ] = \"auto\";\n                    }\n                });\n                element.css({\n                    position: \"relative\",\n                    top: 0,\n                    left: 0,\n                    right: \"auto\",\n                    bottom: \"auto\"\n                });\n            }\n            element.css(size);\n\n            return wrapper.css( props ).show();\n        },\n\n        removeWrapper: function( element ) {\n            var active = document.activeElement;\n\n            if ( element.parent().is( \".ui-effects-wrapper\" ) ) {\n                element.parent().replaceWith( element );\n\n                // Fixes #7595 - Elements lose focus when wrapped.\n                if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {\n                    $( active ).focus();\n                }\n            }\n\n\n            return element;\n        }\n    });\n\n    // return an effect options object for the given parameters:\n    function _normalizeArguments( effect, options, speed, callback ) {\n\n        // short path for passing an effect options object:\n        if ( $.isPlainObject( effect ) ) {\n            return effect;\n        }\n\n        // convert to an object\n        effect = { effect: effect };\n\n        // catch (effect)\n        if ( options === undefined ) {\n            options = {};\n        }\n\n        // catch (effect, callback)\n        if ( $.isFunction( options ) ) {\n            callback = options;\n            speed = null;\n            options = {};\n        }\n\n        // catch (effect, speed, ?)\n        if ( $.type( options ) === \"number\" || $.fx.speeds[ options ]) {\n            callback = speed;\n            speed = options;\n            options = {};\n        }\n\n        // catch (effect, options, callback)\n        if ( $.isFunction( speed ) ) {\n            callback = speed;\n            speed = null;\n        }\n\n        // add options to effect\n        if ( options ) {\n            $.extend( effect, options );\n        }\n\n        speed = speed || options.duration;\n        effect.duration = $.fx.off ? 0 : typeof speed === \"number\"\n            ? speed : speed in $.fx.speeds ? $.fx.speeds[ speed ] : $.fx.speeds._default;\n\n        effect.complete = callback || options.complete;\n\n        return effect;\n    }\n\n    function standardSpeed( speed ) {\n        // valid standard speeds\n        if ( !speed || typeof speed === \"number\" || $.fx.speeds[ speed ] ) {\n            return true;\n        }\n\n        // invalid strings - treat as \"normal\" speed\n        if ( typeof speed === \"string\" && !$.jqplot.effects.effect[ speed ] ) {\n            // TODO: remove in 2.0 (#7115)\n            if ( backCompat && $.jqplot.effects[ speed ] ) {\n                return false;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    $.fn.extend({\n        jqplotEffect: function( effect, options, speed, callback ) {\n            var args = _normalizeArguments.apply( this, arguments ),\n                mode = args.mode,\n                queue = args.queue,\n                effectMethod = $.jqplot.effects.effect[ args.effect ],\n\n                // DEPRECATED: remove in 2.0 (#7115)\n                oldEffectMethod = !effectMethod && backCompat && $.jqplot.effects[ args.effect ];\n\n            if ( $.fx.off || !( effectMethod || oldEffectMethod ) ) {\n                // delegate to the original method (e.g., .show()) if possible\n                if ( mode ) {\n                    return this[ mode ]( args.duration, args.complete );\n                } else {\n                    return this.each( function() {\n                        if ( args.complete ) {\n                            args.complete.call( this );\n                        }\n                    });\n                }\n            }\n\n            function run( next ) {\n                var elem = $( this ),\n                    complete = args.complete,\n                    mode = args.mode;\n\n                function done() {\n                    if ( $.isFunction( complete ) ) {\n                        complete.call( elem[0] );\n                    }\n                    if ( $.isFunction( next ) ) {\n                        next();\n                    }\n                }\n\n                // if the element is hiddden and mode is hide,\n                // or element is visible and mode is show\n                if ( elem.is( \":hidden\" ) ? mode === \"hide\" : mode === \"show\" ) {\n                    done();\n                } else {\n                    effectMethod.call( elem[0], args, done );\n                }\n            }\n\n            // TODO: remove this check in 2.0, effectMethod will always be true\n            if ( effectMethod ) {\n                return queue === false ? this.each( run ) : this.queue( queue || \"fx\", run );\n            } else {\n                // DEPRECATED: remove in 2.0 (#7115)\n                return oldEffectMethod.call(this, {\n                    options: args,\n                    duration: args.duration,\n                    callback: args.complete,\n                    mode: args.mode\n                });\n            }\n        }\n    });\n\n\n\n\n    var rvertical = /up|down|vertical/,\n        rpositivemotion = /up|left|vertical|horizontal/;\n\n    $.jqplot.effects.effect.blind = function( o, done ) {\n        // Create element\n        var el = $( this ),\n            props = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\n            mode = $.jqplot.effects.setMode( el, o.mode || \"hide\" ),\n            direction = o.direction || \"up\",\n            vertical = rvertical.test( direction ),\n            ref = vertical ? \"height\" : \"width\",\n            ref2 = vertical ? \"top\" : \"left\",\n            motion = rpositivemotion.test( direction ),\n            animation = {},\n            show = mode === \"show\",\n            wrapper, distance, top;\n\n        // // if already wrapped, the wrapper's properties are my property. #6245\n        if ( el.parent().is( \".ui-effects-wrapper\" ) ) {\n            $.jqplot.effects.save( el.parent(), props );\n        } else {\n            $.jqplot.effects.save( el, props );\n        }\n        el.show();\n        top = parseInt(el.css('top'), 10);\n        wrapper = $.jqplot.effects.createWrapper( el ).css({\n            overflow: \"hidden\"\n        });\n\n        distance = vertical ? wrapper[ ref ]() + top : wrapper[ ref ]();\n\n        animation[ ref ] = show ? String(distance) : '0';\n        if ( !motion ) {\n            el\n                .css( vertical ? \"bottom\" : \"right\", 0 )\n                .css( vertical ? \"top\" : \"left\", \"\" )\n                .css({ position: \"absolute\" });\n            animation[ ref2 ] = show ? '0' : String(distance);\n        }\n\n        // // start at 0 if we are showing\n        if ( show ) {\n            wrapper.css( ref, 0 );\n            if ( ! motion ) {\n                wrapper.css( ref2, distance );\n            }\n        }\n\n        // // Animate\n        wrapper.animate( animation, {\n            duration: o.duration,\n            easing: o.easing,\n            queue: false,\n            complete: function() {\n                if ( mode === \"hide\" ) {\n                    el.hide();\n                }\n                $.jqplot.effects.restore( el, props );\n                $.jqplot.effects.removeWrapper( el );\n                done();\n            }\n        });\n\n    };\n\n})(jQuery);\n","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    \n    // Class: $.jqplot.BarRenderer\n    // A plugin renderer for jqPlot to draw a bar plot.\n    // Draws series as a line.\n    \n    $.jqplot.BarRenderer = function(){\n        $.jqplot.LineRenderer.call(this);\n    };\n    \n    $.jqplot.BarRenderer.prototype = new $.jqplot.LineRenderer();\n    $.jqplot.BarRenderer.prototype.constructor = $.jqplot.BarRenderer;\n    \n    // called with scope of series.\n    $.jqplot.BarRenderer.prototype.init = function(options, plot) {\n        // Group: Properties\n        //\n        // prop: barPadding\n        // Number of pixels between adjacent bars at the same axis value.\n        this.barPadding = 8;\n        // prop: barMargin\n        // Number of pixels between groups of bars at adjacent axis values.\n        this.barMargin = 10;\n        // prop: barDirection\n        // 'vertical' = up and down bars, 'horizontal' = side to side bars\n        this.barDirection = 'vertical';\n        // prop: barWidth\n        // Width of the bar in pixels (auto by devaul).  null = calculated automatically.\n        this.barWidth = null;\n        // prop: shadowOffset\n        // offset of the shadow from the slice and offset of \n        // each succesive stroke of the shadow from the last.\n        this.shadowOffset = 2;\n        // prop: shadowDepth\n        // number of strokes to apply to the shadow, \n        // each stroke offset shadowOffset from the last.\n        this.shadowDepth = 5;\n        // prop: shadowAlpha\n        // transparency of the shadow (0 = transparent, 1 = opaque)\n        this.shadowAlpha = 0.08;\n        // prop: waterfall\n        // true to enable waterfall plot.\n        this.waterfall = false;\n        // prop: groups\n        // group bars into this many groups\n        this.groups = 1;\n        // prop: varyBarColor\n        // true to color each bar of a series separately rather than\n        // have every bar of a given series the same color.\n        // If used for non-stacked multiple series bar plots, user should\n        // specify a separate 'seriesColors' array for each series.\n        // Otherwise, each series will set their bars to the same color array.\n        // This option has no Effect for stacked bar charts and is disabled.\n        this.varyBarColor = false;\n        // prop: highlightMouseOver\n        // True to highlight slice when moused over.\n        // This must be false to enable highlightMouseDown to highlight when clicking on a slice.\n        this.highlightMouseOver = true;\n        // prop: highlightMouseDown\n        // True to highlight when a mouse button is pressed over a slice.\n        // This will be disabled if highlightMouseOver is true.\n        this.highlightMouseDown = false;\n        // prop: highlightColors\n        // an array of colors to use when highlighting a bar.\n        this.highlightColors = [];\n        // prop: transposedData\n        // NOT IMPLEMENTED YET.  True if this is a horizontal bar plot and \n        // x and y values are \"transposed\".  Tranposed, or \"swapped\", data is \n        // required prior to rev. 894 builds of jqPlot with horizontal bars. \n        // Allows backward compatability of bar renderer horizontal bars with \n        // old style data sets.\n        this.transposedData = true;\n        this.renderer.animation = {\n            show: false,\n            direction: 'down',\n            speed: 3000,\n            _supported: true\n        };\n        this._type = 'bar';\n        \n        // if user has passed in highlightMouseDown option and not set highlightMouseOver, disable highlightMouseOver\n        if (options.highlightMouseDown && options.highlightMouseOver == null) {\n            options.highlightMouseOver = false;\n        }\n        \n        //////\n        // This is probably wrong here.\n        // After going back and forth on whether renderer should be the thing\n        // or extend the thing, it seems that it it best if it is a property\n        // on the thing.  This should be something that is commonized \n        // among series renderers in the future.\n        //////\n        $.extend(true, this, options);\n\n        // really should probably do this\n        $.extend(true, this.renderer, options);\n        // fill is still needed to properly draw the legend.\n        // bars have to be filled.\n        this.fill = true;\n\n        // if horizontal bar and animating, reset the default direction\n        if (this.barDirection === 'horizontal' && this.rendererOptions.animation && this.rendererOptions.animation.direction == null) {\n            this.renderer.animation.direction = 'left';\n        }\n        \n        if (this.waterfall) {\n            this.fillToZero = false;\n            this.disableStack = true;\n        }\n        \n        if (this.barDirection == 'vertical' ) {\n            this._primaryAxis = '_xaxis';\n            this._stackAxis = 'y';\n            this.fillAxis = 'y';\n        }\n        else {\n            this._primaryAxis = '_yaxis';\n            this._stackAxis = 'x';\n            this.fillAxis = 'x';\n        }\n        // index of the currenty highlighted point, if any\n        this._highlightedPoint = null;\n        // total number of values for all bar series, total number of bar series, and position of this series\n        this._plotSeriesInfo = null;\n        // Array of actual data colors used for each data point.\n        this._dataColors = [];\n        this._barPoints = [];\n        \n        // set the shape renderer options\n        var opts = {lineJoin:'miter', lineCap:'round', fill:true, isarc:false, strokeStyle:this.color, fillStyle:this.color, closePath:this.fill};\n        this.renderer.shapeRenderer.init(opts);\n        // set the shadow renderer options\n        var sopts = {lineJoin:'miter', lineCap:'round', fill:true, isarc:false, angle:this.shadowAngle, offset:this.shadowOffset, alpha:this.shadowAlpha, depth:this.shadowDepth, closePath:this.fill};\n        this.renderer.shadowRenderer.init(sopts);\n        \n        plot.postInitHooks.addOnce(postInit);\n        plot.postDrawHooks.addOnce(postPlotDraw);\n        plot.eventListenerHooks.addOnce('jqplotMouseMove', handleMove);\n        plot.eventListenerHooks.addOnce('jqplotMouseDown', handleMouseDown);\n        plot.eventListenerHooks.addOnce('jqplotMouseUp', handleMouseUp);\n        plot.eventListenerHooks.addOnce('jqplotClick', handleClick);\n        plot.eventListenerHooks.addOnce('jqplotRightClick', handleRightClick); \n    };\n    \n    // called with scope of series\n    function barPreInit(target, data, seriesDefaults, options) {\n        if (this.rendererOptions.barDirection == 'horizontal') {\n            this._stackAxis = 'x';\n            this._primaryAxis = '_yaxis';\n        }\n        if (this.rendererOptions.waterfall == true) {\n            this._data = $.extend(true, [], this.data);\n            var sum = 0;\n            var pos = (!this.rendererOptions.barDirection || this.rendererOptions.barDirection === 'vertical' || this.transposedData === false) ? 1 : 0;\n            for(var i=0; i<this.data.length; i++) {\n                sum += this.data[i][pos];\n                if (i>0) {\n                    this.data[i][pos] += this.data[i-1][pos];\n                }\n            }\n            this.data[this.data.length] = (pos == 1) ? [this.data.length+1, sum] : [sum, this.data.length+1];\n            this._data[this._data.length] = (pos == 1) ? [this._data.length+1, sum] : [sum, this._data.length+1];\n        }\n        if (this.rendererOptions.groups > 1) {\n            this.breakOnNull = true;\n            var l = this.data.length;\n            var skip = parseInt(l/this.rendererOptions.groups, 10);\n            var count = 0;\n            for (var i=skip; i<l; i+=skip) {\n                this.data.splice(i+count, 0, [null, null]);\n                this._plotData.splice(i+count, 0, [null, null]);\n                this._stackData.splice(i+count, 0, [null, null]);\n                count++;\n            }\n            for (i=0; i<this.data.length; i++) {\n                if (this._primaryAxis == '_xaxis') {\n                    this.data[i][0] = i+1;\n                    this._plotData[i][0] = i+1;\n                    this._stackData[i][0] = i+1;\n                }\n                else {\n                    this.data[i][1] = i+1;\n                    this._plotData[i][1] = i+1;\n                    this._stackData[i][1] = i+1;\n                }\n            }\n        }\n    }\n    \n    $.jqplot.preSeriesInitHooks.push(barPreInit);\n    \n    // needs to be called with scope of series, not renderer.\n    $.jqplot.BarRenderer.prototype.calcSeriesNumbers = function() {\n        var nvals = 0;\n        var nseries = 0;\n        var paxis = this[this._primaryAxis];\n        var s, series, pos;\n        // loop through all series on this axis\n        for (var i=0; i < paxis._series.length; i++) {\n            series = paxis._series[i];\n            if (series === this) {\n                pos = i;\n            }\n            // is the series rendered as a bar?\n            if (series.renderer.constructor == $.jqplot.BarRenderer) {\n                // gridData may not be computed yet, use data length insted\n                nvals += series.data.length;\n                nseries += 1;\n            }\n        }\n        // return total number of values for all bar series, total number of bar series, and position of this series\n        return [nvals, nseries, pos];\n    };\n\n    $.jqplot.BarRenderer.prototype.setBarWidth = function() {\n        // need to know how many data values we have on the approprate axis and figure it out.\n        var i;\n        var nvals = 0;\n        var nseries = 0;\n        var paxis = this[this._primaryAxis];\n        var s, series, pos;\n        var temp = this._plotSeriesInfo = this.renderer.calcSeriesNumbers.call(this);\n        nvals = temp[0];\n        nseries = temp[1];\n        var nticks = paxis.numberTicks;\n        var nbins = (nticks-1)/2;\n        // so, now we have total number of axis values.\n        if (paxis.name == 'xaxis' || paxis.name == 'x2axis') {\n            if (this._stack) {\n                this.barWidth = (paxis._offsets.max - paxis._offsets.min) / nvals * nseries - this.barMargin;\n            }\n            else {\n                this.barWidth = ((paxis._offsets.max - paxis._offsets.min)/nbins  - this.barPadding * (nseries-1) - this.barMargin*2)/nseries;\n                // this.barWidth = (paxis._offsets.max - paxis._offsets.min) / nvals - this.barPadding - this.barMargin/nseries;\n            }\n        }\n        else {\n            if (this._stack) {\n                this.barWidth = (paxis._offsets.min - paxis._offsets.max) / nvals * nseries - this.barMargin;\n            }\n            else {\n                this.barWidth = ((paxis._offsets.min - paxis._offsets.max)/nbins  - this.barPadding * (nseries-1) - this.barMargin*2)/nseries;\n                // this.barWidth = (paxis._offsets.min - paxis._offsets.max) / nvals - this.barPadding - this.barMargin/nseries;\n            }\n        }\n        return [nvals, nseries];\n    };\n\n    function computeHighlightColors (colors) {\n        var ret = [];\n        for (var i=0; i<colors.length; i++){\n            var rgba = $.jqplot.getColorComponents(colors[i]);\n            var newrgb = [rgba[0], rgba[1], rgba[2]];\n            var sum = newrgb[0] + newrgb[1] + newrgb[2];\n            for (var j=0; j<3; j++) {\n                // when darkening, lowest color component can be is 60.\n                newrgb[j] = (sum > 570) ?  newrgb[j] * 0.8 : newrgb[j] + 0.3 * (255 - newrgb[j]);\n                newrgb[j] = parseInt(newrgb[j], 10);\n            }\n            ret.push('rgb('+newrgb[0]+','+newrgb[1]+','+newrgb[2]+')');\n        }\n        return ret;\n    }\n\n    function getStart(sidx, didx, comp, plot, axis) {\n        // check if sign change\n        var seriesIndex = sidx,\n            prevSeriesIndex = sidx - 1,\n            start,\n            prevVal,\n            aidx = (axis === 'x') ? 0 : 1;\n\n        // is this not the first series?\n        if (seriesIndex > 0) {\n            prevVal = plot.series[prevSeriesIndex]._plotData[didx][aidx];\n\n            // is there a sign change\n            if ((comp * prevVal) < 0) {\n                start = getStart(prevSeriesIndex, didx, comp, plot, axis);\n            }\n\n            // no sign change.\n            else {\n                start = plot.series[prevSeriesIndex].gridData[didx][aidx];\n            }\n\n        }\n\n        // if first series, return value at 0\n        else {\n\n            start = (aidx === 0) ? plot.series[seriesIndex]._xaxis.series_u2p(0) : plot.series[seriesIndex]._yaxis.series_u2p(0);\n        }\n\n        return start;\n    }\n\n    \n    $.jqplot.BarRenderer.prototype.draw = function(ctx, gridData, options, plot) {\n        var i;\n        // Ughhh, have to make a copy of options b/c it may be modified later.\n        var opts = $.extend({}, options);\n        var shadow = (opts.shadow != undefined) ? opts.shadow : this.shadow;\n        var showLine = (opts.showLine != undefined) ? opts.showLine : this.showLine;\n        var fill = (opts.fill != undefined) ? opts.fill : this.fill;\n        var xaxis = this.xaxis;\n        var yaxis = this.yaxis;\n        var xp = this._xaxis.series_u2p;\n        var yp = this._yaxis.series_u2p;\n        var pointx, pointy;\n        // clear out data colors.\n        this._dataColors = [];\n        this._barPoints = [];\n        \n        if (this.barWidth == null || this.rendererOptions.barWidth == null) {//check pull request https://bitbucket.org/cleonello/jqplot/pull-request/61/fix-for-issue-513/diff\n            this.renderer.setBarWidth.call(this);\n        }\n        \n        var temp = this._plotSeriesInfo = this.renderer.calcSeriesNumbers.call(this);\n        var nvals = temp[0];\n        var nseries = temp[1];\n        var pos = temp[2];\n        var points = [];\n        \n        if (this._stack) {\n            this._barNudge = 0;\n        }\n        else {\n            this._barNudge = (-Math.abs(nseries/2 - 0.5) + pos) * (this.barWidth + this.barPadding);\n        }\n        if (showLine) {\n            var negativeColors = new $.jqplot.ColorGenerator(this.negativeSeriesColors);\n            var positiveColors = new $.jqplot.ColorGenerator(this.seriesColors);\n            var negativeColor = negativeColors.get(this.index);\n            if (! this.useNegativeColors) {\n                negativeColor = opts.fillStyle;\n            }\n            var positiveColor = opts.fillStyle;\n            var base;\n            var xstart; \n            var ystart;\n            \n            if (this.barDirection == 'vertical') {\n                for (var i=0; i<gridData.length; i++) {\n                    if (!this._stack && this.data[i][1] == null) {\n                        continue;\n                    }\n                    points = [];\n                    base = gridData[i][0] + this._barNudge;\n                    \n                    // stacked\n                    if (this._stack && this._prevGridData.length) {\n                        ystart = getStart(this.index, i, this._plotData[i][1], plot, 'y');\n                    }\n\n                    // not stacked\n                    else {\n                        if (this.fillToZero) {\n                            ystart = this._yaxis.series_u2p(0);\n                        }\n                        else if (this.waterfall && i > 0 && i < this.gridData.length-1) {\n                            ystart = this.gridData[i-1][1];\n                        }\n                        else if (this.waterfall && i == 0 && i < this.gridData.length-1) {\n                            if (this._yaxis.min <= 0 && this._yaxis.max >= 0) {\n                                ystart = this._yaxis.series_u2p(0);\n                            }\n                            else if (this._yaxis.min > 0) {\n                                ystart = ctx.canvas.height;\n                            }\n                            else {\n                                ystart = 0;\n                            }\n                        }\n                        else if (this.waterfall && i == this.gridData.length - 1) {\n                            if (this._yaxis.min <= 0 && this._yaxis.max >= 0) {\n                                ystart = this._yaxis.series_u2p(0);\n                            }\n                            else if (this._yaxis.min > 0) {\n                                ystart = ctx.canvas.height;\n                            }\n                            else {\n                                ystart = 0;\n                            }\n                        }\n                        else {\n                            ystart = ctx.canvas.height;\n                        }\n                    }\n                    if ((this.fillToZero && this._plotData[i][1] < 0) || (this.waterfall && this._data[i][1] < 0)) {\n                        if (this.varyBarColor && !this._stack) {\n                            if (this.useNegativeColors) {\n                                opts.fillStyle = negativeColors.next();\n                            }\n                            else {\n                                opts.fillStyle = positiveColors.next();\n                            }\n                        }\n                        else {\n                            opts.fillStyle = negativeColor;\n                        }\n                    }\n                    else {\n                        if (this.varyBarColor && !this._stack) {\n                            opts.fillStyle = positiveColors.next();\n                        }\n                        else {\n                            opts.fillStyle = positiveColor;\n                        }\n                    }\n                    \n                    if (!this.fillToZero || this._plotData[i][1] >= 0) { \n                        points.push([base-this.barWidth/2, ystart]);\n                        points.push([base-this.barWidth/2, gridData[i][1]]);\n                        points.push([base+this.barWidth/2, gridData[i][1]]);\n                        points.push([base+this.barWidth/2, ystart]);\n                    }\n                    // for negative bars make sure points are always ordered clockwise\n                    else {              \n                        points.push([base-this.barWidth/2, gridData[i][1]]);\n                        points.push([base-this.barWidth/2, ystart]);\n                        points.push([base+this.barWidth/2, ystart]);\n                        points.push([base+this.barWidth/2, gridData[i][1]]);\n                    }\n                    this._barPoints.push(points);\n                    // now draw the shadows if not stacked.\n                    // for stacked plots, they are predrawn by drawShadow\n                    if (shadow && !this._stack) {\n                        var sopts = $.extend(true, {}, opts);\n                        // need to get rid of fillStyle on shadow.\n                        delete sopts.fillStyle;\n                        this.renderer.shadowRenderer.draw(ctx, points, sopts);\n                    }\n                    var clr = opts.fillStyle || this.color;\n                    this._dataColors.push(clr);\n                    this.renderer.shapeRenderer.draw(ctx, points, opts); \n                }\n            }\n            \n            else if (this.barDirection == 'horizontal'){\n                for (var i=0; i<gridData.length; i++) {\n                    if (!this._stack && this.data[i][0] == null) {\n                        continue;\n                    }\n                    points = [];\n                    base = gridData[i][1] - this._barNudge;\n                    xstart;\n                    \n                    if (this._stack && this._prevGridData.length) {\n                        xstart = getStart(this.index, i, this._plotData[i][0], plot, 'x');\n                    }\n                    // not stacked\n                    else {\n                        if (this.fillToZero) {\n                            xstart = this._xaxis.series_u2p(0);\n                        }\n                        else if (this.waterfall && i > 0 && i < this.gridData.length-1) {\n                            xstart = this.gridData[i-1][0];\n                        }\n                        else if (this.waterfall && i == 0 && i < this.gridData.length-1) {\n                            if (this._xaxis.min <= 0 && this._xaxis.max >= 0) {\n                                xstart = this._xaxis.series_u2p(0);\n                            }\n                            else if (this._xaxis.min > 0) {\n                                xstart = 0;\n                            }\n                            else {\n                                xstart = 0;\n                            }\n                        }\n                        else if (this.waterfall && i == this.gridData.length - 1) {\n                            if (this._xaxis.min <= 0 && this._xaxis.max >= 0) {\n                                xstart = this._xaxis.series_u2p(0);\n                            }\n                            else if (this._xaxis.min > 0) {\n                                xstart = 0;\n                            }\n                            else {\n                                xstart = ctx.canvas.width;\n                            }\n                        }\n                        else {\n                            xstart = 0;\n                        }\n                    }\n                    if ((this.fillToZero && this._plotData[i][0] < 0) || (this.waterfall && this._data[i][0] < 0)) {\n                        if (this.varyBarColor && !this._stack) {\n                            if (this.useNegativeColors) {\n                                opts.fillStyle = negativeColors.next();\n                            }\n                            else {\n                                opts.fillStyle = positiveColors.next();\n                            }\n                        }\n                        else {\n                            opts.fillStyle = negativeColor;\n                        }\n                    }\n                    else {\n                        if (this.varyBarColor && !this._stack) {\n                            opts.fillStyle = positiveColors.next();\n                        }\n                        else {\n                            opts.fillStyle = positiveColor;\n                        }                    \n                    }\n                    \n\n                    if (!this.fillToZero || this._plotData[i][0] >= 0) {\n                        points.push([xstart, base + this.barWidth / 2]);\n                        points.push([xstart, base - this.barWidth / 2]);\n                        points.push([gridData[i][0], base - this.barWidth / 2]);\n                        points.push([gridData[i][0], base + this.barWidth / 2]);\n                    }\n                    else {\n                        points.push([gridData[i][0], base + this.barWidth / 2]);\n                        points.push([gridData[i][0], base - this.barWidth / 2]);\n                        points.push([xstart, base - this.barWidth / 2]);\n                        points.push([xstart, base + this.barWidth / 2]);\n                    }\n\n                    this._barPoints.push(points);\n                    // now draw the shadows if not stacked.\n                    // for stacked plots, they are predrawn by drawShadow\n                    if (shadow && !this._stack) {\n                        var sopts = $.extend(true, {}, opts);\n                        delete sopts.fillStyle;\n                        this.renderer.shadowRenderer.draw(ctx, points, sopts);\n                    }\n                    var clr = opts.fillStyle || this.color;\n                    this._dataColors.push(clr);\n                    this.renderer.shapeRenderer.draw(ctx, points, opts);\n                } \n            }\n        }                \n        \n        if (this.highlightColors.length == 0) {\n            this.highlightColors = $.jqplot.computeHighlightColors(this._dataColors);\n        }\n        \n        else if (typeof(this.highlightColors) == 'string') {\n            var temp = this.highlightColors;\n            this.highlightColors = [];\n            for (var i=0; i<this._dataColors.length; i++) {\n                this.highlightColors.push(temp);\n            }\n        }\n        \n    };\n    \n     \n    // for stacked plots, shadows will be pre drawn by drawShadow.\n    $.jqplot.BarRenderer.prototype.drawShadow = function(ctx, gridData, options, plot) {\n        var i;\n        var opts = (options != undefined) ? options : {};\n        var shadow = (opts.shadow != undefined) ? opts.shadow : this.shadow;\n        var showLine = (opts.showLine != undefined) ? opts.showLine : this.showLine;\n        var fill = (opts.fill != undefined) ? opts.fill : this.fill;\n        var xaxis = this.xaxis;\n        var yaxis = this.yaxis;\n        var xp = this._xaxis.series_u2p;\n        var yp = this._yaxis.series_u2p;\n        var pointx, points, pointy, nvals, nseries, pos;\n        \n        if (this._stack && this.shadow) {\n            if (this.barWidth == null || this.rendererOptions.barWidth == null) {//check pull request https://bitbucket.org/cleonello/jqplot/pull-request/61/fix-for-issue-513/diff) {\n                this.renderer.setBarWidth.call(this);\n            }\n        \n            var temp = this._plotSeriesInfo = this.renderer.calcSeriesNumbers.call(this);\n            nvals = temp[0];\n            nseries = temp[1];\n            pos = temp[2];\n        \n            if (this._stack) {\n                this._barNudge = 0;\n            }\n            else {\n                this._barNudge = (-Math.abs(nseries/2 - 0.5) + pos) * (this.barWidth + this.barPadding);\n            }\n            if (showLine) {\n            \n                if (this.barDirection == 'vertical') {\n                    for (var i=0; i<gridData.length; i++) {\n                        if (this.data[i][1] == null) {\n                            continue;\n                        }\n                        points = [];\n                        var base = gridData[i][0] + this._barNudge;\n                        var ystart;\n                    \n                        if (this._stack && this._prevGridData.length) {\n                            ystart = getStart(this.index, i, this._plotData[i][1], plot, 'y');\n                        }\n                        else {\n                            if (this.fillToZero) {\n                                ystart = this._yaxis.series_u2p(0);\n                            }\n                            else {\n                                ystart = ctx.canvas.height;\n                            }\n                        }\n                    \n                        points.push([base-this.barWidth/2, ystart]);\n                        points.push([base-this.barWidth/2, gridData[i][1]]);\n                        points.push([base+this.barWidth/2, gridData[i][1]]);\n                        points.push([base+this.barWidth/2, ystart]);\n                        this.renderer.shadowRenderer.draw(ctx, points, opts);\n                    }\n                }\n            \n                else if (this.barDirection == 'horizontal'){\n                    for (var i=0; i<gridData.length; i++) {\n                        if (this.data[i][0] == null) {\n                            continue;\n                        }\n                        points = [];\n                        var base = gridData[i][1] - this._barNudge;\n                        var xstart;\n                    \n                        if (this._stack && this._prevGridData.length) {\n                            xstart = getStart(this.index, i, this._plotData[i][0], plot, 'x');\n                        }\n                        else {\n                            if (this.fillToZero) {\n                                xstart = this._xaxis.series_u2p(0);\n                            }\n                            else {\n                                xstart = 0;\n                            }\n                        }\n                    \n                        points.push([xstart, base+this.barWidth/2]);\n                        points.push([gridData[i][0], base+this.barWidth/2]);\n                        points.push([gridData[i][0], base-this.barWidth/2]);\n                        points.push([xstart, base-this.barWidth/2]);\n                        this.renderer.shadowRenderer.draw(ctx, points, opts);\n                    }  \n                }\n            }   \n            \n        }\n    };\n    \n    function postInit(target, data, options) {\n        for (var i=0; i<this.series.length; i++) {\n            if (this.series[i].renderer.constructor == $.jqplot.BarRenderer) {\n                // don't allow mouseover and mousedown at same time.\n                if (this.series[i].highlightMouseOver) {\n                    this.series[i].highlightMouseDown = false;\n                }\n            }\n        }\n    }\n    \n    // called within context of plot\n    // create a canvas which we can draw on.\n    // insert it before the eventCanvas, so eventCanvas will still capture events.\n    function postPlotDraw() {\n        // Memory Leaks patch    \n        if (this.plugins.barRenderer && this.plugins.barRenderer.highlightCanvas) {\n\n            this.plugins.barRenderer.highlightCanvas.resetCanvas();\n            this.plugins.barRenderer.highlightCanvas = null;\n        }\n         \n        this.plugins.barRenderer = {highlightedSeriesIndex:null};\n        this.plugins.barRenderer.highlightCanvas = new $.jqplot.GenericCanvas();\n        \n        this.eventCanvas._elem.before(this.plugins.barRenderer.highlightCanvas.createElement(this._gridPadding, 'jqplot-barRenderer-highlight-canvas', this._plotDimensions, this));\n        this.plugins.barRenderer.highlightCanvas.setContext();\n        this.eventCanvas._elem.bind('mouseleave', {plot:this}, function (ev) { unhighlight(ev.data.plot); });\n    }   \n    \n    function highlight (plot, sidx, pidx, points) {\n        var s = plot.series[sidx];\n        var canvas = plot.plugins.barRenderer.highlightCanvas;\n        canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width, canvas._ctx.canvas.height);\n        s._highlightedPoint = pidx;\n        plot.plugins.barRenderer.highlightedSeriesIndex = sidx;\n        var opts = {fillStyle: s.highlightColors[pidx]};\n        s.renderer.shapeRenderer.draw(canvas._ctx, points, opts);\n        canvas = null;\n    }\n    \n    function unhighlight (plot) {\n        var canvas = plot.plugins.barRenderer.highlightCanvas;\n        canvas._ctx.clearRect(0,0, canvas._ctx.canvas.width, canvas._ctx.canvas.height);\n        for (var i=0; i<plot.series.length; i++) {\n            plot.series[i]._highlightedPoint = null;\n        }\n        plot.plugins.barRenderer.highlightedSeriesIndex = null;\n        plot.target.trigger('jqplotDataUnhighlight');\n        canvas =  null;\n    }\n    \n    \n    function handleMove(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var evt1 = jQuery.Event('jqplotDataMouseOver');\n            evt1.pageX = ev.pageX;\n            evt1.pageY = ev.pageY;\n            plot.target.trigger(evt1, ins);\n            if (plot.series[ins[0]].show && plot.series[ins[0]].highlightMouseOver &&\n                !(ins[0] == plot.plugins.barRenderer.highlightedSeriesIndex && ins[1] == plot.series[ins[0]]._highlightedPoint)) {\n                var evt = jQuery.Event('jqplotDataHighlight');\n                evt.which = ev.which;\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                plot.target.trigger(evt, ins);\n                highlight (plot, neighbor.seriesIndex, neighbor.pointIndex, neighbor.points);\n            }\n        }\n        else if (neighbor == null) {\n            unhighlight (plot);\n        }\n    }\n    \n    function handleMouseDown(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            if (plot.series[ins[0]].highlightMouseDown && !(ins[0] == plot.plugins.barRenderer.highlightedSeriesIndex && ins[1] == plot.series[ins[0]]._highlightedPoint)) {\n                var evt = jQuery.Event('jqplotDataHighlight');\n                evt.which = ev.which;\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                plot.target.trigger(evt, ins);\n                highlight (plot, neighbor.seriesIndex, neighbor.pointIndex, neighbor.points);\n            }\n        }\n        else if (neighbor == null) {\n            unhighlight (plot);\n        }\n    }\n    \n    function handleMouseUp(ev, gridpos, datapos, neighbor, plot) {\n        var idx = plot.plugins.barRenderer.highlightedSeriesIndex;\n        if (idx != null && plot.series[idx].highlightMouseDown) {\n            unhighlight(plot);\n        }\n    }\n    \n    function handleClick(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var evt = jQuery.Event('jqplotDataClick');\n            evt.which = ev.which;\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            plot.target.trigger(evt, ins);\n        }\n    }\n    \n    function handleRightClick(ev, gridpos, datapos, neighbor, plot) {\n        if (neighbor) {\n            var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data];\n            var idx = plot.plugins.barRenderer.highlightedSeriesIndex;\n            if (idx != null && plot.series[idx].highlightMouseDown) {\n                unhighlight(plot);\n            }\n            var evt = jQuery.Event('jqplotDataRightClick');\n            evt.which = ev.which;\n            evt.pageX = ev.pageX;\n            evt.pageY = ev.pageY;\n            plot.target.trigger(evt, ins);\n        }\n    }\n    \n    \n})(jQuery);\n","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    /**\n    * Class: $.jqplot.CanvasAxisLabelRenderer\n    * Renderer to draw axis labels with a canvas element to support advanced\n    * featrues such as rotated text.  This renderer uses a separate rendering engine\n    * to draw the text on the canvas.  Two modes of rendering the text are available.\n    * If the browser has native font support for canvas fonts (currently Mozila 3.5\n    * and Safari 4), you can enable text rendering with the canvas fillText method.\n    * You do so by setting the \"enableFontSupport\" option to true. \n    * \n    * Browsers lacking native font support will have the text drawn on the canvas\n    * using the Hershey font metrics.  Even if the \"enableFontSupport\" option is true\n    * non-supporting browsers will still render with the Hershey font.\n    * \n    */\n    $.jqplot.CanvasAxisLabelRenderer = function(options) {\n        // Group: Properties\n        \n        // prop: angle\n        // angle of text, measured clockwise from x axis.\n        this.angle = 0;\n        // name of the axis associated with this tick\n        this.axis;\n        // prop: show\n        // whether or not to show the tick (mark and label).\n        this.show = true;\n        // prop: showLabel\n        // whether or not to show the label.\n        this.showLabel = true;\n        // prop: label\n        // label for the axis.\n        this.label = '';\n        // prop: fontFamily\n        // CSS spec for the font-family css attribute.\n        // Applies only to browsers supporting native font rendering in the\n        // canvas tag.  Currently Mozilla 3.5 and Safari 4.\n        this.fontFamily = '\"Trebuchet MS\", Arial, Helvetica, sans-serif';\n        // prop: fontSize\n        // CSS spec for font size.\n        this.fontSize = '11pt';\n        // prop: fontWeight\n        // CSS spec for fontWeight:  normal, bold, bolder, lighter or a number 100 - 900\n        this.fontWeight = 'normal';\n        // prop: fontStretch\n        // Multiplier to condense or expand font width.  \n        // Applies only to browsers which don't support canvas native font rendering.\n        this.fontStretch = 1.0;\n        // prop: textColor\n        // css spec for the color attribute.\n        this.textColor = '#666666';\n        // prop: enableFontSupport\n        // true to turn on native canvas font support in Mozilla 3.5+ and Safari 4+.\n        // If true, label will be drawn with canvas tag native support for fonts.\n        // If false, label will be drawn with Hershey font metrics.\n        this.enableFontSupport = true;\n        // prop: pt2px\n        // Point to pixel scaling factor, used for computing height of bounding box\n        // around a label.  The labels text renderer has a default setting of 1.4, which \n        // should be suitable for most fonts.  Leave as null to use default.  If tops of\n        // letters appear clipped, increase this.  If bounding box seems too big, decrease.\n        // This is an issue only with the native font renderering capabilities of Mozilla\n        // 3.5 and Safari 4 since they do not provide a method to determine the font height.\n        this.pt2px = null;\n        \n        this._elem;\n        this._ctx;\n        this._plotWidth;\n        this._plotHeight;\n        this._plotDimensions = {height:null, width:null};\n        \n        $.extend(true, this, options);\n        \n        if (options.angle == null && this.axis != 'xaxis' && this.axis != 'x2axis') {\n            this.angle = -90;\n        }\n        \n        var ropts = {fontSize:this.fontSize, fontWeight:this.fontWeight, fontStretch:this.fontStretch, fillStyle:this.textColor, angle:this.getAngleRad(), fontFamily:this.fontFamily};\n        if (this.pt2px) {\n            ropts.pt2px = this.pt2px;\n        }\n        \n        if (this.enableFontSupport) {\n            if ($.jqplot.support_canvas_text()) {\n                this._textRenderer = new $.jqplot.CanvasFontRenderer(ropts);\n            }\n            \n            else {\n                this._textRenderer = new $.jqplot.CanvasTextRenderer(ropts); \n            }\n        }\n        else {\n            this._textRenderer = new $.jqplot.CanvasTextRenderer(ropts); \n        }\n    };\n    \n    $.jqplot.CanvasAxisLabelRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n        this._textRenderer.init({fontSize:this.fontSize, fontWeight:this.fontWeight, fontStretch:this.fontStretch, fillStyle:this.textColor, angle:this.getAngleRad(), fontFamily:this.fontFamily});\n    };\n    \n    // return width along the x axis\n    // will check first to see if an element exists.\n    // if not, will return the computed text box width.\n    $.jqplot.CanvasAxisLabelRenderer.prototype.getWidth = function(ctx) {\n        if (this._elem) {\n         return this._elem.outerWidth(true);\n        }\n        else {\n            var tr = this._textRenderer;\n            var l = tr.getWidth(ctx);\n            var h = tr.getHeight(ctx);\n            var w = Math.abs(Math.sin(tr.angle)*h) + Math.abs(Math.cos(tr.angle)*l);\n            return w;\n        }\n    };\n    \n    // return height along the y axis.\n    $.jqplot.CanvasAxisLabelRenderer.prototype.getHeight = function(ctx) {\n        if (this._elem) {\n         return this._elem.outerHeight(true);\n        }\n        else {\n            var tr = this._textRenderer;\n            var l = tr.getWidth(ctx);\n            var h = tr.getHeight(ctx);\n            var w = Math.abs(Math.cos(tr.angle)*h) + Math.abs(Math.sin(tr.angle)*l);\n            return w;\n        }\n    };\n    \n    $.jqplot.CanvasAxisLabelRenderer.prototype.getAngleRad = function() {\n        var a = this.angle * Math.PI/180;\n        return a;\n    };\n    \n    $.jqplot.CanvasAxisLabelRenderer.prototype.draw = function(ctx, plot) {\n          // Memory Leaks patch\n          if (this._elem) {\n              if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n                  window.G_vmlCanvasManager.uninitElement(this._elem.get(0));\n              }\n            \n              this._elem.emptyForce();\n              this._elem = null;\n          }\n\n        // create a canvas here, but can't draw on it untill it is appended\n        // to dom for IE compatability.\n        var elem = plot.canvasManager.getCanvas();\n\n        this._textRenderer.setText(this.label, ctx);\n        var w = this.getWidth(ctx);\n        var h = this.getHeight(ctx);\n        elem.width = w;\n        elem.height = h;\n        elem.style.width = w;\n        elem.style.height = h;\n        \n        elem = plot.canvasManager.initCanvas(elem);\n\n        this._elem = $(elem);\n        this._elem.css({ position: 'absolute'});\n        this._elem.addClass('jqplot-'+this.axis+'-label');\n        \n        elem = null;\n        return this._elem;\n    };\n    \n    $.jqplot.CanvasAxisLabelRenderer.prototype.pack = function() {\n        this._textRenderer.draw(this._elem.get(0).getContext(\"2d\"), this.label);\n    };\n    \n})(jQuery);","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    /**\n    *  Class: $.jqplot.CanvasAxisTickRenderer\n    * Renderer to draw axis ticks with a canvas element to support advanced\n    * featrues such as rotated text.  This renderer uses a separate rendering engine\n    * to draw the text on the canvas.  Two modes of rendering the text are available.\n    * If the browser has native font support for canvas fonts (currently Mozila 3.5\n    * and Safari 4), you can enable text rendering with the canvas fillText method.\n    * You do so by setting the \"enableFontSupport\" option to true. \n    * \n    * Browsers lacking native font support will have the text drawn on the canvas\n    * using the Hershey font metrics.  Even if the \"enableFontSupport\" option is true\n    * non-supporting browsers will still render with the Hershey font.\n    */\n    $.jqplot.CanvasAxisTickRenderer = function(options) {\n        // Group: Properties\n        \n        // prop: mark\n        // tick mark on the axis.  One of 'inside', 'outside', 'cross', '' or null.\n        this.mark = 'outside';\n        // prop: showMark\n        // whether or not to show the mark on the axis.\n        this.showMark = true;\n        // prop: showGridline\n        // whether or not to draw the gridline on the grid at this tick.\n        this.showGridline = true;\n        // prop: isMinorTick\n        // if this is a minor tick.\n        this.isMinorTick = false;\n        // prop: angle\n        // angle of text, measured clockwise from x axis.\n        this.angle = 0;\n        // prop:  markSize\n        // Length of the tick marks in pixels.  For 'cross' style, length\n        // will be stoked above and below axis, so total length will be twice this.\n        this.markSize = 4;\n        // prop: show\n        // whether or not to show the tick (mark and label).\n        this.show = true;\n        // prop: showLabel\n        // whether or not to show the label.\n        this.showLabel = true;\n        // prop: labelPosition\n        // 'auto', 'start', 'middle' or 'end'.\n        // Whether tick label should be positioned so the start, middle, or end\n        // of the tick mark.\n        this.labelPosition = 'auto';\n        this.label = '';\n        this.value = null;\n        this._styles = {};\n        // prop: formatter\n        // A class of a formatter for the tick text.\n        // The default $.jqplot.DefaultTickFormatter uses sprintf.\n        this.formatter = $.jqplot.DefaultTickFormatter;\n        // prop: formatString\n        // string passed to the formatter.\n        this.formatString = '';\n        // prop: prefix\n        // String to prepend to the tick label.\n        // Prefix is prepended to the formatted tick label.\n        this.prefix = '';\n        // prop: fontFamily\n        // css spec for the font-family css attribute.\n        this.fontFamily = '\"Trebuchet MS\", Arial, Helvetica, sans-serif';\n        // prop: fontSize\n        // CSS spec for font size.\n        this.fontSize = '10pt';\n        // prop: fontWeight\n        // CSS spec for fontWeight\n        this.fontWeight = 'normal';\n        // prop: fontStretch\n        // Multiplier to condense or expand font width.  \n        // Applies only to browsers which don't support canvas native font rendering.\n        this.fontStretch = 1.0;\n        // prop: textColor\n        // css spec for the color attribute.\n        this.textColor = '#666666';\n        // prop: enableFontSupport\n        // true to turn on native canvas font support in Mozilla 3.5+ and Safari 4+.\n        // If true, tick label will be drawn with canvas tag native support for fonts.\n        // If false, tick label will be drawn with Hershey font metrics.\n        this.enableFontSupport = true;\n        // prop: pt2px\n        // Point to pixel scaling factor, used for computing height of bounding box\n        // around a label.  The labels text renderer has a default setting of 1.4, which \n        // should be suitable for most fonts.  Leave as null to use default.  If tops of\n        // letters appear clipped, increase this.  If bounding box seems too big, decrease.\n        // This is an issue only with the native font renderering capabilities of Mozilla\n        // 3.5 and Safari 4 since they do not provide a method to determine the font height.\n        this.pt2px = null;\n        \n        this._elem;\n        this._ctx;\n        this._plotWidth;\n        this._plotHeight;\n        this._plotDimensions = {height:null, width:null};\n        \n        $.extend(true, this, options);\n        \n        var ropts = {fontSize:this.fontSize, fontWeight:this.fontWeight, fontStretch:this.fontStretch, fillStyle:this.textColor, angle:this.getAngleRad(), fontFamily:this.fontFamily};\n        if (this.pt2px) {\n            ropts.pt2px = this.pt2px;\n        }\n        \n        if (this.enableFontSupport) {\n            if ($.jqplot.support_canvas_text()) {\n                this._textRenderer = new $.jqplot.CanvasFontRenderer(ropts);\n            }\n            \n            else {\n                this._textRenderer = new $.jqplot.CanvasTextRenderer(ropts); \n            }\n        }\n        else {\n            this._textRenderer = new $.jqplot.CanvasTextRenderer(ropts); \n        }\n    };\n    \n    $.jqplot.CanvasAxisTickRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n        this._textRenderer.init({fontSize:this.fontSize, fontWeight:this.fontWeight, fontStretch:this.fontStretch, fillStyle:this.textColor, angle:this.getAngleRad(), fontFamily:this.fontFamily});\n    };\n    \n    // return width along the x axis\n    // will check first to see if an element exists.\n    // if not, will return the computed text box width.\n    $.jqplot.CanvasAxisTickRenderer.prototype.getWidth = function(ctx) {\n        if (this._elem) {\n         return this._elem.outerWidth(true);\n        }\n        else {\n            var tr = this._textRenderer;\n            var l = tr.getWidth(ctx);\n            var h = tr.getHeight(ctx);\n            var w = Math.abs(Math.sin(tr.angle)*h) + Math.abs(Math.cos(tr.angle)*l);\n            return w;\n        }\n    };\n    \n    // return height along the y axis.\n    $.jqplot.CanvasAxisTickRenderer.prototype.getHeight = function(ctx) {\n        if (this._elem) {\n         return this._elem.outerHeight(true);\n        }\n        else {\n            var tr = this._textRenderer;\n            var l = tr.getWidth(ctx);\n            var h = tr.getHeight(ctx);\n            var w = Math.abs(Math.cos(tr.angle)*h) + Math.abs(Math.sin(tr.angle)*l);\n            return w;\n        }\n    };\n\n    // return top.\n    $.jqplot.CanvasAxisTickRenderer.prototype.getTop = function(ctx) {\n        if (this._elem) {\n         return this._elem.position().top;\n        }\n        else {\n            return null;\n        }\n    };\n    \n    $.jqplot.CanvasAxisTickRenderer.prototype.getAngleRad = function() {\n        var a = this.angle * Math.PI/180;\n        return a;\n    };\n    \n    \n    $.jqplot.CanvasAxisTickRenderer.prototype.setTick = function(value, axisName, isMinor) {\n        this.value = value;\n        if (isMinor) {\n            this.isMinorTick = true;\n        }\n        return this;\n    };\n    \n    $.jqplot.CanvasAxisTickRenderer.prototype.draw = function(ctx, plot) {\n        if (!this.label) {\n            this.label = this.prefix + this.formatter(this.formatString, this.value);\n        }\n        \n        // Memory Leaks patch\n        if (this._elem) {\n            if ($.jqplot.use_excanvas && window.G_vmlCanvasManager.uninitElement !== undefined) {\n                window.G_vmlCanvasManager.uninitElement(this._elem.get(0));\n            }\n            \n            this._elem.emptyForce();\n            this._elem = null;\n        }\n\n        // create a canvas here, but can't draw on it untill it is appended\n        // to dom for IE compatability.\n\n        var elem = plot.canvasManager.getCanvas();\n\n        this._textRenderer.setText(this.label, ctx);\n        var w = this.getWidth(ctx);\n        var h = this.getHeight(ctx);\n        // canvases seem to need to have width and heigh attributes directly set.\n        elem.width = w;\n        elem.height = h;\n        elem.style.width = w;\n        elem.style.height = h;\n        elem.style.textAlign = 'left';\n        elem.style.position = 'absolute';\n\n        elem = plot.canvasManager.initCanvas(elem);\n\n        this._elem = $(elem);\n        this._elem.css(this._styles);\n        this._elem.addClass('jqplot-'+this.axis+'-tick');\n\n        elem = null;\n        return this._elem;\n    };\n    \n    $.jqplot.CanvasAxisTickRenderer.prototype.pack = function() {\n        this._textRenderer.draw(this._elem.get(0).getContext(\"2d\"), this.label);\n    };\n    \n})(jQuery);","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n *\n * included jsDate library by Chris Leonello:\n *\n * Copyright (c) 2010-2015 Chris Leonello\n *\n * jsDate is currently available for use in all personal or commercial projects \n * under both the MIT and GPL version 2.0 licenses. This means that you can \n * choose the license that best suits your project and use it accordingly.\n *\n * jsDate borrows many concepts and ideas from the Date Instance \n * Methods by Ken Snyder along with some parts of Ken's actual code.\n * \n * Ken's original Date Instance Methods and copyright notice:\n * \n * Ken Snyder (ken d snyder at gmail dot com)\n * 2008-09-10\n * version 2.0.2 (http://kendsnyder.com/sandbox/date/)     \n * Creative Commons Attribution License 3.0 (http://creativecommons.org/licenses/by/3.0/)\n *\n * jqplotToImage function based on Larry Siden's export-jqplot-to-png.js.\n * Larry has generously given permission to adapt his code for inclusion\n * into jqPlot.\n *\n * Larry's original code can be found here:\n *\n * https://github.com/lsiden/export-jqplot-to-png\n * \n * \n */\n\n(function($) {    \n    // This code is a modified version of the canvastext.js code, copyright below:\n    //\n    // This code is released to the public domain by Jim Studt, 2007.\n    // He may keep some sort of up to date copy at http://www.federated.com/~jim/canvastext/\n    //\n    $.jqplot.CanvasTextRenderer = function(options){\n        this.fontStyle = 'normal';  // normal, italic, oblique [not implemented]\n        this.fontVariant = 'normal';    // normal, small caps [not implemented]\n        this.fontWeight = 'normal'; // normal, bold, bolder, lighter, 100 - 900\n        this.fontSize = '10px'; \n        this.fontFamily = 'sans-serif';\n        this.fontStretch = 1.0;\n        this.fillStyle = '#666666';\n        this.angle = 0;\n        this.textAlign = 'start';\n        this.textBaseline = 'alphabetic';\n        this.text;\n        this.width;\n        this.height;\n        this.pt2px = 1.28;\n\n        $.extend(true, this, options);\n        this.normalizedFontSize = this.normalizeFontSize(this.fontSize);\n        this.setHeight();\n    };\n    \n    $.jqplot.CanvasTextRenderer.prototype.init = function(options) {\n        $.extend(true, this, options);\n        this.normalizedFontSize = this.normalizeFontSize(this.fontSize);\n        this.setHeight();\n    };\n    \n    // convert css spec into point size\n    // returns float\n    $.jqplot.CanvasTextRenderer.prototype.normalizeFontSize = function(sz) {\n        sz = String(sz);\n        var n = parseFloat(sz);\n        if (sz.indexOf('px') > -1) {\n            return n/this.pt2px;\n        }\n        else if (sz.indexOf('pt') > -1) {\n            return n;\n        }\n        else if (sz.indexOf('em') > -1) {\n            return n*12;\n        }\n        else if (sz.indexOf('%') > -1) {\n            return n*12/100;\n        }\n        // default to pixels;\n        else {\n            return n/this.pt2px;\n        }\n    };\n    \n    \n    $.jqplot.CanvasTextRenderer.prototype.fontWeight2Float = function(w) {\n        // w = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\n        // return values adjusted for Hershey font.\n        if (Number(w)) {\n            return w/400;\n        }\n        else {\n            switch (w) {\n                case 'normal':\n                    return 1;\n                    break;\n                case 'bold':\n                    return 1.75;\n                    break;\n                case 'bolder':\n                    return 2.25;\n                    break;\n                case 'lighter':\n                    return 0.75;\n                    break;\n                default:\n                    return 1;\n                    break;\n             }   \n        }\n    };\n    \n    $.jqplot.CanvasTextRenderer.prototype.getText = function() {\n        return this.text;\n    };\n    \n    $.jqplot.CanvasTextRenderer.prototype.setText = function(t, ctx) {\n        this.text = t;\n        this.setWidth(ctx);\n        return this;\n    };\n    \n    $.jqplot.CanvasTextRenderer.prototype.getWidth = function(ctx) {\n        return this.width;\n    };\n    \n    $.jqplot.CanvasTextRenderer.prototype.setWidth = function(ctx, w) {\n        if (!w) {\n            this.width = this.measure(ctx, this.text);\n        }\n        else {\n            this.width = w;   \n        }\n        return this;\n    };\n    \n    // return height in pixels.\n    $.jqplot.CanvasTextRenderer.prototype.getHeight = function(ctx) {\n        return this.height;\n    };\n    \n    // w - height in pt\n    // set heigh in px\n    $.jqplot.CanvasTextRenderer.prototype.setHeight = function(w) {\n        if (!w) {\n            //height = this.fontSize /0.75;\n            this.height = this.normalizedFontSize * this.pt2px;\n        }\n        else {\n            this.height = w;   \n        }\n        return this;\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.letter = function (ch)\n    {\n        return this.letters[ch];\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.ascent = function()\n    {\n        return this.normalizedFontSize;\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.descent = function()\n    {\n        return 7.0*this.normalizedFontSize/25.0;\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.measure = function(ctx, str)\n    {\n        var total = 0;\n        var len = str.length;\n \n        for (var i = 0; i < len; i++) {\n            var c = this.letter(str.charAt(i));\n            if (c) {\n                total += c.width * this.normalizedFontSize / 25.0 * this.fontStretch;\n            }\n        }\n        return total;\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.draw = function(ctx,str)\n    {\n        var x = 0;\n        // leave room at bottom for descenders.\n        var y = this.height*0.72;\n         var total = 0;\n         var len = str.length;\n         var mag = this.normalizedFontSize / 25.0;\n\n         ctx.save();\n         var tx, ty;\n         \n         // 1st quadrant\n         if ((-Math.PI/2 <= this.angle && this.angle <= 0) || (Math.PI*3/2 <= this.angle && this.angle <= Math.PI*2)) {\n             tx = 0;\n             ty = -Math.sin(this.angle) * this.width;\n         }\n         // 4th quadrant\n         else if ((0 < this.angle && this.angle <= Math.PI/2) || (-Math.PI*2 <= this.angle && this.angle <= -Math.PI*3/2)) {\n             tx = Math.sin(this.angle) * this.height;\n             ty = 0;\n         }\n         // 2nd quadrant\n         else if ((-Math.PI < this.angle && this.angle < -Math.PI/2) || (Math.PI <= this.angle && this.angle <= Math.PI*3/2)) {\n             tx = -Math.cos(this.angle) * this.width;\n             ty = -Math.sin(this.angle) * this.width - Math.cos(this.angle) * this.height;\n         }\n         // 3rd quadrant\n         else if ((-Math.PI*3/2 < this.angle && this.angle < Math.PI) || (Math.PI/2 < this.angle && this.angle < Math.PI)) {\n             tx = Math.sin(this.angle) * this.height - Math.cos(this.angle)*this.width;\n             ty = -Math.cos(this.angle) * this.height;\n         }\n         \n         ctx.strokeStyle = this.fillStyle;\n         ctx.fillStyle = this.fillStyle;\n         ctx.translate(tx, ty);\n         ctx.rotate(this.angle);\n         ctx.lineCap = \"round\";\n         // multiplier was 2.0\n         var fact = (this.normalizedFontSize > 30) ? 2.0 : 2 + (30 - this.normalizedFontSize)/20;\n         ctx.lineWidth = fact * mag * this.fontWeight2Float(this.fontWeight);\n         \n         for ( var i = 0; i < len; i++) {\n            var c = this.letter( str.charAt(i));\n            if ( !c) {\n                continue;\n            }\n\n            ctx.beginPath();\n\n            var penUp = 1;\n            var needStroke = 0;\n            for ( var j = 0; j < c.points.length; j++) {\n              var a = c.points[j];\n              if ( a[0] == -1 && a[1] == -1) {\n                  penUp = 1;\n                  continue;\n              }\n              if ( penUp) {\n                  ctx.moveTo( x + a[0]*mag*this.fontStretch, y - a[1]*mag);\n                  penUp = false;\n              } else {\n                  ctx.lineTo( x + a[0]*mag*this.fontStretch, y - a[1]*mag);\n              }\n            }\n            ctx.stroke();\n            x += c.width*mag*this.fontStretch;\n         }\n         ctx.restore();\n         return total;\n    };\n\n    $.jqplot.CanvasTextRenderer.prototype.letters = {\n         ' ': { width: 16, points: [] },\n         '!': { width: 10, points: [[5,21],[5,7],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]] },\n         '\"': { width: 16, points: [[4,21],[4,14],[-1,-1],[12,21],[12,14]] },\n         '#': { width: 21, points: [[11,25],[4,-7],[-1,-1],[17,25],[10,-7],[-1,-1],[4,12],[18,12],[-1,-1],[3,6],[17,6]] },\n         '$': { width: 20, points: [[8,25],[8,-4],[-1,-1],[12,25],[12,-4],[-1,-1],[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]] },\n         '%': { width: 24, points: [[21,21],[3,0],[-1,-1],[8,21],[10,19],[10,17],[9,15],[7,14],[5,14],[3,16],[3,18],[4,20],[6,21],[8,21],[10,20],[13,19],[16,19],[19,20],[21,21],[-1,-1],[17,7],[15,6],[14,4],[14,2],[16,0],[18,0],[20,1],[21,3],[21,5],[19,7],[17,7]] },\n         '&': { width: 26, points: [[23,12],[23,13],[22,14],[21,14],[20,13],[19,11],[17,6],[15,3],[13,1],[11,0],[7,0],[5,1],[4,2],[3,4],[3,6],[4,8],[5,9],[12,13],[13,14],[14,16],[14,18],[13,20],[11,21],[9,20],[8,18],[8,16],[9,13],[11,10],[16,3],[18,1],[20,0],[22,0],[23,1],[23,2]] },\n         '\\'': { width: 10, points: [[5,19],[4,20],[5,21],[6,20],[6,18],[5,16],[4,15]] },\n         '(': { width: 14, points: [[11,25],[9,23],[7,20],[5,16],[4,11],[4,7],[5,2],[7,-2],[9,-5],[11,-7]] },\n         ')': { width: 14, points: [[3,25],[5,23],[7,20],[9,16],[10,11],[10,7],[9,2],[7,-2],[5,-5],[3,-7]] },\n         '*': { width: 16, points: [[8,21],[8,9],[-1,-1],[3,18],[13,12],[-1,-1],[13,18],[3,12]] },\n         '+': { width: 26, points: [[13,18],[13,0],[-1,-1],[4,9],[22,9]] },\n         ',': { width: 10, points: [[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]] },\n         '-': { width: 18, points: [[6,9],[12,9]] },\n         '.': { width: 10, points: [[5,2],[4,1],[5,0],[6,1],[5,2]] },\n         '/': { width: 22, points: [[20,25],[2,-7]] },\n         '0': { width: 20, points: [[9,21],[6,20],[4,17],[3,12],[3,9],[4,4],[6,1],[9,0],[11,0],[14,1],[16,4],[17,9],[17,12],[16,17],[14,20],[11,21],[9,21]] },\n         '1': { width: 20, points: [[6,17],[8,18],[11,21],[11,0]] },\n         '2': { width: 20, points: [[4,16],[4,17],[5,19],[6,20],[8,21],[12,21],[14,20],[15,19],[16,17],[16,15],[15,13],[13,10],[3,0],[17,0]] },\n         '3': { width: 20, points: [[5,21],[16,21],[10,13],[13,13],[15,12],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]] },\n         '4': { width: 20, points: [[13,21],[3,7],[18,7],[-1,-1],[13,21],[13,0]] },\n         '5': { width: 20, points: [[15,21],[5,21],[4,12],[5,13],[8,14],[11,14],[14,13],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]] },\n         '6': { width: 20, points: [[16,18],[15,20],[12,21],[10,21],[7,20],[5,17],[4,12],[4,7],[5,3],[7,1],[10,0],[11,0],[14,1],[16,3],[17,6],[17,7],[16,10],[14,12],[11,13],[10,13],[7,12],[5,10],[4,7]] },\n         '7': { width: 20, points: [[17,21],[7,0],[-1,-1],[3,21],[17,21]] },\n         '8': { width: 20, points: [[8,21],[5,20],[4,18],[4,16],[5,14],[7,13],[11,12],[14,11],[16,9],[17,7],[17,4],[16,2],[15,1],[12,0],[8,0],[5,1],[4,2],[3,4],[3,7],[4,9],[6,11],[9,12],[13,13],[15,14],[16,16],[16,18],[15,20],[12,21],[8,21]] },\n         '9': { width: 20, points: [[16,14],[15,11],[13,9],[10,8],[9,8],[6,9],[4,11],[3,14],[3,15],[4,18],[6,20],[9,21],[10,21],[13,20],[15,18],[16,14],[16,9],[15,4],[13,1],[10,0],[8,0],[5,1],[4,3]] },\n         ':': { width: 10, points: [[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]] },\n         ';': { width: 10, points: [[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]] },\n         '<': { width: 24, points: [[20,18],[4,9],[20,0]] },\n         '=': { width: 26, points: [[4,12],[22,12],[-1,-1],[4,6],[22,6]] },\n         '>': { width: 24, points: [[4,18],[20,9],[4,0]] },\n         '?': { width: 18, points: [[3,16],[3,17],[4,19],[5,20],[7,21],[11,21],[13,20],[14,19],[15,17],[15,15],[14,13],[13,12],[9,10],[9,7],[-1,-1],[9,2],[8,1],[9,0],[10,1],[9,2]] },\n         '@': { width: 27, points: [[18,13],[17,15],[15,16],[12,16],[10,15],[9,14],[8,11],[8,8],[9,6],[11,5],[14,5],[16,6],[17,8],[-1,-1],[12,16],[10,14],[9,11],[9,8],[10,6],[11,5],[-1,-1],[18,16],[17,8],[17,6],[19,5],[21,5],[23,7],[24,10],[24,12],[23,15],[22,17],[20,19],[18,20],[15,21],[12,21],[9,20],[7,19],[5,17],[4,15],[3,12],[3,9],[4,6],[5,4],[7,2],[9,1],[12,0],[15,0],[18,1],[20,2],[21,3],[-1,-1],[19,16],[18,8],[18,6],[19,5]] },\n         'A': { width: 18, points: [[9,21],[1,0],[-1,-1],[9,21],[17,0],[-1,-1],[4,7],[14,7]] },\n         'B': { width: 21, points: [[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[-1,-1],[4,11],[13,11],[16,10],[17,9],[18,7],[18,4],[17,2],[16,1],[13,0],[4,0]] },\n         'C': { width: 21, points: [[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5]] },\n         'D': { width: 21, points: [[4,21],[4,0],[-1,-1],[4,21],[11,21],[14,20],[16,18],[17,16],[18,13],[18,8],[17,5],[16,3],[14,1],[11,0],[4,0]] },\n         'E': { width: 19, points: [[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11],[-1,-1],[4,0],[17,0]] },\n         'F': { width: 18, points: [[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11]] },\n         'G': { width: 21, points: [[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[18,8],[-1,-1],[13,8],[18,8]] },\n         'H': { width: 22, points: [[4,21],[4,0],[-1,-1],[18,21],[18,0],[-1,-1],[4,11],[18,11]] },\n         'I': { width: 8, points: [[4,21],[4,0]] },\n         'J': { width: 16, points: [[12,21],[12,5],[11,2],[10,1],[8,0],[6,0],[4,1],[3,2],[2,5],[2,7]] },\n         'K': { width: 21, points: [[4,21],[4,0],[-1,-1],[18,21],[4,7],[-1,-1],[9,12],[18,0]] },\n         'L': { width: 17, points: [[4,21],[4,0],[-1,-1],[4,0],[16,0]] },\n         'M': { width: 24, points: [[4,21],[4,0],[-1,-1],[4,21],[12,0],[-1,-1],[20,21],[12,0],[-1,-1],[20,21],[20,0]] },\n         'N': { width: 22, points: [[4,21],[4,0],[-1,-1],[4,21],[18,0],[-1,-1],[18,21],[18,0]] },\n         'O': { width: 22, points: [[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21]] },\n         'P': { width: 21, points: [[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,14],[17,12],[16,11],[13,10],[4,10]] },\n         'Q': { width: 22, points: [[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21],[-1,-1],[12,4],[18,-2]] },\n         'R': { width: 21, points: [[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[4,11],[-1,-1],[11,11],[18,0]] },\n         'S': { width: 20, points: [[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]] },\n         'T': { width: 16, points: [[8,21],[8,0],[-1,-1],[1,21],[15,21]] },\n         'U': { width: 22, points: [[4,21],[4,6],[5,3],[7,1],[10,0],[12,0],[15,1],[17,3],[18,6],[18,21]] },\n         'V': { width: 18, points: [[1,21],[9,0],[-1,-1],[17,21],[9,0]] },\n         'W': { width: 24, points: [[2,21],[7,0],[-1,-1],[12,21],[7,0],[-1,-1],[12,21],[17,0],[-1,-1],[22,21],[17,0]] },\n         'X': { width: 20, points: [[3,21],[17,0],[-1,-1],[17,21],[3,0]] },\n         'Y': { width: 18, points: [[1,21],[9,11],[9,0],[-1,-1],[17,21],[9,11]] },\n         'Z': { width: 20, points: [[17,21],[3,0],[-1,-1],[3,21],[17,21],[-1,-1],[3,0],[17,0]] },\n         '[': { width: 14, points: [[4,25],[4,-7],[-1,-1],[5,25],[5,-7],[-1,-1],[4,25],[11,25],[-1,-1],[4,-7],[11,-7]] },\n         '\\\\': { width: 14, points: [[0,21],[14,-3]] },\n         ']': { width: 14, points: [[9,25],[9,-7],[-1,-1],[10,25],[10,-7],[-1,-1],[3,25],[10,25],[-1,-1],[3,-7],[10,-7]] },\n         '^': { width: 16, points: [[6,15],[8,18],[10,15],[-1,-1],[3,12],[8,17],[13,12],[-1,-1],[8,17],[8,0]] },\n         '_': { width: 16, points: [[0,-2],[16,-2]] },\n         '`': { width: 10, points: [[6,21],[5,20],[4,18],[4,16],[5,15],[6,16],[5,17]] },\n         'a': { width: 19, points: [[15,14],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'b': { width: 19, points: [[4,21],[4,0],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]] },\n         'c': { width: 18, points: [[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'd': { width: 19, points: [[15,21],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'e': { width: 18, points: [[3,8],[15,8],[15,10],[14,12],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'f': { width: 12, points: [[10,21],[8,21],[6,20],[5,17],[5,0],[-1,-1],[2,14],[9,14]] },\n         'g': { width: 19, points: [[15,14],[15,-2],[14,-5],[13,-6],[11,-7],[8,-7],[6,-6],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'h': { width: 19, points: [[4,21],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]] },\n         'i': { width: 8, points: [[3,21],[4,20],[5,21],[4,22],[3,21],[-1,-1],[4,14],[4,0]] },\n         'j': { width: 10, points: [[5,21],[6,20],[7,21],[6,22],[5,21],[-1,-1],[6,14],[6,-3],[5,-6],[3,-7],[1,-7]] },\n         'k': { width: 17, points: [[4,21],[4,0],[-1,-1],[14,14],[4,4],[-1,-1],[8,8],[15,0]] },\n         'l': { width: 8, points: [[4,21],[4,0]] },\n         'm': { width: 30, points: [[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0],[-1,-1],[15,10],[18,13],[20,14],[23,14],[25,13],[26,10],[26,0]] },\n         'n': { width: 19, points: [[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]] },\n         'o': { width: 19, points: [[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3],[16,6],[16,8],[15,11],[13,13],[11,14],[8,14]] },\n         'p': { width: 19, points: [[4,14],[4,-7],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]] },\n         'q': { width: 19, points: [[15,14],[15,-7],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]] },\n         'r': { width: 13, points: [[4,14],[4,0],[-1,-1],[4,8],[5,11],[7,13],[9,14],[12,14]] },\n         's': { width: 17, points: [[14,11],[13,13],[10,14],[7,14],[4,13],[3,11],[4,9],[6,8],[11,7],[13,6],[14,4],[14,3],[13,1],[10,0],[7,0],[4,1],[3,3]] },\n         't': { width: 12, points: [[5,21],[5,4],[6,1],[8,0],[10,0],[-1,-1],[2,14],[9,14]] },\n         'u': { width: 19, points: [[4,14],[4,4],[5,1],[7,0],[10,0],[12,1],[15,4],[-1,-1],[15,14],[15,0]] },\n         'v': { width: 16, points: [[2,14],[8,0],[-1,-1],[14,14],[8,0]] },\n         'w': { width: 22, points: [[3,14],[7,0],[-1,-1],[11,14],[7,0],[-1,-1],[11,14],[15,0],[-1,-1],[19,14],[15,0]] },\n         'x': { width: 17, points: [[3,14],[14,0],[-1,-1],[14,14],[3,0]] },\n         'y': { width: 16, points: [[2,14],[8,0],[-1,-1],[14,14],[8,0],[6,-4],[4,-6],[2,-7],[1,-7]] },\n         'z': { width: 17, points: [[14,14],[3,0],[-1,-1],[3,14],[14,14],[-1,-1],[3,0],[14,0]] },\n         '{': { width: 14, points: [[9,25],[7,24],[6,23],[5,21],[5,19],[6,17],[7,16],[8,14],[8,12],[6,10],[-1,-1],[7,24],[6,22],[6,20],[7,18],[8,17],[9,15],[9,13],[8,11],[4,9],[8,7],[9,5],[9,3],[8,1],[7,0],[6,-2],[6,-4],[7,-6],[-1,-1],[6,8],[8,6],[8,4],[7,2],[6,1],[5,-1],[5,-3],[6,-5],[7,-6],[9,-7]] },\n         '|': { width: 8, points: [[4,25],[4,-7]] },\n         '}': { width: 14, points: [[5,25],[7,24],[8,23],[9,21],[9,19],[8,17],[7,16],[6,14],[6,12],[8,10],[-1,-1],[7,24],[8,22],[8,20],[7,18],[6,17],[5,15],[5,13],[6,11],[10,9],[6,7],[5,5],[5,3],[6,1],[7,0],[8,-2],[8,-4],[7,-6],[-1,-1],[8,8],[6,6],[6,4],[7,2],[8,1],[9,-1],[9,-3],[8,-5],[7,-6],[5,-7]] },\n         '~': { width: 24, points: [[3,6],[3,8],[4,11],[6,12],[8,12],[10,11],[14,8],[16,7],[18,7],[20,8],[21,10],[-1,-1],[3,8],[4,10],[6,11],[8,11],[10,10],[14,7],[16,6],[18,6],[20,7],[21,10],[21,12]] }\n     };\n     \n    $.jqplot.CanvasFontRenderer = function(options) {\n        options = options || {};\n        if (!options.pt2px) {\n            options.pt2px = 1.5;\n        }\n        $.jqplot.CanvasTextRenderer.call(this, options);\n    };\n    \n    $.jqplot.CanvasFontRenderer.prototype = new $.jqplot.CanvasTextRenderer({});\n    $.jqplot.CanvasFontRenderer.prototype.constructor = $.jqplot.CanvasFontRenderer;\n\n    $.jqplot.CanvasFontRenderer.prototype.measure = function(ctx, str)\n    {\n        // var fstyle = this.fontStyle+' '+this.fontVariant+' '+this.fontWeight+' '+this.fontSize+' '+this.fontFamily;\n        var fstyle = this.fontSize+' '+this.fontFamily;\n        ctx.save();\n        ctx.font = fstyle;\n        var w = ctx.measureText(str).width;\n        ctx.restore();\n        return w;\n    };\n\n    $.jqplot.CanvasFontRenderer.prototype.draw = function(ctx, str)\n    {\n        var x = 0;\n        // leave room at bottom for descenders.\n        var y = this.height*0.72;\n        //var y = 12;\n\n         ctx.save();\n         var tx, ty;\n         \n         // 1st quadrant\n         if ((-Math.PI/2 <= this.angle && this.angle <= 0) || (Math.PI*3/2 <= this.angle && this.angle <= Math.PI*2)) {\n             tx = 0;\n             ty = -Math.sin(this.angle) * this.width;\n         }\n         // 4th quadrant\n         else if ((0 < this.angle && this.angle <= Math.PI/2) || (-Math.PI*2 <= this.angle && this.angle <= -Math.PI*3/2)) {\n             tx = Math.sin(this.angle) * this.height;\n             ty = 0;\n         }\n         // 2nd quadrant\n         else if ((-Math.PI < this.angle && this.angle < -Math.PI/2) || (Math.PI <= this.angle && this.angle <= Math.PI*3/2)) {\n             tx = -Math.cos(this.angle) * this.width;\n             ty = -Math.sin(this.angle) * this.width - Math.cos(this.angle) * this.height;\n         }\n         // 3rd quadrant\n         else if ((-Math.PI*3/2 < this.angle && this.angle < Math.PI) || (Math.PI/2 < this.angle && this.angle < Math.PI)) {\n             tx = Math.sin(this.angle) * this.height - Math.cos(this.angle)*this.width;\n             ty = -Math.cos(this.angle) * this.height;\n         }\n         ctx.strokeStyle = this.fillStyle;\n         ctx.fillStyle = this.fillStyle;\n        // var fstyle = this.fontStyle+' '+this.fontVariant+' '+this.fontWeight+' '+this.fontSize+' '+this.fontFamily;\n        var fstyle = this.fontSize+' '+this.fontFamily;\n         ctx.font = fstyle;\n         ctx.translate(tx, ty);\n         ctx.rotate(this.angle);\n         ctx.fillText(str, x, y);\n         // ctx.strokeText(str, x, y);\n\n         ctx.restore();\n    };\n    \n})(jQuery);","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {   \n    /**\n    *  class: $.jqplot.CategoryAxisRenderer\n    *  A plugin for jqPlot to render a category style axis, with equal pixel spacing between y data values of a series.\n    *  \n    *  To use this renderer, include the plugin in your source\n    *  > <script type=\"text/javascript\" language=\"javascript\" src=\"plugins/jqplot.categoryAxisRenderer.js\"></script>\n    *  \n    *  and supply the appropriate options to your plot\n    *  \n    *  > {axes:{xaxis:{renderer:$.jqplot.CategoryAxisRenderer}}}\n    **/\n    $.jqplot.CategoryAxisRenderer = function(options) {\n        $.jqplot.LinearAxisRenderer.call(this);\n        // prop: sortMergedLabels\n        // True to sort tick labels when labels are created by merging\n        // x axis values from multiple series.  That is, say you have\n        // two series like:\n        // > line1 = [[2006, 4],            [2008, 9], [2009, 16]];\n        // > line2 = [[2006, 3], [2007, 7], [2008, 6]];\n        // If no label array is specified, tick labels will be collected\n        // from the x values of the series.  With sortMergedLabels\n        // set to true, tick labels will be:\n        // > [2006, 2007, 2008, 2009]\n        // With sortMergedLabels set to false, tick labels will be:\n        // > [2006, 2008, 2009, 2007]\n        //\n        // Note, this property is specified on the renderOptions for the \n        // axes when creating a plot:\n        // > axes:{xaxis:{renderer:$.jqplot.CategoryAxisRenderer, rendererOptions:{sortMergedLabels:true}}}\n        this.sortMergedLabels = false;\n    };\n    \n    $.jqplot.CategoryAxisRenderer.prototype = new $.jqplot.LinearAxisRenderer();\n    $.jqplot.CategoryAxisRenderer.prototype.constructor = $.jqplot.CategoryAxisRenderer;\n    \n    $.jqplot.CategoryAxisRenderer.prototype.init = function(options){\n        this.groups = 1;\n        this.groupLabels = [];\n        this._groupLabels = [];\n        this._grouped = false;\n        this._barsPerGroup = null;\n        this.reverse = false;\n        // prop: tickRenderer\n        // A class of a rendering engine for creating the ticks labels displayed on the plot, \n        // See <$.jqplot.AxisTickRenderer>.\n        // this.tickRenderer = $.jqplot.AxisTickRenderer;\n        // this.labelRenderer = $.jqplot.AxisLabelRenderer;\n        $.extend(true, this, {tickOptions:{formatString:'%d'}}, options);\n        var db = this._dataBounds;\n        // Go through all the series attached to this axis and find\n        // the min/max bounds for this axis.\n        for (var i=0; i<this._series.length; i++) {\n            var s = this._series[i];\n            if (s.groups) {\n                this.groups = s.groups;\n            }\n            var d = s.data;\n            \n            for (var j=0; j<d.length; j++) { \n                if (this.name == 'xaxis' || this.name == 'x2axis') {\n                    if (d[j][0] < db.min || db.min == null) {\n                        db.min = d[j][0];\n                    }\n                    if (d[j][0] > db.max || db.max == null) {\n                        db.max = d[j][0];\n                    }\n                }              \n                else {\n                    if (d[j][1] < db.min || db.min == null) {\n                        db.min = d[j][1];\n                    }\n                    if (d[j][1] > db.max || db.max == null) {\n                        db.max = d[j][1];\n                    }\n                }              \n            }\n        }\n        \n        if (this.groupLabels.length) {\n            this.groups = this.groupLabels.length;\n        }\n    };\n \n\n    $.jqplot.CategoryAxisRenderer.prototype.createTicks = function() {\n        // we're are operating on an axis here\n        var ticks = this._ticks;\n        var userTicks = this.ticks;\n        var name = this.name;\n        // databounds were set on axis initialization.\n        var db = this._dataBounds;\n        var dim, interval;\n        var min, max;\n        var pos1, pos2;\n        var tt, i;\n\n        // if we already have ticks, use them.\n        if (userTicks.length) {\n            // adjust with blanks if we have groups\n            if (this.groups > 1 && !this._grouped) {\n                var l = userTicks.length;\n                var skip = parseInt(l/this.groups, 10);\n                var count = 0;\n                for (var i=skip; i<l; i+=skip) {\n                    userTicks.splice(i+count, 0, ' ');\n                    count++;\n                }\n                this._grouped = true;\n            }\n            this.min = 0.5;\n            this.max = userTicks.length + 0.5;\n            var range = this.max - this.min;\n            this.numberTicks = 2*userTicks.length + 1;\n            for (i=0; i<userTicks.length; i++){\n                tt = this.min + 2 * i * range / (this.numberTicks-1);\n                // need a marker before and after the tick\n                var t = new this.tickRenderer(this.tickOptions);\n                t.showLabel = false;\n                // t.showMark = true;\n                t.setTick(tt, this.name);\n                this._ticks.push(t);\n                var t = new this.tickRenderer(this.tickOptions);\n                t.label = userTicks[i];\n                // t.showLabel = true;\n                t.showMark = false;\n                t.showGridline = false;\n                t.setTick(tt+0.5, this.name);\n                this._ticks.push(t);\n            }\n            // now add the last tick at the end\n            var t = new this.tickRenderer(this.tickOptions);\n            t.showLabel = false;\n            // t.showMark = true;\n            t.setTick(tt+1, this.name);\n            this._ticks.push(t);\n        }\n\n        // we don't have any ticks yet, let's make some!\n        else {\n            if (name == 'xaxis' || name == 'x2axis') {\n                dim = this._plotDimensions.width;\n            }\n            else {\n                dim = this._plotDimensions.height;\n            }\n            \n            // if min, max and number of ticks specified, user can't specify interval.\n            if (this.min != null && this.max != null && this.numberTicks != null) {\n                this.tickInterval = null;\n            }\n            \n            // if max, min, and interval specified and interval won't fit, ignore interval.\n            if (this.min != null && this.max != null && this.tickInterval != null) {\n                if (parseInt((this.max-this.min)/this.tickInterval, 10) != (this.max-this.min)/this.tickInterval) {\n                    this.tickInterval = null;\n                }\n            }\n        \n            // find out how many categories are in the lines and collect labels\n            var labels = [];\n            var numcats = 0;\n            var min = 0.5;\n            var max, val;\n            var isMerged = false;\n            for (var i=0; i<this._series.length; i++) {\n                var s = this._series[i];\n                for (var j=0; j<s.data.length; j++) {\n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        val = s.data[j][0];\n                    }\n                    else {\n                        val = s.data[j][1];\n                    }\n                    if ($.inArray(val, labels) == -1) {\n                        isMerged = true;\n                        numcats += 1;      \n                        labels.push(val);\n                    }\n                }\n            }\n            \n            if (isMerged && this.sortMergedLabels) {\n                if (typeof labels[0] == \"string\") {\n                    labels.sort();\n                } else {\n                    labels.sort(function(a,b) { return a - b; });\n                }\n            }\n            \n            // keep a reference to these tick labels to use for redrawing plot (see bug #57)\n            this.ticks = labels;\n            \n            // now bin the data values to the right lables.\n            for (var i=0; i<this._series.length; i++) {\n                var s = this._series[i];\n                for (var j=0; j<s.data.length; j++) {\n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        val = s.data[j][0];\n                    }\n                    else {\n                        val = s.data[j][1];\n                    }\n                    // for category axis, force the values into category bins.\n                    // we should have the value in the label array now.\n                    var idx = $.inArray(val, labels)+1;\n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        s.data[j][0] = idx;\n                    }\n                    else {\n                        s.data[j][1] = idx;\n                    }\n                }\n            }\n            \n            // adjust with blanks if we have groups\n            if (this.groups > 1 && !this._grouped) {\n                var l = labels.length;\n                var skip = parseInt(l/this.groups, 10);\n                var count = 0;\n                for (var i=skip; i<l; i+=skip+1) {\n                    labels[i] = ' ';\n                }\n                this._grouped = true;\n            }\n        \n            max = numcats + 0.5;\n            if (this.numberTicks == null) {\n                this.numberTicks = 2*numcats + 1;\n            }\n\n            var range = max - min;\n            this.min = min;\n            this.max = max;\n            var track = 0;\n            \n            // todo: adjust this so more ticks displayed.\n            var maxVisibleTicks = parseInt(3+dim/10, 10);\n            var skip = parseInt(numcats/maxVisibleTicks, 10);\n\n            if (this.tickInterval == null) {\n\n                this.tickInterval = range / (this.numberTicks-1);\n\n            }\n            // if tickInterval is specified, we will ignore any computed maximum.\n            for (var i=0; i<this.numberTicks; i++){\n                tt = this.min + i * this.tickInterval;\n                var t = new this.tickRenderer(this.tickOptions);\n                // if even tick, it isn't a category, it's a divider\n                if (i/2 == parseInt(i/2, 10)) {\n                    t.showLabel = false;\n                    t.showMark = true;\n                }\n                else {\n                    if (skip>0 && track<skip) {\n                        t.showLabel = false;\n                        track += 1;\n                    }\n                    else {\n                        t.showLabel = true;\n                        track = 0;\n                    } \n                    t.label = t.formatter(t.formatString, labels[(i-1)/2]);\n                    t.showMark = false;\n                    t.showGridline = false;\n                }\n                t.setTick(tt, this.name);\n                this._ticks.push(t);\n            }\n        }\n        \n    };\n    \n    // called with scope of axis\n    $.jqplot.CategoryAxisRenderer.prototype.draw = function(ctx, plot) {\n        if (this.show) {\n            // populate the axis label and value properties.\n            // createTicks is a method on the renderer, but\n            // call it within the scope of the axis.\n            this.renderer.createTicks.call(this);\n            // fill a div with axes labels in the right direction.\n            // Need to pregenerate each axis to get its bounds and\n            // position it and the labels correctly on the plot.\n            var dim=0;\n            var temp;\n            // Added for theming.\n            if (this._elem) {\n                // this._elem.empty();\n                // Memory Leaks patch\n                this._elem.emptyForce();\n            }\n\n            this._elem = this._elem || $('<div class=\"jqplot-axis jqplot-'+this.name+'\" style=\"position:absolute;\"></div>');\n            \n            if (this.name == 'xaxis' || this.name == 'x2axis') {\n                this._elem.width(this._plotDimensions.width);\n            }\n            else {\n                this._elem.height(this._plotDimensions.height);\n            }\n            \n            // create a _label object.\n            this.labelOptions.axis = this.name;\n            this._label = new this.labelRenderer(this.labelOptions);\n            if (this._label.show) {\n                var elem = this._label.draw(ctx, plot);\n                elem.appendTo(this._elem);\n            }\n    \n            var t = this._ticks;\n            for (var i=0; i<t.length; i++) {\n                var tick = t[i];\n                if (tick.showLabel && (!tick.isMinorTick || this.showMinorTicks)) {\n                    var elem = tick.draw(ctx, plot);\n                    elem.appendTo(this._elem);\n                }\n            }\n        \n            this._groupLabels = [];\n            // now make group labels\n            for (var i=0; i<this.groupLabels.length; i++)\n            {\n                var elem = $('<div style=\"position:absolute;\" class=\"jqplot-'+this.name+'-groupLabel\"></div>');\n                elem.html(this.groupLabels[i]);\n                this._groupLabels.push(elem);\n                elem.appendTo(this._elem);\n            }\n        }\n        return this._elem;\n    };\n    \n    // called with scope of axis\n    $.jqplot.CategoryAxisRenderer.prototype.set = function() { \n        var dim = 0;\n        var temp;\n        var w = 0;\n        var h = 0;\n        var lshow = (this._label == null) ? false : this._label.show;\n        if (this.show) {\n            var t = this._ticks;\n            for (var i=0; i<t.length; i++) {\n                var tick = t[i];\n                if (tick.showLabel && (!tick.isMinorTick || this.showMinorTicks)) {\n                    if (this.name == 'xaxis' || this.name == 'x2axis') {\n                        temp = tick._elem.outerHeight(true);\n                    }\n                    else {\n                        temp = tick._elem.outerWidth(true);\n                    }\n                    if (temp > dim) {\n                        dim = temp;\n                    }\n                }\n            }\n            \n            var dim2 = 0;\n            for (var i=0; i<this._groupLabels.length; i++) {\n                var l = this._groupLabels[i];\n                if (this.name == 'xaxis' || this.name == 'x2axis') {\n                    temp = l.outerHeight(true);\n                }\n                else {\n                    temp = l.outerWidth(true);\n                }\n                if (temp > dim2) {\n                    dim2 = temp;\n                }\n            }\n            \n            if (lshow) {\n                w = this._label._elem.outerWidth(true);\n                h = this._label._elem.outerHeight(true); \n            }\n            if (this.name == 'xaxis') {\n                dim += dim2 + h;\n                this._elem.css({'height':dim+'px', left:'0px', bottom:'0px'});\n            }\n            else if (this.name == 'x2axis') {\n                dim += dim2 + h;\n                this._elem.css({'height':dim+'px', left:'0px', top:'0px'});\n            }\n            else if (this.name == 'yaxis') {\n                dim += dim2 + w;\n                this._elem.css({'width':dim+'px', left:'0px', top:'0px'});\n                if (lshow && this._label.constructor == $.jqplot.AxisLabelRenderer) {\n                    this._label._elem.css('width', w+'px');\n                }\n            }\n            else {\n                dim += dim2 + w;\n                this._elem.css({'width':dim+'px', right:'0px', top:'0px'});\n                if (lshow && this._label.constructor == $.jqplot.AxisLabelRenderer) {\n                    this._label._elem.css('width', w+'px');\n                }\n            }\n        }  \n    };\n    \n    // called with scope of axis\n    $.jqplot.CategoryAxisRenderer.prototype.pack = function(pos, offsets) {\n        var ticks = this._ticks;\n        var max = this.max;\n        var min = this.min;\n        var offmax = offsets.max;\n        var offmin = offsets.min;\n        var lshow = (this._label == null) ? false : this._label.show;\n        var i;\n\n        for (var p in pos) {\n            this._elem.css(p, pos[p]);\n        }\n        \n        this._offsets = offsets;\n        // pixellength will be + for x axes and - for y axes becasue pixels always measured from top left.\n        var pixellength = offmax - offmin;\n        var unitlength = max - min;\n        \n        if (!this.reverse) {\n            // point to unit and unit to point conversions references to Plot DOM element top left corner.\n            \n            this.u2p = function(u){\n                return (u - min) * pixellength / unitlength + offmin;\n            };\n\n            this.p2u = function(p){\n                return (p - offmin) * unitlength / pixellength + min;\n            };\n                    \n            if (this.name == 'xaxis' || this.name == 'x2axis'){\n                this.series_u2p = function(u){\n                    return (u - min) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + min;\n                };\n            }\n            \n            else {\n                this.series_u2p = function(u){\n                    return (u - max) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + max;\n                };\n            }\n        }\n\n        else {\n            // point to unit and unit to point conversions references to Plot DOM element top left corner.\n            \n            this.u2p = function(u){\n                return offmin + (max - u) * pixellength / unitlength;\n            };\n\n            this.p2u = function(p){\n                return min + (p - offmin) * unitlength / pixellength;\n            };\n                    \n            if (this.name == 'xaxis' || this.name == 'x2axis'){\n                this.series_u2p = function(u){\n                    return (max - u) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + max;\n                };\n            }\n            \n            else {\n                this.series_u2p = function(u){\n                    return (min - u) * pixellength / unitlength;\n                };\n                this.series_p2u = function(p){\n                    return p * unitlength / pixellength + min;\n                };\n            }\n\n        }\n            \n        \n        if (this.show) {\n            if (this.name == 'xaxis' || this.name == 'x2axis') {\n                for (i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {\n                        var shim;\n                        \n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            // will need to adjust auto positioning based on which axis this is.\n                            var temp = (this.name == 'xaxis') ? 1 : -1;\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                    if (temp * t.angle < 0) {\n                                        shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    }\n                                    // position at start\n                                    else {\n                                        shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'end':\n                                    shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                case 'start':\n                                    shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    break;\n                                case 'middle':\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                default:\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getWidth()/2;\n                        }\n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('left', val);\n                        t.pack();\n                    }\n                }\n                \n                var labeledge=['bottom', 0];\n                if (lshow) {\n                    var w = this._label._elem.outerWidth(true);\n                    this._label._elem.css('left', offmin + pixellength/2 - w/2 + 'px');\n                    if (this.name == 'xaxis') {\n                        this._label._elem.css('bottom', '0px');\n                        labeledge = ['bottom', this._label._elem.outerHeight(true)];\n                    }\n                    else {\n                        this._label._elem.css('top', '0px');\n                        labeledge = ['top', this._label._elem.outerHeight(true)];\n                    }\n                    this._label.pack();\n                }\n                \n                // draw the group labels\n                var step = parseInt(this._ticks.length/this.groups, 10) + 1;\n                for (i=0; i<this._groupLabels.length; i++) {\n                    var mid = 0;\n                    var count = 0;\n                    for (var j=i*step; j<(i+1)*step; j++) {\n                        if (j >= this._ticks.length-1) continue; // the last tick does not exist as there is no other group in order to have an empty one.\n                        if (this._ticks[j]._elem && this._ticks[j].label != \" \") {\n                            var t = this._ticks[j]._elem;\n                            var p = t.position();\n                            mid += p.left + t.outerWidth(true)/2;\n                            count++;\n                        }\n                    }\n                    mid = mid/count;\n                    this._groupLabels[i].css({'left':(mid - this._groupLabels[i].outerWidth(true)/2)});\n                    this._groupLabels[i].css(labeledge[0], labeledge[1]);\n                }\n            }\n            else {\n                for (i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {                        \n                        var shim;\n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            // will need to adjust auto positioning based on which axis this is.\n                            var temp = (this.name == 'yaxis') ? 1 : -1;\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                case 'end':\n                                    if (temp * t.angle < 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'start':\n                                    if (t.angle > 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'middle':\n                                    // if (t.angle > 0) {\n                                    //     shim = -t.getHeight()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    // }\n                                    // else {\n                                    //     shim = -t.getHeight()/2 - t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    // }\n                                    shim = -t.getHeight()/2;\n                                    break;\n                                default:\n                                    shim = -t.getHeight()/2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getHeight()/2;\n                        }\n                        \n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('top', val);\n                        t.pack();\n                    }\n                }\n                \n                var labeledge=['left', 0];\n                if (lshow) {\n                    var h = this._label._elem.outerHeight(true);\n                    this._label._elem.css('top', offmax - pixellength/2 - h/2 + 'px');\n                    if (this.name == 'yaxis') {\n                        this._label._elem.css('left', '0px');\n                        labeledge = ['left', this._label._elem.outerWidth(true)];\n                    }\n                    else {\n                        this._label._elem.css('right', '0px');\n                        labeledge = ['right', this._label._elem.outerWidth(true)];\n                    }   \n                    this._label.pack();\n                }\n                \n                // draw the group labels, position top here, do left after label position.\n                var step = parseInt(this._ticks.length/this.groups, 10) + 1; // step is one more than before as we don't want to have overlaps in loops\n                for (i=0; i<this._groupLabels.length; i++) {\n                    var mid = 0;\n                    var count = 0;\n                    for (var j=i*step; j<(i+1)*step; j++) { // j must never reach (i+1)*step as we don't want to have overlap between loops\n                        if (j >= this._ticks.length-1) continue; // the last tick does not exist as there is no other group in order to have an empty one.\n                        if (this._ticks[j]._elem && this._ticks[j].label != \" \") {\n                            var t = this._ticks[j]._elem;\n                            var p = t.position();\n                            mid += p.top + t.outerHeight()/2;\n                            count++;\n                        }\n                    }\n                    mid = mid/count;\n                    this._groupLabels[i].css({'top':mid - this._groupLabels[i].outerHeight()/2});\n                    this._groupLabels[i].css(labeledge[0], labeledge[1]);\n                    \n                }\n            }\n        }\n    };    \n    \n    \n})(jQuery);\n","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    \n    /**\n     * Class: $.jqplot.Cursor\n     * Plugin class representing the cursor as displayed on the plot.\n     */\n    $.jqplot.Cursor = function(options) {\n        // Group: Properties\n        //\n        // prop: style\n        // CSS spec for cursor style\n        this.style = 'crosshair';\n        this.previousCursor = 'auto';\n        // prop: show\n        // whether to show the cursor or not.\n        this.show = $.jqplot.config.enablePlugins;\n        // prop: showTooltip\n        // show a cursor position tooltip.  Location of the tooltip\n        // will be controlled by followMouse and tooltipLocation.\n        this.showTooltip = true;\n        // prop: followMouse\n        // Tooltip follows the mouse, it is not at a fixed location.\n        // Tooltip will show on the grid at the location given by\n        // tooltipLocation, offset from the grid edge by tooltipOffset.\n        this.followMouse = false;\n        // prop: tooltipLocation\n        // Where to position tooltip.  If followMouse is true, this is\n        // relative to the cursor, otherwise, it is relative to the grid.\n        // One of 'n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'\n        this.tooltipLocation = 'se';\n        // prop: tooltipOffset\n        // Pixel offset of tooltip from the grid boudaries or cursor center.\n        this.tooltipOffset = 6;\n        // prop: showTooltipGridPosition\n        // show the grid pixel coordinates of the mouse.\n        this.showTooltipGridPosition = false;\n        // prop: showTooltipUnitPosition\n        // show the unit (data) coordinates of the mouse.\n        this.showTooltipUnitPosition = true;\n        // prop: showTooltipDataPosition\n        // Used with showVerticalLine to show intersecting data points in the tooltip.\n        this.showTooltipDataPosition = false;\n        // prop: tooltipFormatString\n        // sprintf format string for the tooltip.\n        // Uses Ash Searle's javascript sprintf implementation\n        // found here: http://hexmen.com/blog/2007/03/printf-sprintf/\n        // See http://perldoc.perl.org/functions/sprintf.html for reference\n        // Note, if showTooltipDataPosition is true, the default tooltipFormatString\n        // will be set to the cursorLegendFormatString, not the default given here.\n        this.tooltipFormatString = '%.4P, %.4P';\n        // prop: useAxesFormatters\n        // Use the x and y axes formatters to format the text in the tooltip.\n        this.useAxesFormatters = true;\n        // prop: tooltipAxisGroups\n        // Show position for the specified axes.\n        // This is an array like [['xaxis', 'yaxis'], ['xaxis', 'y2axis']]\n        // Default is to compute automatically for all visible axes.\n        this.tooltipAxisGroups = [];\n        // prop: zoom\n        // Enable plot zooming.\n        this.zoom = false;\n        // zoomProxy and zoomTarget properties are not directly set by user.  \n        // They Will be set through call to zoomProxy method.\n        this.zoomProxy = false;\n        this.zoomTarget = false;\n        // prop: looseZoom\n        // Will expand zoom range to provide more rounded tick values.\n        // Works only with linear, log and date axes.\n        this.looseZoom = true;\n        // prop: clickReset\n        // Will reset plot zoom if single click on plot without drag.\n        this.clickReset = false;\n        // prop: dblClickReset\n        // Will reset plot zoom if double click on plot without drag.\n        this.dblClickReset = true;\n        // prop: showVerticalLine\n        // draw a vertical line across the plot which follows the cursor.\n        // When the line is near a data point, a special legend and/or tooltip can\n        // be updated with the data values.\n        this.showVerticalLine = false;\n        // prop: showHorizontalLine\n        // draw a horizontal line across the plot which follows the cursor.\n        this.showHorizontalLine = false;\n        // prop: constrainZoomTo\n        // 'none', 'x' or 'y'\n        this.constrainZoomTo = 'none';\n        // // prop: autoscaleConstraint\n        // // when a constrained axis is specified, true will\n        // // auatoscale the adjacent axis.\n        // this.autoscaleConstraint = true;\n        this.shapeRenderer = new $.jqplot.ShapeRenderer();\n        this._zoom = {start:[], end:[], started: false, zooming:false, isZoomed:false, axes:{start:{}, end:{}}, gridpos:{}, datapos:{}};\n        this._tooltipElem;\n        this.zoomCanvas;\n        this.cursorCanvas;\n        // prop: intersectionThreshold\n        // pixel distance from data point or marker to consider cursor lines intersecting with point.\n        // If data point markers are not shown, this should be >= 1 or will often miss point intersections.\n        this.intersectionThreshold = 2;\n        // prop: showCursorLegend\n        // Replace the plot legend with an enhanced legend displaying intersection information.\n        this.showCursorLegend = false;\n        // prop: cursorLegendFormatString\n        // Format string used in the cursor legend.  If showTooltipDataPosition is true,\n        // this will also be the default format string used by tooltipFormatString.\n        this.cursorLegendFormatString = $.jqplot.Cursor.cursorLegendFormatString;\n        // whether the cursor is over the grid or not.\n        this._oldHandlers = {onselectstart: null, ondrag: null, onmousedown: null};\n        // prop: constrainOutsideZoom\n        // True to limit actual zoom area to edges of grid, even when zooming\n        // outside of plot area.  That is, can't zoom out by mousing outside plot.\n        this.constrainOutsideZoom = true;\n        // prop: showTooltipOutsideZoom\n        // True will keep updating the tooltip when zooming of the grid.\n        this.showTooltipOutsideZoom = false;\n        // true if mouse is over grid, false if not.\n        this.onGrid = false;\n        $.extend(true, this, options);\n    };\n    \n    $.jqplot.Cursor.cursorLegendFormatString = '%s x:%s, y:%s';\n    \n    // called with scope of plot\n    $.jqplot.Cursor.init = function (target, data, opts){\n        // add a cursor attribute to the plot\n        var options = opts || {};\n        this.plugins.cursor = new $.jqplot.Cursor(options.cursor);\n        var c = this.plugins.cursor;\n\n        if (c.show) {\n            $.jqplot.eventListenerHooks.push(['jqplotMouseEnter', handleMouseEnter]);\n            $.jqplot.eventListenerHooks.push(['jqplotMouseLeave', handleMouseLeave]);\n            $.jqplot.eventListenerHooks.push(['jqplotMouseMove', handleMouseMove]);\n            \n            if (c.showCursorLegend) {              \n                opts.legend = opts.legend || {};\n                opts.legend.renderer =  $.jqplot.CursorLegendRenderer;\n                opts.legend.formatString = this.plugins.cursor.cursorLegendFormatString;\n                opts.legend.show = true;\n            }\n            \n            if (c.zoom) {\n                $.jqplot.eventListenerHooks.push(['jqplotMouseDown', handleMouseDown]);\n                \n                if (c.clickReset) {\n                    $.jqplot.eventListenerHooks.push(['jqplotClick', handleClick]);\n                }\n                \n                if (c.dblClickReset) {\n                    $.jqplot.eventListenerHooks.push(['jqplotDblClick', handleDblClick]);\n                }             \n            }\n    \n            this.resetZoom = function() {\n                var axes = this.axes;\n                if (!c.zoomProxy) {\n                    for (var ax in axes) {\n                        axes[ax].reset();\n                        axes[ax]._ticks = [];\n                        // fake out tick creation algorithm to make sure original auto\n                        // computed format string is used if _overrideFormatString is true\n                        if (c._zoom.axes[ax] !== undefined) {\n                            axes[ax]._autoFormatString = c._zoom.axes[ax].tickFormatString;\n                        }\n                    }\n                    this.redraw();\n                }\n                else {\n                    var ctx = this.plugins.cursor.zoomCanvas._ctx;\n                    ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n                    ctx = null;\n                }\n                this.plugins.cursor._zoom.isZoomed = false;\n                this.target.trigger('jqplotResetZoom', [this, this.plugins.cursor]);\n            };\n            \n\n            if (c.showTooltipDataPosition) {\n                c.showTooltipUnitPosition = false;\n                c.showTooltipGridPosition = false;\n                if (options.cursor.tooltipFormatString == undefined) {\n                    c.tooltipFormatString = $.jqplot.Cursor.cursorLegendFormatString;\n                }\n            }\n        }\n    };\n    \n    // called with context of plot\n    $.jqplot.Cursor.postDraw = function() {\n        var c = this.plugins.cursor;\n        \n        // Memory Leaks patch\n        if (c.zoomCanvas) {\n            c.zoomCanvas.resetCanvas();\n            c.zoomCanvas = null;\n        }\n        \n        if (c.cursorCanvas) {\n            c.cursorCanvas.resetCanvas();\n            c.cursorCanvas = null;\n        }\n        \n        if (c._tooltipElem) {\n            c._tooltipElem.emptyForce();\n            c._tooltipElem = null;\n        }\n\n        \n        if (c.zoom) {\n            c.zoomCanvas = new $.jqplot.GenericCanvas();\n            this.eventCanvas._elem.before(c.zoomCanvas.createElement(this._gridPadding, 'jqplot-zoom-canvas', this._plotDimensions, this));\n            c.zoomCanvas.setContext();\n        }\n\n        var elem = document.createElement('div');\n        c._tooltipElem = $(elem);\n        elem = null;\n        c._tooltipElem.addClass('jqplot-cursor-tooltip');\n        c._tooltipElem.css({position:'absolute', display:'none'});\n        \n        \n        if (c.zoomCanvas) {\n            c.zoomCanvas._elem.before(c._tooltipElem);\n        }\n\n        else {\n            this.eventCanvas._elem.before(c._tooltipElem);\n        }\n\n        if (c.showVerticalLine || c.showHorizontalLine) {\n            c.cursorCanvas = new $.jqplot.GenericCanvas();\n            this.eventCanvas._elem.before(c.cursorCanvas.createElement(this._gridPadding, 'jqplot-cursor-canvas', this._plotDimensions, this));\n            c.cursorCanvas.setContext();\n        }\n\n        // if we are showing the positions in unit coordinates, and no axes groups\n        // were specified, create a default set.\n        if (c.showTooltipUnitPosition){\n            if (c.tooltipAxisGroups.length === 0) {\n                var series = this.series;\n                var s;\n                var temp = [];\n                for (var i=0; i<series.length; i++) {\n                    s = series[i];\n                    var ax = s.xaxis+','+s.yaxis;\n                    if ($.inArray(ax, temp) == -1) {\n                        temp.push(ax);\n                    }\n                }\n                for (var i=0; i<temp.length; i++) {\n                    c.tooltipAxisGroups.push(temp[i].split(','));\n                }\n            }\n        }\n    };\n    \n    // Group: methods\n    //\n    // method: $.jqplot.Cursor.zoomProxy\n    // links targetPlot to controllerPlot so that plot zooming of\n    // targetPlot will be controlled by zooming on the controllerPlot.\n    // controllerPlot will not actually zoom, but acts as an\n    // overview plot.  Note, the zoom options must be set to true for\n    // zoomProxy to work.\n    $.jqplot.Cursor.zoomProxy = function(targetPlot, controllerPlot) {\n        var tc = targetPlot.plugins.cursor;\n        var cc = controllerPlot.plugins.cursor;\n        tc.zoomTarget = true;\n        tc.zoom = true;\n        tc.style = 'auto';\n        tc.dblClickReset = false;\n        cc.zoom = true;\n        cc.zoomProxy = true;\n              \n        controllerPlot.target.bind('jqplotZoom', plotZoom);\n        controllerPlot.target.bind('jqplotResetZoom', plotReset);\n\n        function plotZoom(ev, gridpos, datapos, plot, cursor) {\n            tc.doZoom(gridpos, datapos, targetPlot, cursor);\n        } \n\n        function plotReset(ev, plot, cursor) {\n            targetPlot.resetZoom();\n        }\n    };\n    \n    $.jqplot.Cursor.prototype.resetZoom = function(plot, cursor) {\n        var axes = plot.axes;\n        var cax = cursor._zoom.axes;\n        if (!plot.plugins.cursor.zoomProxy && cursor._zoom.isZoomed) {\n            for (var ax in axes) {\n                // axes[ax]._ticks = [];\n                // axes[ax].min = cax[ax].min;\n                // axes[ax].max = cax[ax].max;\n                // axes[ax].numberTicks = cax[ax].numberTicks; \n                // axes[ax].tickInterval = cax[ax].tickInterval;\n                // // for date axes\n                // axes[ax].daTickInterval = cax[ax].daTickInterval;\n                axes[ax].reset();\n                axes[ax]._ticks = [];\n                // fake out tick creation algorithm to make sure original auto\n                // computed format string is used if _overrideFormatString is true\n                axes[ax]._autoFormatString = cax[ax].tickFormatString;\n            }\n            plot.redraw();\n            cursor._zoom.isZoomed = false;\n        }\n        else {\n            var ctx = cursor.zoomCanvas._ctx;\n            ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n            ctx = null;\n        }\n        plot.target.trigger('jqplotResetZoom', [plot, cursor]);\n    };\n    \n    $.jqplot.Cursor.resetZoom = function(plot) {\n        plot.resetZoom();\n    };\n    \n    $.jqplot.Cursor.prototype.doZoom = function (gridpos, datapos, plot, cursor) {\n        var c = cursor;\n        var axes = plot.axes;\n        var zaxes = c._zoom.axes;\n        var start = zaxes.start;\n        var end = zaxes.end;\n        var min, max, dp, span,\n            newmin, newmax, curax, _numberTicks, ret;\n        var ctx = plot.plugins.cursor.zoomCanvas._ctx;\n        // don't zoom if zoom area is too small (in pixels)\n        if ((c.constrainZoomTo == 'none' && Math.abs(gridpos.x - c._zoom.start[0]) > 6 && Math.abs(gridpos.y - c._zoom.start[1]) > 6) || (c.constrainZoomTo == 'x' && Math.abs(gridpos.x - c._zoom.start[0]) > 6) ||  (c.constrainZoomTo == 'y' && Math.abs(gridpos.y - c._zoom.start[1]) > 6)) {\n            if (!plot.plugins.cursor.zoomProxy) {\n                for (var ax in datapos) {\n                    // make a copy of the original axes to revert back.\n                    if (c._zoom.axes[ax] == undefined) {\n                        c._zoom.axes[ax] = {};\n                        c._zoom.axes[ax].numberTicks = axes[ax].numberTicks;\n                        c._zoom.axes[ax].tickInterval = axes[ax].tickInterval;\n                        // for date axes...\n                        c._zoom.axes[ax].daTickInterval = axes[ax].daTickInterval;\n                        c._zoom.axes[ax].min = axes[ax].min;\n                        c._zoom.axes[ax].max = axes[ax].max;\n                        c._zoom.axes[ax].tickFormatString = (axes[ax].tickOptions != null) ? axes[ax].tickOptions.formatString :  '';\n                    }\n\n\n                    if ((c.constrainZoomTo == 'none') || (c.constrainZoomTo == 'x' && ax.charAt(0) == 'x') || (c.constrainZoomTo == 'y' && ax.charAt(0) == 'y')) {   \n                        dp = datapos[ax];\n                        if (dp != null) {           \n                            if (dp > start[ax]) { \n                                newmin = start[ax];\n                                newmax = dp;\n                            }\n                            else {\n                                span = start[ax] - dp;\n                                newmin = dp;\n                                newmax = start[ax];\n                            }\n\n                            curax = axes[ax];\n\n                            _numberTicks = null;\n\n                            // if aligning this axis, use number of ticks from previous axis.\n                            // Do I need to reset somehow if alignTicks is changed and then graph is replotted??\n                            if (curax.alignTicks) {\n                                if (curax.name === 'x2axis' && plot.axes.xaxis.show) {\n                                    _numberTicks = plot.axes.xaxis.numberTicks;\n                                }\n                                else if (curax.name.charAt(0) === 'y' && curax.name !== 'yaxis' && curax.name !== 'yMidAxis' && plot.axes.yaxis.show) {\n                                    _numberTicks = plot.axes.yaxis.numberTicks;\n                                }\n                            }\n                            \n                            if (this.looseZoom && (axes[ax].renderer.constructor === $.jqplot.LinearAxisRenderer || axes[ax].renderer.constructor === $.jqplot.LogAxisRenderer )) { //} || axes[ax].renderer.constructor === $.jqplot.DateAxisRenderer)) {\n\n                                ret = $.jqplot.LinearTickGenerator(newmin, newmax, curax._scalefact, _numberTicks);\n\n                                // if new minimum is less than \"true\" minimum of axis display, adjust it\n                                if (axes[ax].tickInset && ret[0] < axes[ax].min + axes[ax].tickInset * axes[ax].tickInterval) {\n                                    ret[0] += ret[4];\n                                    ret[2] -= 1;\n                                }\n\n                                // if new maximum is greater than \"true\" max of axis display, adjust it\n                                if (axes[ax].tickInset && ret[1] > axes[ax].max - axes[ax].tickInset * axes[ax].tickInterval) {\n                                    ret[1] -= ret[4];\n                                    ret[2] -= 1;\n                                }\n\n                                // for log axes, don't fall below current minimum, this will look bad and can't have 0 in range anyway.\n                                if (axes[ax].renderer.constructor === $.jqplot.LogAxisRenderer && ret[0] < axes[ax].min) {\n                                    // remove a tick and shift min up\n                                    ret[0] += ret[4];\n                                    ret[2] -= 1;\n                                }\n\n                                axes[ax].min = ret[0];\n                                axes[ax].max = ret[1];\n                                axes[ax]._autoFormatString = ret[3];\n                                axes[ax].numberTicks = ret[2];\n                                axes[ax].tickInterval = ret[4];\n                                // for date axes...\n                                axes[ax].daTickInterval = [ret[4]/1000, 'seconds'];\n                            }\n                            else {\n                                axes[ax].min = newmin;\n                                axes[ax].max = newmax;\n                                axes[ax].tickInterval = null;\n                                axes[ax].numberTicks = null;\n                                // for date axes...\n                                axes[ax].daTickInterval = null;\n                            }\n\n                            axes[ax]._ticks = [];\n                        }\n                    }\n                }\n                for (var ax in datapos) {\n                    if ((c.constrainZoomTo == 'x' && ax.charAt(0) == 'y' && c.autoscaleConstraint)) {\n                        dp = datapos[ax];\n                        if (dp != null) {\n                            curax = axes[ax];\n                            \n                            curax.min = axes[ax]._options.min;\n                            curax.max = axes[ax]._options.max;\n                            \n                            if (axes[ax]._options.min == null || axes[ax]._options.max == null) {\n                                var seriesMin = null;\n                                var seriesMax = null;\n                                $.each(plot.series, function(seriesIdx, seriesObj) {\n                                   if (seriesObj.yaxis == ax) {\n                                       var xaxis = axes[seriesObj.xaxis];\n                                       var i;\n                                       var d = seriesObj._plotData;\n                                       for (i = 0; i < d.length; i++) {\n                                           var point = d[i];\n                                           if (point[0] >= xaxis.min && point[0] <= xaxis.max) {\n                                               if (seriesMin == null || point[1] < seriesMin) {\n                                                   seriesMin = point[1];\n                                               }\n                                               if (seriesMax == null || point[1] > seriesMax) {\n                                                   seriesMax = point[1];\n                                               }\n                                           }\n                                       }\n                                   }\n                                });\n                                \n                                if (axes[ax]._options.min != null) {\n                                    seriesMin = axes[ax]._options.min;\n                                }\n                                if (axes[ax]._options.max != null) {\n                                    seriesMax = axes[ax]._options.max;\n                                }\n                                var r = $.jqplot.LinearTickGenerator(seriesMin, seriesMax, null, null, (axes[ax]._options.min != null), (axes[ax]._options.max != null));\n                                curax.min = r[0];\n                                curax.max = r[1];\n                                curax.tickInterval = null;\n                                curax.numberTicks = null;\n                            }\n                        }\n                    }\n                }\n                ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n                plot.redraw();\n                c._zoom.isZoomed = true;\n                ctx = null;\n            }\n            plot.target.trigger('jqplotZoom', [gridpos, datapos, plot, cursor]);\n        }\n    };\n    \n    $.jqplot.preInitHooks.push($.jqplot.Cursor.init);\n    $.jqplot.postDrawHooks.push($.jqplot.Cursor.postDraw);\n    \n    function updateTooltip(gridpos, datapos, plot) {\n        var c = plot.plugins.cursor;\n        var s = '';\n        var addbr = false;\n        if (c.showTooltipGridPosition) {\n            s = gridpos.x+', '+gridpos.y;\n            addbr = true;\n        }\n        if (c.showTooltipUnitPosition) {\n            var g;\n            for (var i=0; i<c.tooltipAxisGroups.length; i++) {\n                g = c.tooltipAxisGroups[i];\n                if (addbr) {\n                    s += '<br />';\n                }\n                if (c.useAxesFormatters) {\n                    for (var j=0; j<g.length; j++) {\n                        if (j) {\n                            s += ', ';\n                        }\n                        var af = plot.axes[g[j]]._ticks[0].formatter;\n                        var afstr = plot.axes[g[j]]._ticks[0].formatString;\n                        s += af(afstr, datapos[g[j]]);\n                    }\n                }\n                else {\n                    s += $.jqplot.sprintf(c.tooltipFormatString, datapos[g[0]], datapos[g[1]]);\n                }\n                addbr = true;\n            }\n        }\n        \n        if (c.showTooltipDataPosition) {\n            var series = plot.series; \n            var ret = getIntersectingPoints(plot, gridpos.x, gridpos.y);\n            var addbr = false;\n        \n            for (var i = 0; i< series.length; i++) {\n                if (series[i].show) {\n                    var idx = series[i].index;\n                    var label = series[i].label.toString();\n                    var cellid = $.inArray(idx, ret.indices);\n                    var sx = undefined;\n                    var sy = undefined;\n                    if (cellid != -1) {\n                        var data = ret.data[cellid].data;\n                        if (c.useAxesFormatters) {\n                            var xf = series[i]._xaxis._ticks[0].formatter;\n                            var yf = series[i]._yaxis._ticks[0].formatter;\n                            var xfstr = series[i]._xaxis._ticks[0].formatString;\n                            var yfstr = series[i]._yaxis._ticks[0].formatString;\n                            sx = xf(xfstr, data[0]);\n                            sy = yf(yfstr, data[1]);\n                        }\n                        else {\n                            sx = data[0];\n                            sy = data[1];\n                        }\n                        if (addbr) {\n                            s += '<br />';\n                        }\n                        s += $.jqplot.sprintf(c.tooltipFormatString, label, sx, sy);\n                        addbr = true;\n                    }\n                }\n            }\n            \n        }\n        c._tooltipElem.html(s);\n    }\n    \n    function moveLine(gridpos, plot) {\n        var c = plot.plugins.cursor;\n        var ctx = c.cursorCanvas._ctx;\n        ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n        if (c.showVerticalLine) {\n            c.shapeRenderer.draw(ctx, [[gridpos.x, 0], [gridpos.x, ctx.canvas.height]]);\n        }\n        if (c.showHorizontalLine) {\n            c.shapeRenderer.draw(ctx, [[0, gridpos.y], [ctx.canvas.width, gridpos.y]]);\n        }\n        var ret = getIntersectingPoints(plot, gridpos.x, gridpos.y);\n        if (c.showCursorLegend) {\n            var cells = $(plot.targetId + ' td.jqplot-cursor-legend-label');\n            for (var i=0; i<cells.length; i++) {\n                var idx = $(cells[i]).data('seriesIndex');\n                var series = plot.series[idx];\n                var label = series.label.toString();\n                var cellid = $.inArray(idx, ret.indices);\n                var sx = undefined;\n                var sy = undefined;\n                if (cellid != -1) {\n                    var data = ret.data[cellid].data;\n                    if (c.useAxesFormatters) {\n                        var xf = series._xaxis._ticks[0].formatter;\n                        var yf = series._yaxis._ticks[0].formatter;\n                        var xfstr = series._xaxis._ticks[0].formatString;\n                        var yfstr = series._yaxis._ticks[0].formatString;\n                        sx = xf(xfstr, data[0]);\n                        sy = yf(yfstr, data[1]);\n                    }\n                    else {\n                        sx = data[0];\n                        sy = data[1];\n                    }\n                }\n                if (plot.legend.escapeHtml) {\n                    $(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString, label, sx, sy));\n                }\n                else {\n                    $(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString, label, sx, sy));\n                }\n            }        \n        }\n        ctx = null;\n    }\n        \n    function getIntersectingPoints(plot, x, y) {\n        var ret = {indices:[], data:[]};\n        var s, i, d0, d, j, r, p;\n        var threshold;\n        var c = plot.plugins.cursor;\n        for (var i=0; i<plot.series.length; i++) {\n            s = plot.series[i];\n            r = s.renderer;\n            if (s.show) {\n                threshold = c.intersectionThreshold;\n                if (s.showMarker) {\n                    threshold += s.markerRenderer.size/2;\n                }\n                for (var j=0; j<s.gridData.length; j++) {\n                    p = s.gridData[j];\n                    // check vertical line\n                    if (c.showVerticalLine) {\n                        if (Math.abs(x-p[0]) <= threshold) {\n                            ret.indices.push(i);\n                            ret.data.push({seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]});\n                        }\n                    }\n                } \n            }\n        }\n        return ret;\n    }\n    \n    function moveTooltip(gridpos, plot) {\n        var c = plot.plugins.cursor;  \n        var elem = c._tooltipElem;\n        switch (c.tooltipLocation) {\n            case 'nw':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top - c.tooltipOffset - elem.outerHeight(true);\n                break;\n            case 'n':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true)/2;\n                var y = gridpos.y + plot._gridPadding.top - c.tooltipOffset - elem.outerHeight(true);\n                break;\n            case 'ne':\n                var x = gridpos.x + plot._gridPadding.left + c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top - c.tooltipOffset - elem.outerHeight(true);\n                break;\n            case 'e':\n                var x = gridpos.x + plot._gridPadding.left + c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top - elem.outerHeight(true)/2;\n                break;\n            case 'se':\n                var x = gridpos.x + plot._gridPadding.left + c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top + c.tooltipOffset;\n                break;\n            case 's':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true)/2;\n                var y = gridpos.y + plot._gridPadding.top + c.tooltipOffset;\n                break;\n            case 'sw':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top + c.tooltipOffset;\n                break;\n            case 'w':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top - elem.outerHeight(true)/2;\n                break;\n            default:\n                var x = gridpos.x + plot._gridPadding.left + c.tooltipOffset;\n                var y = gridpos.y + plot._gridPadding.top + c.tooltipOffset;\n                break;\n        }\n            \n        elem.css('left', x);\n        elem.css('top', y);\n        elem = null;\n    }\n    \n    function positionTooltip(plot) { \n        // fake a grid for positioning\n        var grid = plot._gridPadding; \n        var c = plot.plugins.cursor;\n        var elem = c._tooltipElem;  \n        switch (c.tooltipLocation) {\n            case 'nw':\n                var a = grid.left + c.tooltipOffset;\n                var b = grid.top + c.tooltipOffset;\n                elem.css('left', a);\n                elem.css('top', b);\n                break;\n            case 'n':\n                var a = (grid.left + (plot._plotDimensions.width - grid.right))/2 - elem.outerWidth(true)/2;\n                var b = grid.top + c.tooltipOffset;\n                elem.css('left', a);\n                elem.css('top', b);\n                break;\n            case 'ne':\n                var a = grid.right + c.tooltipOffset;\n                var b = grid.top + c.tooltipOffset;\n                elem.css({right:a, top:b});\n                break;\n            case 'e':\n                var a = grid.right + c.tooltipOffset;\n                var b = (grid.top + (plot._plotDimensions.height - grid.bottom))/2 - elem.outerHeight(true)/2;\n                elem.css({right:a, top:b});\n                break;\n            case 'se':\n                var a = grid.right + c.tooltipOffset;\n                var b = grid.bottom + c.tooltipOffset;\n                elem.css({right:a, bottom:b});\n                break;\n            case 's':\n                var a = (grid.left + (plot._plotDimensions.width - grid.right))/2 - elem.outerWidth(true)/2;\n                var b = grid.bottom + c.tooltipOffset;\n                elem.css({left:a, bottom:b});\n                break;\n            case 'sw':\n                var a = grid.left + c.tooltipOffset;\n                var b = grid.bottom + c.tooltipOffset;\n                elem.css({left:a, bottom:b});\n                break;\n            case 'w':\n                var a = grid.left + c.tooltipOffset;\n                var b = (grid.top + (plot._plotDimensions.height - grid.bottom))/2 - elem.outerHeight(true)/2;\n                elem.css({left:a, top:b});\n                break;\n            default:  // same as 'se'\n                var a = grid.right - c.tooltipOffset;\n                var b = grid.bottom + c.tooltipOffset;\n                elem.css({right:a, bottom:b});\n                break;\n        }\n        elem = null;\n    }\n    \n    function handleClick (ev, gridpos, datapos, neighbor, plot) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n        var c = plot.plugins.cursor;\n        if (c.clickReset) {\n            c.resetZoom(plot, c);\n        }\n        var sel = window.getSelection;\n        if (document.selection && document.selection.empty)\n        {\n            document.selection.empty();\n        }\n        else if (sel && !sel().isCollapsed) {\n            sel().collapse();\n        }\n        return false;\n    }\n    \n    function handleDblClick (ev, gridpos, datapos, neighbor, plot) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n        var c = plot.plugins.cursor;\n        if (c.dblClickReset) {\n            c.resetZoom(plot, c);\n        }\n        var sel = window.getSelection;\n        if (document.selection && document.selection.empty)\n        {\n            document.selection.empty();\n        }\n        else if (sel && !sel().isCollapsed) {\n            sel().collapse();\n        }\n        return false;\n    }\n    \n    function handleMouseLeave(ev, gridpos, datapos, neighbor, plot) {\n        var c = plot.plugins.cursor;\n        c.onGrid = false;\n        if (c.show) {\n            $(ev.target).css('cursor', c.previousCursor);\n            if (c.showTooltip && !(c._zoom.zooming && c.showTooltipOutsideZoom && !c.constrainOutsideZoom)) {\n                c._tooltipElem.empty();\n                c._tooltipElem.hide();\n            }\n            if (c.zoom) {\n                c._zoom.gridpos = gridpos;\n                c._zoom.datapos = datapos;\n            }\n            if (c.showVerticalLine || c.showHorizontalLine) {\n                var ctx = c.cursorCanvas._ctx;\n                ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n                ctx = null;\n            }\n            if (c.showCursorLegend) {\n                var cells = $(plot.targetId + ' td.jqplot-cursor-legend-label');\n                for (var i=0; i<cells.length; i++) {\n                    var idx = $(cells[i]).data('seriesIndex');\n                    var series = plot.series[idx];\n                    var label = series.label.toString();\n                    if (plot.legend.escapeHtml) {\n                        $(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString, label, undefined, undefined));\n                    }\n                    else {\n                        $(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString, label, undefined, undefined));\n                    }\n                \n                }        \n            }\n        }\n    }\n    \n    function handleMouseEnter(ev, gridpos, datapos, neighbor, plot) {\n        var c = plot.plugins.cursor;\n        c.onGrid = true;\n        if (c.show) {\n            c.previousCursor = ev.target.style.cursor;\n            ev.target.style.cursor = c.style;\n            if (c.showTooltip) {\n                updateTooltip(gridpos, datapos, plot);\n                if (c.followMouse) {\n                    moveTooltip(gridpos, plot);\n                }\n                else {\n                    positionTooltip(plot);\n                }\n                c._tooltipElem.show();\n            }\n            if (c.showVerticalLine || c.showHorizontalLine) {\n                moveLine(gridpos, plot);\n            }\n        }\n\n    }    \n    \n    function handleMouseMove(ev, gridpos, datapos, neighbor, plot) {\n        var c = plot.plugins.cursor;\n        if (c.show) {\n            if (c.showTooltip) {\n                updateTooltip(gridpos, datapos, plot);\n                if (c.followMouse) {\n                    moveTooltip(gridpos, plot);\n                }\n            }\n            if (c.showVerticalLine || c.showHorizontalLine) {\n                moveLine(gridpos, plot);\n            }\n        }\n    }\n            \n    function getEventPosition(ev) {\n        var plot = ev.data.plot;\n        var go = plot.eventCanvas._elem.offset();\n        var gridPos = {x:ev.pageX - go.left, y:ev.pageY - go.top};\n        //////\n        // TO DO: handle yMidAxis\n        //////\n        var dataPos = {xaxis:null, yaxis:null, x2axis:null, y2axis:null, y3axis:null, y4axis:null, y5axis:null, y6axis:null, y7axis:null, y8axis:null, y9axis:null, yMidAxis:null};\n        var an = ['xaxis', 'yaxis', 'x2axis', 'y2axis', 'y3axis', 'y4axis', 'y5axis', 'y6axis', 'y7axis', 'y8axis', 'y9axis', 'yMidAxis'];\n        var ax = plot.axes;\n        var n, axis;\n        for (n=11; n>0; n--) {\n            axis = an[n-1];\n            if (ax[axis].show) {\n                dataPos[axis] = ax[axis].series_p2u(gridPos[axis.charAt(0)]);\n            }\n        }\n\n        return {offsets:go, gridPos:gridPos, dataPos:dataPos};\n    }    \n    \n    function handleZoomMove(ev) {\n        var plot = ev.data.plot;\n        var c = plot.plugins.cursor;\n        // don't do anything if not on grid.\n        if (c.show && c.zoom && c._zoom.started && !c.zoomTarget) {\n            ev.preventDefault();\n            var ctx = c.zoomCanvas._ctx;\n            var positions = getEventPosition(ev);\n            var gridpos = positions.gridPos;\n            var datapos = positions.dataPos;\n            c._zoom.gridpos = gridpos;\n            c._zoom.datapos = datapos;\n            c._zoom.zooming = true;\n            var xpos = gridpos.x;\n            var ypos = gridpos.y;\n            var height = ctx.canvas.height;\n            var width = ctx.canvas.width;\n            if (c.showTooltip && !c.onGrid && c.showTooltipOutsideZoom) {\n                updateTooltip(gridpos, datapos, plot);\n                if (c.followMouse) {\n                    moveTooltip(gridpos, plot);\n                }\n            }\n            if (c.constrainZoomTo == 'x') {\n                c._zoom.end = [xpos, height];\n            }\n            else if (c.constrainZoomTo == 'y') {\n                c._zoom.end = [width, ypos];\n            }\n            else {\n                c._zoom.end = [xpos, ypos];\n            }\n            var sel = window.getSelection;\n            if (document.selection && document.selection.empty)\n            {\n                document.selection.empty();\n            }\n            else if (sel && !sel().isCollapsed) {\n                sel().collapse();\n            }\n            drawZoomBox.call(c);\n            ctx = null;\n        }\n    }\n    \n    function handleMouseDown(ev, gridpos, datapos, neighbor, plot) {\n        var c = plot.plugins.cursor;\n        if(plot.plugins.mobile){\n            $(document).one('vmouseup.jqplot_cursor', {plot:plot}, handleMouseUp);\n        } else {\n            $(document).one('mouseup.jqplot_cursor', {plot:plot}, handleMouseUp);\n        }\n        var axes = plot.axes;\n        if (document.onselectstart != undefined) {\n            c._oldHandlers.onselectstart = document.onselectstart;\n            document.onselectstart = function () { return false; };\n        }\n        if (document.ondrag != undefined) {\n            c._oldHandlers.ondrag = document.ondrag;\n            document.ondrag = function () { return false; };\n        }\n        if (document.onmousedown != undefined) {\n            c._oldHandlers.onmousedown = document.onmousedown;\n            document.onmousedown = function () { return false; };\n        }\n        if (c.zoom) {\n            if (!c.zoomProxy) {\n                var ctx = c.zoomCanvas._ctx;\n                ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n                ctx = null;\n            }\n            if (c.constrainZoomTo == 'x') {\n                c._zoom.start = [gridpos.x, 0];\n            }\n            else if (c.constrainZoomTo == 'y') {\n                c._zoom.start = [0, gridpos.y];\n            }\n            else {\n                c._zoom.start = [gridpos.x, gridpos.y];\n            }\n            c._zoom.started = true;\n            for (var ax in datapos) {\n                // get zoom starting position.\n                c._zoom.axes.start[ax] = datapos[ax];\n            }  \n           if(plot.plugins.mobile){\n                $(document).bind('vmousemove.jqplotCursor', {plot:plot}, handleZoomMove);              \n            } else {\n                $(document).bind('mousemove.jqplotCursor', {plot:plot}, handleZoomMove);              \n            }\n\n        }\n    }\n    \n    function handleMouseUp(ev) {\n        var plot = ev.data.plot;\n        var c = plot.plugins.cursor;\n        if (c.zoom && c._zoom.zooming && !c.zoomTarget) {\n            var xpos = c._zoom.gridpos.x;\n            var ypos = c._zoom.gridpos.y;\n            var datapos = c._zoom.datapos;\n            var height = c.zoomCanvas._ctx.canvas.height;\n            var width = c.zoomCanvas._ctx.canvas.width;\n            var axes = plot.axes;\n            \n            if (c.constrainOutsideZoom && !c.onGrid) {\n                if (xpos < 0) { xpos = 0; }\n                else if (xpos > width) { xpos = width; }\n                if (ypos < 0) { ypos = 0; }\n                else if (ypos > height) { ypos = height; }\n                \n                for (var axis in datapos) {\n                    if (datapos[axis]) {\n                        if (axis.charAt(0) == 'x') {\n                            datapos[axis] = axes[axis].series_p2u(xpos);\n                        }\n                        else {\n                            datapos[axis] = axes[axis].series_p2u(ypos);\n                        }\n                    }\n                }\n            }\n            \n            if (c.constrainZoomTo == 'x') {\n                ypos = height;\n            }\n            else if (c.constrainZoomTo == 'y') {\n                xpos = width;\n            }\n            c._zoom.end = [xpos, ypos];\n            c._zoom.gridpos = {x:xpos, y:ypos};\n            \n            c.doZoom(c._zoom.gridpos, datapos, plot, c);\n        }\n        c._zoom.started = false;\n        c._zoom.zooming = false;\n        \n        $(document).unbind('mousemove.jqplotCursor', handleZoomMove);\n        \n        if (document.onselectstart != undefined && c._oldHandlers.onselectstart != null){\n            document.onselectstart = c._oldHandlers.onselectstart;\n            c._oldHandlers.onselectstart = null;\n        }\n        if (document.ondrag != undefined && c._oldHandlers.ondrag != null){\n            document.ondrag = c._oldHandlers.ondrag;\n            c._oldHandlers.ondrag = null;\n        }\n        if (document.onmousedown != undefined && c._oldHandlers.onmousedown != null){\n            document.onmousedown = c._oldHandlers.onmousedown;\n            c._oldHandlers.onmousedown = null;\n        }\n\n    }\n    \n    function drawZoomBox() {\n        var start = this._zoom.start;\n        var end = this._zoom.end;\n        var ctx = this.zoomCanvas._ctx;\n        var l, t, h, w;\n        if (end[0] > start[0]) {\n            l = start[0];\n            w = end[0] - start[0];\n        }\n        else {\n            l = end[0];\n            w = start[0] - end[0];\n        }\n        if (end[1] > start[1]) {\n            t = start[1];\n            h = end[1] - start[1];\n        }\n        else {\n            t = end[1];\n            h = start[1] - end[1];\n        }\n        ctx.fillStyle = 'rgba(0,0,0,0.2)';\n        ctx.strokeStyle = '#999999';\n        ctx.lineWidth = 1.0;\n        ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n        ctx.fillRect(0,0,ctx.canvas.width, ctx.canvas.height);\n        ctx.clearRect(l, t, w, h);\n        // IE won't show transparent fill rect, so stroke a rect also.\n        ctx.strokeRect(l,t,w,h);\n        ctx = null;\n    }\n    \n    $.jqplot.CursorLegendRenderer = function(options) {\n        $.jqplot.TableLegendRenderer.call(this, options);\n        this.formatString = '%s';\n    };\n    \n    $.jqplot.CursorLegendRenderer.prototype = new $.jqplot.TableLegendRenderer();\n    $.jqplot.CursorLegendRenderer.prototype.constructor = $.jqplot.CursorLegendRenderer;\n    \n    // called in context of a Legend\n    $.jqplot.CursorLegendRenderer.prototype.draw = function() {\n        if (this._elem) {\n            this._elem.emptyForce();\n            this._elem = null;\n        }\n        if (this.show) {\n            var series = this._series, s;\n            // make a table.  one line label per row.\n            var elem = document.createElement('table');\n            this._elem = $(elem);\n            elem = null;\n            this._elem.addClass('jqplot-legend jqplot-cursor-legend');\n            this._elem.css('position', 'absolute');\n        \n            var pad = false;\n            for (var i = 0; i< series.length; i++) {\n                s = series[i];\n                if (s.show && s.showLabel) {\n                    var lt = $.jqplot.sprintf(this.formatString, s.label.toString());\n                    if (lt) {\n                        var color = s.color;\n                        if (s._stack && !s.fill) {\n                            color = '';\n                        }\n                        addrow.call(this, lt, color, pad, i);\n                        pad = true;\n                    }\n                    // let plugins add more rows to legend.  Used by trend line plugin.\n                    for (var j=0; j<$.jqplot.addLegendRowHooks.length; j++) {\n                        var item = $.jqplot.addLegendRowHooks[j].call(this, s);\n                        if (item) {\n                            addrow.call(this, item.label, item.color, pad);\n                            pad = true;\n                        } \n                    }\n                }\n            }\n            series = s = null;\n            delete series;\n            delete s;\n        }\n        \n        function addrow(label, color, pad, idx) {\n            var rs = (pad) ? this.rowSpacing : '0';\n            var tr = $('<tr class=\"jqplot-legend jqplot-cursor-legend\"></tr>').appendTo(this._elem);\n            tr.data('seriesIndex', idx);\n            $('<td class=\"jqplot-legend jqplot-cursor-legend-swatch\" style=\"padding-top:'+rs+';\">'+\n                '<div style=\"border:1px solid #cccccc;padding:0.2em;\">'+\n                '<div class=\"jqplot-cursor-legend-swatch\" style=\"background-color:'+color+';\"></div>'+\n                '</div></td>').appendTo(tr);\n            var td = $('<td class=\"jqplot-legend jqplot-cursor-legend-label\" style=\"vertical-align:middle;padding-top:'+rs+';\"></td>');\n            td.appendTo(tr);\n            td.data('seriesIndex', idx);\n            if (this.escapeHtml) {\n                td.text(label);\n            }\n            else {\n                td.html(label);\n            }\n            tr = null;\n            td = null;\n        }\n        return this._elem;\n    };\n    \n})(jQuery);\n","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {  \n    /**\n     * Class: $.jqplot.DateAxisRenderer\n     * A plugin for a jqPlot to render an axis as a series of date values.\n     * This renderer has no options beyond those supplied by the <Axis> class.\n     * It supplies its own tick formatter, so the tickOptions.formatter option\n     * should not be overridden.\n     * \n     * Thanks to Ken Synder for his enhanced Date instance methods which are\n     * included with this code <http://kendsnyder.com/sandbox/date/>.\n     * \n     * To use this renderer, include the plugin in your source\n     * > <script type=\"text/javascript\" language=\"javascript\" src=\"plugins/jqplot.dateAxisRenderer.js\"></script>\n     * \n     * and supply the appropriate options to your plot\n     * \n     * > {axes:{xaxis:{renderer:$.jqplot.DateAxisRenderer}}}\n     * \n     * Dates can be passed into the axis in almost any recognizable value and \n     * will be parsed.  They will be rendered on the axis in the format\n     * specified by tickOptions.formatString.  e.g. tickOptions.formatString = '%Y-%m-%d'.\n     * \n     * Accecptable format codes \n     * are:\n     * \n     * > Code    Result                  Description\n     * >             == Years ==\n     * > %Y      2008                Four-digit year\n     * > %y      08                  Two-digit year\n     * >             == Months ==\n     * > %m      09                  Two-digit month\n     * > %#m     9                   One or two-digit month\n     * > %B      September           Full month name\n     * > %b      Sep                 Abbreviated month name\n     * >             == Days ==\n     * > %d      05                  Two-digit day of month\n     * > %#d     5                   One or two-digit day of month\n     * > %e      5                   One or two-digit day of month\n     * > %A      Sunday              Full name of the day of the week\n     * > %a      Sun                 Abbreviated name of the day of the week\n     * > %w      0                   Number of the day of the week (0 = Sunday, 6 = Saturday)\n     * > %o      th                  The ordinal suffix string following the day of the month\n     * >             == Hours ==\n     * > %H      23                  Hours in 24-hour format (two digits)\n     * > %#H     3                   Hours in 24-hour integer format (one or two digits)\n     * > %I      11                  Hours in 12-hour format (two digits)\n     * > %#I     3                   Hours in 12-hour integer format (one or two digits)\n     * > %p      PM                  AM or PM\n     * >             == Minutes ==\n     * > %M      09                  Minutes (two digits)\n     * > %#M     9                   Minutes (one or two digits)\n     * >             == Seconds ==\n     * > %S      02                  Seconds (two digits)\n     * > %#S     2                   Seconds (one or two digits)\n     * > %s      1206567625723       Unix timestamp (Seconds past 1970-01-01 00:00:00)\n     * >             == Milliseconds ==\n     * > %N      008                 Milliseconds (three digits)\n     * > %#N     8                   Milliseconds (one to three digits)\n     * >             == Timezone ==\n     * > %O      360                 difference in minutes between local time and GMT\n     * > %Z      Mountain Standard Time  Name of timezone as reported by browser\n     * > %G      -06:00              Hours and minutes between GMT\n     * >             == Shortcuts ==\n     * > %F      2008-03-26          %Y-%m-%d\n     * > %T      05:06:30            %H:%M:%S\n     * > %X      05:06:30            %H:%M:%S\n     * > %x      03/26/08            %m/%d/%y\n     * > %D      03/26/08            %m/%d/%y\n     * > %#c     Wed Mar 26 15:31:00 2008  %a %b %e %H:%M:%S %Y\n     * > %v      3-Sep-2008          %e-%b-%Y\n     * > %R      15:31               %H:%M\n     * > %r      3:31:00 PM          %I:%M:%S %p\n     * >             == Characters ==\n     * > %n      \\n                  Newline\n     * > %t      \\t                  Tab\n     * > %%      %                   Percent Symbol \n     */\n    $.jqplot.DateAxisRenderer = function() {\n        $.jqplot.LinearAxisRenderer.call(this);\n        this.date = new $.jsDate();\n    };\n\n    var second = 1000;\n    var minute = 60 * second;\n    var hour = 60 * minute;\n    var day = 24 * hour;\n    var week = 7 * day;\n\n    // these are less definitive\n    var month = 30.4368499 * day;\n    var year = 365.242199 * day;\n\n    var daysInMonths = [31,28,31,30,31,30,31,30,31,30,31,30];\n    // array of consistent nice intervals.  Longer intervals\n    // will depend on days in month, days in year, etc.\n    var niceFormatStrings = ['%M:%S.%#N', '%M:%S.%#N', '%M:%S.%#N', '%M:%S', '%M:%S', '%M:%S', '%M:%S', '%H:%M:%S', '%H:%M:%S', '%H:%M', '%H:%M', '%H:%M', '%H:%M', '%H:%M', '%H:%M', '%a %H:%M', '%a %H:%M', '%b %e %H:%M', '%b %e %H:%M', '%b %e %H:%M', '%b %e %H:%M', '%v', '%v', '%v', '%v', '%v', '%v', '%v'];\n    var niceIntervals = [0.1*second, 0.2*second, 0.5*second, second, 2*second, 5*second, 10*second, 15*second, 30*second, minute, 2*minute, 5*minute, 10*minute, 15*minute, 30*minute, hour, 2*hour, 4*hour, 6*hour, 8*hour, 12*hour, day, 2*day, 3*day, 4*day, 5*day, week, 2*week];\n\n    var niceMonthlyIntervals = [];\n\n    function bestDateInterval(min, max, titarget) {\n        // iterate through niceIntervals to find one closest to titarget\n        var badness = Number.MAX_VALUE;\n        var temp, bestTi, bestfmt;\n        for (var i=0, l=niceIntervals.length; i < l; i++) {\n            temp = Math.abs(titarget - niceIntervals[i]);\n            if (temp < badness) {\n                badness = temp;\n                bestTi = niceIntervals[i];\n                bestfmt = niceFormatStrings[i];\n            }\n        }\n\n        return [bestTi, bestfmt];\n    }\n    \n    $.jqplot.DateAxisRenderer.prototype = new $.jqplot.LinearAxisRenderer();\n    $.jqplot.DateAxisRenderer.prototype.constructor = $.jqplot.DateAxisRenderer;\n    \n    $.jqplot.DateTickFormatter = function(format, val) {\n        if (!format) {\n            format = '%Y/%m/%d';\n        }\n        return $.jsDate.strftime(val, format);\n    };\n    \n    $.jqplot.DateAxisRenderer.prototype.init = function(options){\n        // prop: tickRenderer\n        // A class of a rendering engine for creating the ticks labels displayed on the plot, \n        // See <$.jqplot.AxisTickRenderer>.\n        // this.tickRenderer = $.jqplot.AxisTickRenderer;\n        // this.labelRenderer = $.jqplot.AxisLabelRenderer;\n        this.tickOptions.formatter = $.jqplot.DateTickFormatter;\n        // prop: tickInset\n        // Controls the amount to inset the first and last ticks from \n        // the edges of the grid, in multiples of the tick interval.\n        // 0 is no inset, 0.5 is one half a tick interval, 1 is a full\n        // tick interval, etc.\n        this.tickInset = 0;\n        // prop: drawBaseline\n        // True to draw the axis baseline.\n        this.drawBaseline = true;\n        // prop: baselineWidth\n        // width of the baseline in pixels.\n        this.baselineWidth = null;\n        // prop: baselineColor\n        // CSS color spec for the baseline.\n        this.baselineColor = null;\n        this.daTickInterval = null;\n        this._daTickInterval = null;\n        \n        $.extend(true, this, options);\n        \n        var db = this._dataBounds,\n            stats, \n            sum,\n            s,\n            d,\n            pd,\n            sd,\n            intv;\n        \n        // Go through all the series attached to this axis and find\n        // the min/max bounds for this axis.\n        for (var i=0; i<this._series.length; i++) {\n            stats = {intervals:[], frequencies:{}, sortedIntervals:[], min:null, max:null, mean:null};\n            sum = 0;\n            s = this._series[i];\n            d = s.data;\n            pd = s._plotData;\n            sd = s._stackData;\n            intv = 0;\n            \n            for (var j=0; j<d.length; j++) { \n                if (this.name == 'xaxis' || this.name == 'x2axis') {\n                    d[j][0] = new $.jsDate(d[j][0]).getTime();\n                    pd[j][0] = new $.jsDate(pd[j][0]).getTime();\n                    sd[j][0] = new $.jsDate(sd[j][0]).getTime();\n                    if ((d[j][0] != null && d[j][0] < db.min) || db.min == null) {\n                        db.min = d[j][0];\n                    }\n                    if ((d[j][0] != null && d[j][0] > db.max) || db.max == null) {\n                        db.max = d[j][0];\n                    }\n                    if (j>0) {\n                        intv = Math.abs(d[j][0] - d[j-1][0]);\n                        stats.intervals.push(intv);\n                        if (stats.frequencies.hasOwnProperty(intv)) {\n                            stats.frequencies[intv] += 1;\n                        }\n                        else {\n                            stats.frequencies[intv] = 1;\n                        }\n                    }\n                    sum += intv;\n                    \n                }              \n                else {\n                    d[j][1] = new $.jsDate(d[j][1]).getTime();\n                    pd[j][1] = new $.jsDate(pd[j][1]).getTime();\n                    sd[j][1] = new $.jsDate(sd[j][1]).getTime();\n                    if ((d[j][1] != null && d[j][1] < db.min) || db.min == null) {\n                        db.min = d[j][1];\n                    }\n                    if ((d[j][1] != null && d[j][1] > db.max) || db.max == null) {\n                        db.max = d[j][1];\n                    }\n                    if (j>0) {\n                        intv = Math.abs(d[j][1] - d[j-1][1]);\n                        stats.intervals.push(intv);\n                        if (stats.frequencies.hasOwnProperty(intv)) {\n                            stats.frequencies[intv] += 1;\n                        }\n                        else {\n                            stats.frequencies[intv] = 1;\n                        }\n                    }\n                }\n                sum += intv;              \n            }\n\n            if (s.renderer.bands) {\n                if (s.renderer.bands.hiData.length) {\n                    var bd = s.renderer.bands.hiData;\n                    for (var j=0, l=bd.length; j < l; j++) {\n                        if (this.name === 'xaxis' || this.name === 'x2axis') {\n                            bd[j][0] = new $.jsDate(bd[j][0]).getTime();\n                            if ((bd[j][0] != null && bd[j][0] > db.max) || db.max == null) {\n                                db.max = bd[j][0];\n                            }                        \n                        }              \n                        else {\n                            bd[j][1] = new $.jsDate(bd[j][1]).getTime();\n                            if ((bd[j][1] != null && bd[j][1] > db.max) || db.max == null) {\n                                db.max = bd[j][1];\n                            }\n                        }\n                    }\n                }\n                if (s.renderer.bands.lowData.length) {\n                    var bd = s.renderer.bands.lowData;\n                    for (var j=0, l=bd.length; j < l; j++) {\n                        if (this.name === 'xaxis' || this.name === 'x2axis') {\n                            bd[j][0] = new $.jsDate(bd[j][0]).getTime();\n                            if ((bd[j][0] != null && bd[j][0] < db.min) || db.min == null) {\n                                db.min = bd[j][0];\n                            }                       \n                        }              \n                        else {\n                            bd[j][1] = new $.jsDate(bd[j][1]).getTime();\n                            if ((bd[j][1] != null && bd[j][1] < db.min) || db.min == null) {\n                                db.min = bd[j][1];\n                            }\n                        }\n                    }\n                }\n            }\n            \n            var tempf = 0,\n                tempn=0;\n            for (var n in stats.frequencies) {\n                stats.sortedIntervals.push({interval:n, frequency:stats.frequencies[n]});\n            }\n            stats.sortedIntervals.sort(function(a, b){\n                return b.frequency - a.frequency;\n            });\n            \n            stats.min = $.jqplot.arrayMin(stats.intervals);\n            stats.max = $.jqplot.arrayMax(stats.intervals);\n            stats.mean = sum/d.length;\n            this._intervalStats.push(stats);\n            stats = sum = s = d = pd = sd = null;\n        }\n        db = null;\n        \n    };\n    \n    // called with scope of an axis\n    $.jqplot.DateAxisRenderer.prototype.reset = function() {\n        this.min = this._options.min;\n        this.max = this._options.max;\n        this.tickInterval = this._options.tickInterval;\n        this.numberTicks = this._options.numberTicks;\n        this._autoFormatString = '';\n        if (this._overrideFormatString && this.tickOptions && this.tickOptions.formatString) {\n            this.tickOptions.formatString = '';\n        }\n        this.daTickInterval = this._daTickInterval;\n        // this._ticks = this.__ticks;\n    };\n    \n    $.jqplot.DateAxisRenderer.prototype.createTicks = function(plot) {\n        // we're are operating on an axis here\n        var ticks = this._ticks;\n        var userTicks = this.ticks;\n        var name = this.name;\n        // databounds were set on axis initialization.\n        var db = this._dataBounds;\n        var iv = this._intervalStats;\n        var dim = (this.name.charAt(0) === 'x') ? this._plotDimensions.width : this._plotDimensions.height;\n        var interval;\n        var min, max;\n        var pos1, pos2;\n        var tt, i;\n        var threshold = 30;\n        var insetMult = 1;\n        var daTickInterval = null;\n        \n        // if user specified a tick interval, convert to usable.\n        if (this.tickInterval != null)\n        {\n            // if interval is a number or can be converted to one, use it.\n            // Assume it is in SECONDS!!!\n            if (Number(this.tickInterval)) {\n                daTickInterval = [Number(this.tickInterval), 'seconds'];\n            }\n            // else, parse out something we can build from.\n            else if (typeof this.tickInterval == \"string\") {\n                var parts = this.tickInterval.split(' ');\n                if (parts.length == 1) {\n                    daTickInterval = [1, parts[0]];\n                }\n                else if (parts.length == 2) {\n                    daTickInterval = [parts[0], parts[1]];\n                }\n            }\n        }\n\n        var tickInterval = this.tickInterval;\n        \n        // if we already have ticks, use them.\n        // ticks must be in order of increasing value.\n        \n        min = new $.jsDate((this.min != null) ? this.min : db.min).getTime();\n        max = new $.jsDate((this.max != null) ? this.max : db.max).getTime();\n\n        // see if we're zooming.  if we are, don't use the min and max we're given,\n        // but compute some nice ones.  They will be reset later.\n\n        var cursor = plot.plugins.cursor;\n\n        if (cursor && cursor._zoom && cursor._zoom.zooming) {\n            this.min = null;\n            this.max = null;\n        }\n\n        var range = max - min;\n\n        if (this.tickOptions == null || !this.tickOptions.formatString) {\n            this._overrideFormatString = true;\n        }\n        \n        if (userTicks.length) {\n            // ticks could be 1D or 2D array of [val, val, ,,,] or [[val, label], [val, label], ...] or mixed\n            for (i=0; i<userTicks.length; i++){\n                var ut = userTicks[i];\n                var t = new this.tickRenderer(this.tickOptions);\n                if (ut.constructor == Array) {\n                    t.value = new $.jsDate(ut[0]).getTime();\n                    t.label = ut[1];\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    t.setTick(t.value, this.name);\n                    this._ticks.push(t);\n                }\n                \n                else {\n                    t.value = new $.jsDate(ut).getTime();\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    t.setTick(t.value, this.name);\n                    this._ticks.push(t);\n                }\n            }\n            this.numberTicks = userTicks.length;\n            this.min = this._ticks[0].value;\n            this.max = this._ticks[this.numberTicks-1].value;\n            this.daTickInterval = [(this.max - this.min) / (this.numberTicks - 1)/1000, 'seconds'];\n        }\n\n        ////////\n        // We don't have any ticks yet, let's make some!\n        ////////\n\n        // special case when there is only one point, make three tick marks to center the point\n        else if (this.min == null && this.max == null && db.min == db.max)\n        {\n             var onePointOpts = $.extend(true, {}, this.tickOptions, {name: this.name, value: null});\n             var delta = 300000;\n             this.min = db.min - delta;\n             this.max = db.max + delta;\n             this.numberTicks = 3;\n\n             for(var i=this.min;i<=this.max;i+= delta)\n             {\n                 onePointOpts.value = i;\n\n                 var t = new this.tickRenderer(onePointOpts);\n\n                 if (this._overrideFormatString && this._autoFormatString != '') {\n                    t.formatString = this._autoFormatString;\n                 }\n\n                 t.showLabel = false;\n                 t.showMark = false;\n\n                 this._ticks.push(t);\n             }\n\n             if(this.showTicks) {\n                 this._ticks[1].showLabel = true;\n             }\n             if(this.showTickMarks) {\n                 this._ticks[1].showTickMarks = true;\n             }                   \n        }\n        // if user specified min and max are null, we set those to make best ticks.\n        else if (this.min == null && this.max == null) {\n\n            var opts = $.extend(true, {}, this.tickOptions, {name: this.name, value: null});\n\n            // want to find a nice interval \n            var nttarget,\n                titarget;\n\n            // if no tickInterval or numberTicks options specified,  make a good guess.\n            if (!this.tickInterval && !this.numberTicks) {\n                var tdim = Math.max(dim, threshold+1);\n                // how many ticks to put on the axis?\n                // date labels tend to be long.  If ticks not rotated,\n                // don't use too many and have a high spacing factor.\n                // If we are rotating ticks, use a lower factor.\n                var spacingFactor = 115;\n                if (this.tickRenderer === $.jqplot.CanvasAxisTickRenderer && this.tickOptions.angle) {\n                    spacingFactor = 115 - 40 * Math.abs(Math.sin(this.tickOptions.angle/180*Math.PI));\n                }\n\n                nttarget =  Math.ceil((tdim-threshold)/spacingFactor + 1);\n                titarget = (max - min) / (nttarget - 1);\n            }\n\n            // If tickInterval is specified, we'll try to honor it.\n            // Not guaranteed to get this interval, but we'll get as close as\n            // we can.\n            // tickInterval will be used before numberTicks, that is if\n            // both are specified, numberTicks will be ignored.\n            else if (this.tickInterval) {\n                titarget = new $.jsDate(0).add(daTickInterval[0], daTickInterval[1]).getTime();\n            }\n\n            // if numberTicks specified, try to honor it.\n            // Not guaranteed, but will try to get close.\n            else if (this.numberTicks) {\n                nttarget = this.numberTicks;\n                titarget = (max - min) / (nttarget - 1);\n            }\n\n            // If we can use an interval of 2 weeks or less, pick best one\n            if (titarget <= 19*day) {\n                var ret = bestDateInterval(min, max, titarget);\n                var tempti = ret[0];\n                this._autoFormatString = ret[1];\n\n                min = new $.jsDate(min);\n                min = Math.floor((min.getTime() - min.getUtcOffset())/tempti) * tempti + min.getUtcOffset();\n\n                nttarget = Math.ceil((max - min) / tempti) + 1;\n                this.min = min;\n                this.max = min + (nttarget - 1) * tempti;\n\n                // if max is less than max, add an interval\n                if (this.max < max) {\n                    this.max += tempti;\n                    nttarget += 1;\n                }\n                this.tickInterval = tempti;\n                this.numberTicks = nttarget;\n\n                for (var i=0; i<nttarget; i++) {\n                    opts.value = this.min + i * tempti;\n                    t = new this.tickRenderer(opts);\n                    \n                    if (this._overrideFormatString && this._autoFormatString != '') {\n                        t.formatString = this._autoFormatString;\n                    }\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    this._ticks.push(t);\n                }\n\n                insetMult = this.tickInterval;\n            }\n\n            // should we use a monthly interval?\n            else if (titarget <= 9 * month) {\n\n                this._autoFormatString = '%v';\n\n                // how many months in an interval?\n                var intv = Math.round(titarget/month);\n                if (intv < 1) {\n                    intv = 1;\n                }\n                else if (intv > 6) {\n                    intv = 6;\n                }\n\n                // figure out the starting month and ending month.\n                var mstart = new $.jsDate(min).setDate(1).setHours(0,0,0,0);\n\n                // See if max ends exactly on a month\n                var tempmend = new $.jsDate(max);\n                var mend = new $.jsDate(max).setDate(1).setHours(0,0,0,0);\n\n                if (tempmend.getTime() !== mend.getTime()) {\n                    mend = mend.add(1, 'month');\n                }\n\n                var nmonths = mend.diff(mstart, 'month');\n\n                nttarget = Math.ceil(nmonths/intv) + 1;\n\n                this.min = mstart.getTime();\n                this.max = mstart.clone().add((nttarget - 1) * intv, 'month').getTime();\n                this.numberTicks = nttarget;\n\n                for (var i=0; i<nttarget; i++) {\n                    if (i === 0) {\n                        opts.value = mstart.getTime();\n                    }\n                    else {\n                        opts.value = mstart.add(intv, 'month').getTime();\n                    }\n                    t = new this.tickRenderer(opts);\n                    \n                    if (this._overrideFormatString && this._autoFormatString != '') {\n                        t.formatString = this._autoFormatString;\n                    }\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    this._ticks.push(t);\n                }\n\n                insetMult = intv * month;\n            }\n\n            // use yearly intervals\n            else {\n\n                this._autoFormatString = '%v';\n\n                // how many years in an interval?\n                var intv = Math.round(titarget/year);\n                if (intv < 1) {\n                    intv = 1;\n                }\n\n                // figure out the starting and ending years.\n                var mstart = new $.jsDate(min).setMonth(0, 1).setHours(0,0,0,0);\n                var mend = new $.jsDate(max).add(1, 'year').setMonth(0, 1).setHours(0,0,0,0);\n\n                var nyears = mend.diff(mstart, 'year');\n\n                nttarget = Math.ceil(nyears/intv) + 1;\n\n                this.min = mstart.getTime();\n                this.max = mstart.clone().add((nttarget - 1) * intv, 'year').getTime();\n                this.numberTicks = nttarget;\n\n                for (var i=0; i<nttarget; i++) {\n                    if (i === 0) {\n                        opts.value = mstart.getTime();\n                    }\n                    else {\n                        opts.value = mstart.add(intv, 'year').getTime();\n                    }\n                    t = new this.tickRenderer(opts);\n                    \n                    if (this._overrideFormatString && this._autoFormatString != '') {\n                        t.formatString = this._autoFormatString;\n                    }\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    this._ticks.push(t);\n                }\n\n                insetMult = intv * year;\n            }\n        }\n\n        ////////\n        // Some option(s) specified, work around that.\n        ////////\n        \n        else {      \n            if (name == 'xaxis' || name == 'x2axis') {\n                dim = this._plotDimensions.width;\n            }\n            else {\n                dim = this._plotDimensions.height;\n            }\n            \n            // if min, max and number of ticks specified, user can't specify interval.\n            if (this.min != null && this.max != null && this.numberTicks != null) {\n                this.tickInterval = null;\n            }\n            \n            if (this.tickInterval != null && daTickInterval != null) {\n                this.daTickInterval = daTickInterval;\n            }\n            \n            // if min and max are same, space them out a bit\n            if (min == max) {\n                var adj = 24*60*60*500;  // 1/2 day\n                min -= adj;\n                max += adj;\n            }\n\n            range = max - min;\n            \n            var optNumTicks = 2 + parseInt(Math.max(0, dim-100)/100, 10);\n            \n            \n            var rmin, rmax;\n            \n            rmin = (this.min != null) ? new $.jsDate(this.min).getTime() : min - range/2*(this.padMin - 1);\n            rmax = (this.max != null) ? new $.jsDate(this.max).getTime() : max + range/2*(this.padMax - 1);\n            this.min = rmin;\n            this.max = rmax;\n            range = this.max - this.min;\n            \n            if (this.numberTicks == null){\n                // if tickInterval is specified by user, we will ignore computed maximum.\n                // max will be equal or greater to fit even # of ticks.\n                if (this.daTickInterval != null) {\n                    var nc = new $.jsDate(this.max).diff(this.min, this.daTickInterval[1], true);\n                    this.numberTicks = Math.ceil(nc/this.daTickInterval[0]) +1;\n                    // this.max = new $.jsDate(this.min).add(this.numberTicks-1, this.daTickInterval[1]).getTime();\n                    this.max = new $.jsDate(this.min).add((this.numberTicks-1) * this.daTickInterval[0], this.daTickInterval[1]).getTime();\n                }\n                else if (dim > 200) {\n                    this.numberTicks = parseInt(3+(dim-200)/100, 10);\n                }\n                else {\n                    this.numberTicks = 2;\n                }\n            }\n            \n            insetMult = range / (this.numberTicks-1)/1000;\n\n            if (this.daTickInterval == null) {\n                this.daTickInterval = [insetMult, 'seconds'];\n            }\n\n\n            for (var i=0; i<this.numberTicks; i++){\n                var min = new $.jsDate(this.min);\n                tt = min.add(i*this.daTickInterval[0], this.daTickInterval[1]).getTime();\n                var t = new this.tickRenderer(this.tickOptions);\n                // var t = new $.jqplot.AxisTickRenderer(this.tickOptions);\n                if (!this.showTicks) {\n                    t.showLabel = false;\n                    t.showMark = false;\n                }\n                else if (!this.showTickMarks) {\n                    t.showMark = false;\n                }\n                t.setTick(tt, this.name);\n                this._ticks.push(t);\n            }\n        }\n\n        if (this.tickInset) {\n            this.min = this.min - this.tickInset * insetMult;\n            this.max = this.max + this.tickInset * insetMult;\n        }\n\n        if (this._daTickInterval == null) {\n            this._daTickInterval = this.daTickInterval;    \n        }\n\n        ticks = null;\n    };\n   \n})(jQuery);\n\n","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    $.jqplot.eventListenerHooks.push(['jqplotMouseMove', handleMove]);\n    \n    /**\n     * Class: $.jqplot.Highlighter\n     * Plugin which will highlight data points when they are moused over.\n     * \n     * To use this plugin, include the js\n     * file in your source:\n     * \n     * > <script type=\"text/javascript\" src=\"plugins/jqplot.highlighter.js\"></script>\n     * \n     * A tooltip providing information about the data point is enabled by default.\n     * To disable the tooltip, set \"showTooltip\" to false.\n     * \n     * You can control what data is displayed in the tooltip with various\n     * options.  The \"tooltipAxes\" option controls whether the x, y or both\n     * data values are displayed.\n     * \n     * Some chart types (e.g. hi-low-close) have more than one y value per\n     * data point. To display the additional values in the tooltip, set the\n     * \"yvalues\" option to the desired number of y values present (3 for a hlc chart).\n     * \n     * By default, data values will be formatted with the same formatting\n     * specifiers as used to format the axis ticks.  A custom format code\n     * can be supplied with the tooltipFormatString option.  This will apply \n     * to all values in the tooltip.  \n     * \n     * For more complete control, the \"formatString\" option can be set.  This\n     * Allows conplete control over tooltip formatting.  Values are passed to\n     * the format string in an order determined by the \"tooltipAxes\" and \"yvalues\"\n     * options.  So, if you have a hi-low-close chart and you just want to display \n     * the hi-low-close values in the tooltip, you could set a formatString like:\n     * \n     * > highlighter: {\n     * >     tooltipAxes: 'y',\n     * >     yvalues: 3,\n     * >     formatString:'<table class=\"jqplot-highlighter\">\n     * >         <tr><td>hi:</td><td>%s</td></tr>\n     * >         <tr><td>low:</td><td>%s</td></tr>\n     * >         <tr><td>close:</td><td>%s</td></tr></table>'\n     * > }\n     * \n     */\n    $.jqplot.Highlighter = function(options) {\n        // Group: Properties\n        //\n        //prop: show\n        // true to show the highlight.\n        this.show = $.jqplot.config.enablePlugins;\n        // prop: markerRenderer\n        // Renderer used to draw the marker of the highlighted point.\n        // Renderer will assimilate attributes from the data point being highlighted,\n        // so no attributes need set on the renderer directly.\n        // Default is to turn off shadow drawing on the highlighted point.\n        this.markerRenderer = new $.jqplot.MarkerRenderer({shadow:false});\n        // prop: showMarker\n        // true to show the marker\n        this.showMarker  = true;\n        // prop: lineWidthAdjust\n        // Pixels to add to the lineWidth of the highlight.\n        this.lineWidthAdjust = 2.5;\n        // prop: sizeAdjust\n        // Pixels to add to the overall size of the highlight.\n        this.sizeAdjust = 5;\n        // prop: showTooltip\n        // Show a tooltip with data point values.\n        this.showTooltip = true;\n        // prop: tooltipLocation\n        // Where to position tooltip, 'n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'\n        this.tooltipLocation = 'nw';\n        // prop: fadeTooltip\n        // true = fade in/out tooltip, flase = show/hide tooltip\n        this.fadeTooltip = true;\n        // prop: tooltipFadeSpeed\n        // 'slow', 'def', 'fast', or number of milliseconds.\n        this.tooltipFadeSpeed = \"fast\";\n        // prop: tooltipOffset\n        // Pixel offset of tooltip from the highlight.\n        this.tooltipOffset = 2;\n        // prop: tooltipAxes\n        // Which axes to display in tooltip, 'x', 'y' or 'both', 'xy' or 'yx'\n        // 'both' and 'xy' are equivalent, 'yx' reverses order of labels.\n        this.tooltipAxes = 'both';\n        // prop; tooltipSeparator\n        // String to use to separate x and y axes in tooltip.\n        this.tooltipSeparator = ', ';\n        // prop; tooltipContentEditor\n        // Function used to edit/augment/replace the formatted tooltip contents.\n        // Called as str = tooltipContentEditor(str, seriesIndex, pointIndex)\n        // where str is the generated tooltip html and seriesIndex and pointIndex identify\n        // the data point being highlighted. Should return the html for the tooltip contents.\n        this.tooltipContentEditor = null;\n        // prop: useAxesFormatters\n        // Use the x and y axes formatters to format the text in the tooltip.\n        this.useAxesFormatters = true;\n        // prop: tooltipFormatString\n        // sprintf format string for the tooltip.\n        // Uses Ash Searle's javascript sprintf implementation\n        // found here: http://hexmen.com/blog/2007/03/printf-sprintf/\n        // See http://perldoc.perl.org/functions/sprintf.html for reference.\n        // Additional \"p\" and \"P\" format specifiers added by Chris Leonello.\n        this.tooltipFormatString = '%.5P';\n        // prop: formatString\n        // alternative to tooltipFormatString\n        // will format the whole tooltip text, populating with x, y values as\n        // indicated by tooltipAxes option.  So, you could have a tooltip like:\n        // 'Date: %s, number of cats: %d' to format the whole tooltip at one go.\n        // If useAxesFormatters is true, values will be formatted according to\n        // Axes formatters and you can populate your tooltip string with \n        // %s placeholders.\n        this.formatString = null;\n        // prop: yvalues\n        // Number of y values to expect in the data point array.\n        // Typically this is 1.  Certain plots, like OHLC, will\n        // have more y values in each data point array.\n        this.yvalues = 1;\n        // prop: bringSeriesToFront\n        // This option requires jQuery 1.4+\n        // True to bring the series of the highlighted point to the front\n        // of other series.\n        this.bringSeriesToFront = false;\n        this._tooltipElem;\n        this.isHighlighting = false;\n        this.currentNeighbor = null;\n\n        $.extend(true, this, options);\n    };\n    \n    var locations = ['nw', 'n', 'ne', 'e', 'se', 's', 'sw', 'w'];\n    var locationIndicies = {'nw':0, 'n':1, 'ne':2, 'e':3, 'se':4, 's':5, 'sw':6, 'w':7};\n    var oppositeLocations = ['se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n    \n    // axis.renderer.tickrenderer.formatter\n    \n    // called with scope of plot\n    $.jqplot.Highlighter.init = function (target, data, opts){\n        var options = opts || {};\n        // add a highlighter attribute to the plot\n        this.plugins.highlighter = new $.jqplot.Highlighter(options.highlighter);\n    };\n    \n    // called within scope of series\n    $.jqplot.Highlighter.parseOptions = function (defaults, options) {\n        // Add a showHighlight option to the series \n        // and set it to true by default.\n        this.showHighlight = true;\n    };\n    \n    // called within context of plot\n    // create a canvas which we can draw on.\n    // insert it before the eventCanvas, so eventCanvas will still capture events.\n    $.jqplot.Highlighter.postPlotDraw = function() {\n        // Memory Leaks patch    \n        if (this.plugins.highlighter && this.plugins.highlighter.highlightCanvas) {\n            this.plugins.highlighter.highlightCanvas.resetCanvas();\n            this.plugins.highlighter.highlightCanvas = null;\n        }\n\n        if (this.plugins.highlighter && this.plugins.highlighter._tooltipElem) {\n            this.plugins.highlighter._tooltipElem.emptyForce();\n            this.plugins.highlighter._tooltipElem = null;\n        }\n\n        this.plugins.highlighter.highlightCanvas = new $.jqplot.GenericCanvas();\n        \n        this.eventCanvas._elem.before(this.plugins.highlighter.highlightCanvas.createElement(this._gridPadding, 'jqplot-highlight-canvas', this._plotDimensions, this));\n        this.plugins.highlighter.highlightCanvas.setContext();\n\n        var elem = document.createElement('div');\n        this.plugins.highlighter._tooltipElem = $(elem);\n        elem = null;\n        this.plugins.highlighter._tooltipElem.addClass('jqplot-highlighter-tooltip');\n        this.plugins.highlighter._tooltipElem.css({position:'absolute', display:'none'});\n        \n        this.eventCanvas._elem.before(this.plugins.highlighter._tooltipElem);\n    };\n    \n    $.jqplot.preInitHooks.push($.jqplot.Highlighter.init);\n    $.jqplot.preParseSeriesOptionsHooks.push($.jqplot.Highlighter.parseOptions);\n    $.jqplot.postDrawHooks.push($.jqplot.Highlighter.postPlotDraw);\n    \n    function draw(plot, neighbor) {\n        var hl = plot.plugins.highlighter;\n        var s = plot.series[neighbor.seriesIndex];\n        var smr = s.markerRenderer;\n        var mr = hl.markerRenderer;\n        mr.style = smr.style;\n        mr.lineWidth = smr.lineWidth + hl.lineWidthAdjust;\n        mr.size = smr.size + hl.sizeAdjust;\n        var rgba = $.jqplot.getColorComponents(smr.color);\n        var newrgb = [rgba[0], rgba[1], rgba[2]];\n        var alpha = (rgba[3] >= 0.6) ? rgba[3]*0.6 : rgba[3]*(2-rgba[3]);\n        mr.color = 'rgba('+newrgb[0]+','+newrgb[1]+','+newrgb[2]+','+alpha+')';\n        mr.init();\n        var x_pos = s.gridData[neighbor.pointIndex][0];\n        var y_pos = s.gridData[neighbor.pointIndex][1];\n        // Adjusting with s._barNudge\n        if (s.renderer.constructor == $.jqplot.BarRenderer) {\n            if (s.barDirection == \"vertical\") {\n                x_pos += s._barNudge;\n            }\n            else {\n                y_pos -= s._barNudge;\n            }\n        }\n        mr.draw(x_pos, y_pos, hl.highlightCanvas._ctx);\n    }\n    \n    function showTooltip(plot, series, neighbor) {\n        // neighbor looks like: {seriesIndex: i, pointIndex:j, gridData:p, data:s.data[j]}\n        // gridData should be x,y pixel coords on the grid.\n        // add the plot._gridPadding to that to get x,y in the target.\n        var hl = plot.plugins.highlighter;\n        var elem = hl._tooltipElem;\n        var serieshl = series.highlighter || {};\n\n        var opts = $.extend(true, {}, hl, serieshl);\n\n        if (opts.useAxesFormatters) {\n            var xf = series._xaxis._ticks[0].formatter;\n            var yf = series._yaxis._ticks[0].formatter;\n            var xfstr = series._xaxis._ticks[0].formatString;\n            var yfstr = series._yaxis._ticks[0].formatString;\n            var str;\n            var xstr = xf(xfstr, neighbor.data[0]);\n            var ystrs = [];\n            for (var i=1; i<opts.yvalues+1; i++) {\n                ystrs.push(yf(yfstr, neighbor.data[i]));\n            }\n            if (typeof opts.formatString === 'string') {\n                switch (opts.tooltipAxes) {\n                    case 'both':\n                    case 'xy':\n                        ystrs.unshift(xstr);\n                        ystrs.unshift(opts.formatString);\n                        str = $.jqplot.sprintf.apply($.jqplot.sprintf, ystrs);\n                        break;\n                    case 'yx':\n                        ystrs.push(xstr);\n                        ystrs.unshift(opts.formatString);\n                        str = $.jqplot.sprintf.apply($.jqplot.sprintf, ystrs);\n                        break;\n                    case 'x':\n                        str = $.jqplot.sprintf.apply($.jqplot.sprintf, [opts.formatString, xstr]);\n                        break;\n                    case 'y':\n                        ystrs.unshift(opts.formatString);\n                        str = $.jqplot.sprintf.apply($.jqplot.sprintf, ystrs);\n                        break;\n                    default: // same as xy\n                        ystrs.unshift(xstr);\n                        ystrs.unshift(opts.formatString);\n                        str = $.jqplot.sprintf.apply($.jqplot.sprintf, ystrs);\n                        break;\n                } \n            }\n            else {\n                switch (opts.tooltipAxes) {\n                    case 'both':\n                    case 'xy':\n                        str = xstr;\n                        for (var i=0; i<ystrs.length; i++) {\n                            str += opts.tooltipSeparator + ystrs[i];\n                        }\n                        break;\n                    case 'yx':\n                        str = '';\n                        for (var i=0; i<ystrs.length; i++) {\n                            str += ystrs[i] + opts.tooltipSeparator;\n                        }\n                        str += xstr;\n                        break;\n                    case 'x':\n                        str = xstr;\n                        break;\n                    case 'y':\n                        str = ystrs.join(opts.tooltipSeparator);\n                        break;\n                    default: // same as 'xy'\n                        str = xstr;\n                        for (var i=0; i<ystrs.length; i++) {\n                            str += opts.tooltipSeparator + ystrs[i];\n                        }\n                        break;\n                    \n                }                \n            }\n        }\n        else {\n            var str;\n            if (typeof opts.formatString ===  'string') {\n                str = $.jqplot.sprintf.apply($.jqplot.sprintf, [opts.formatString].concat(neighbor.data));\n            }\n\n            else {\n                if (opts.tooltipAxes == 'both' || opts.tooltipAxes == 'xy') {\n                    str = $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[0]) + opts.tooltipSeparator + $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[1]);\n                }\n                else if (opts.tooltipAxes == 'yx') {\n                    str = $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[1]) + opts.tooltipSeparator + $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[0]);\n                }\n                else if (opts.tooltipAxes == 'x') {\n                    str = $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[0]);\n                }\n                else if (opts.tooltipAxes == 'y') {\n                    str = $.jqplot.sprintf(opts.tooltipFormatString, neighbor.data[1]);\n                } \n            }\n        }\n        if ($.isFunction(opts.tooltipContentEditor)) {\n            // args str, seriesIndex, pointIndex are essential so the hook can look up\n            // extra data for the point.\n            str = opts.tooltipContentEditor(str, neighbor.seriesIndex, neighbor.pointIndex, plot);\n        }\n        elem.html(str);\n        var gridpos = {x:neighbor.gridData[0], y:neighbor.gridData[1]};\n        var ms = 0;\n        var fact = 0.707;\n        if (series.markerRenderer.show == true) { \n            ms = (series.markerRenderer.size + opts.sizeAdjust)/2;\n        }\n\n        var loc = locations;\n        if (series.fillToZero && series.fill && neighbor.data[1] < 0) {\n          loc = oppositeLocations;\n        }\n\n        switch (loc[locationIndicies[opts.tooltipLocation]]) {\n            case 'nw':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - opts.tooltipOffset - fact * ms;\n                var y = gridpos.y + plot._gridPadding.top - opts.tooltipOffset - elem.outerHeight(true) - fact * ms;\n                break;\n            case 'n':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true)/2;\n                var y = gridpos.y + plot._gridPadding.top - opts.tooltipOffset - elem.outerHeight(true) - ms;\n                break;\n            case 'ne':\n                var x = gridpos.x + plot._gridPadding.left + opts.tooltipOffset + fact * ms;\n                var y = gridpos.y + plot._gridPadding.top - opts.tooltipOffset - elem.outerHeight(true) - fact * ms;\n                break;\n            case 'e':\n                var x = gridpos.x + plot._gridPadding.left + opts.tooltipOffset + ms;\n                var y = gridpos.y + plot._gridPadding.top - elem.outerHeight(true)/2;\n                break;\n            case 'se':\n                var x = gridpos.x + plot._gridPadding.left + opts.tooltipOffset + fact * ms;\n                var y = gridpos.y + plot._gridPadding.top + opts.tooltipOffset + fact * ms;\n                break;\n            case 's':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true)/2;\n                var y = gridpos.y + plot._gridPadding.top + opts.tooltipOffset + ms;\n                break;\n            case 'sw':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - opts.tooltipOffset - fact * ms;\n                var y = gridpos.y + plot._gridPadding.top + opts.tooltipOffset + fact * ms;\n                break;\n            case 'w':\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - opts.tooltipOffset - ms;\n                var y = gridpos.y + plot._gridPadding.top - elem.outerHeight(true)/2;\n                break;\n            default: // same as 'nw'\n                var x = gridpos.x + plot._gridPadding.left - elem.outerWidth(true) - opts.tooltipOffset - fact * ms;\n                var y = gridpos.y + plot._gridPadding.top - opts.tooltipOffset - elem.outerHeight(true) - fact * ms;\n                break;\n        }\n        if (series.renderer.constructor == $.jqplot.BarRenderer) {        \n    \t    if (series.barDirection == 'vertical') {                        \n    \t        x += series._barNudge;\n    \t    }\n    \t    else {                                                          \n    \t        y -= series._barNudge;\n    \t    } \n    \t}\n        elem.css('left', x);\n        elem.css('top', y);\n        if (opts.fadeTooltip) {\n            // Fix for stacked up animations.  Thnanks Trevor!\n            elem.stop(true,true).fadeIn(opts.tooltipFadeSpeed);\n        }\n        else {\n            elem.show();\n        }\n        elem = null;\n        \n    }\n    \n    function handleMove(ev, gridpos, datapos, neighbor, plot) {\n        var hl = plot.plugins.highlighter;\n        var c = plot.plugins.cursor;\n        if (hl.show) {\n            if (neighbor == null && hl.isHighlighting) {\n                var evt = jQuery.Event('jqplotHighlighterUnhighlight');\n                plot.target.trigger(evt);\n\n                var ctx = hl.highlightCanvas._ctx;\n                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                if (hl.fadeTooltip) {\n                    hl._tooltipElem.fadeOut(hl.tooltipFadeSpeed);\n                }\n                else {\n                    hl._tooltipElem.hide();\n                }\n                if (hl.bringSeriesToFront) {\n                    plot.restorePreviousSeriesOrder();\n                }\n                hl.isHighlighting = false;\n                hl.currentNeighbor = null;\n                ctx = null;\n            }\n            else if (neighbor != null && plot.series[neighbor.seriesIndex].showHighlight && !hl.isHighlighting) {\n                var evt = jQuery.Event('jqplotHighlighterHighlight');\n                evt.which = ev.which;\n                evt.pageX = ev.pageX;\n                evt.pageY = ev.pageY;\n                var ins = [neighbor.seriesIndex, neighbor.pointIndex, neighbor.data, plot];\n                plot.target.trigger(evt, ins);\n\n                hl.isHighlighting = true;\n                hl.currentNeighbor = neighbor;\n                if (hl.showMarker) {\n                    draw(plot, neighbor);\n                }\n                if (plot.series[neighbor.seriesIndex].show && hl.showTooltip && (!c || !c._zoom.started)) {\n                    showTooltip(plot, plot.series[neighbor.seriesIndex], neighbor);\n                }\n                if (hl.bringSeriesToFront) {\n                    plot.moveSeriesToFront(neighbor.seriesIndex);\n                }\n            }\n            // check to see if we're highlighting the wrong point.\n            else if (neighbor != null && hl.isHighlighting && hl.currentNeighbor != neighbor) {\n                // highlighting the wrong point.\n\n                // if new series allows highlighting, highlight new point.\n                if (plot.series[neighbor.seriesIndex].showHighlight) {\n                    var ctx = hl.highlightCanvas._ctx;\n                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                    hl.isHighlighting = true;\n                    hl.currentNeighbor = neighbor;\n                    if (hl.showMarker) {\n                        draw(plot, neighbor);\n                    }\n                    if (plot.series[neighbor.seriesIndex].show && hl.showTooltip && (!c || !c._zoom.started)) {\n                        showTooltip(plot, plot.series[neighbor.seriesIndex], neighbor);\n                    }\n                    if (hl.bringSeriesToFront) {\n                        plot.moveSeriesToFront(neighbor.seriesIndex);\n                    }                    \n                }                \n            }\n        }\n    }\n})(jQuery);","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    /**\n    *  class: $.jqplot.LogAxisRenderer\n    *  A plugin for a jqPlot to render a logarithmic axis.\n    * \n    *  To use this renderer, include the plugin in your source\n    *  > <script type=\"text/javascript\" language=\"javascript\" src=\"plugins/jqplot.logAxisRenderer.js\"></script>\n    *  \n    *  and supply the appropriate options to your plot\n    *  \n    *  > {axes:{xaxis:{renderer:$.jqplot.LogAxisRenderer}}}\n    **/ \n    $.jqplot.LogAxisRenderer = function() {\n        $.jqplot.LinearAxisRenderer.call(this);\n        // prop: axisDefaults\n        // Default properties which will be applied directly to the series.\n        //\n        // Group: Properties\n        //\n        // Properties\n        //\n        // base - the logarithmic base, commonly 2, 10 or Math.E\n        // tickDistribution - Deprecated.  \"power\" distribution of ticks\n        // always used.  Option has no effect.\n        this.axisDefaults = {\n            base : 10,\n            tickDistribution :'power'\n        };\n    };\n    \n    $.jqplot.LogAxisRenderer.prototype = new $.jqplot.LinearAxisRenderer();\n    $.jqplot.LogAxisRenderer.prototype.constructor = $.jqplot.LogAxisRenderer;\n    \n    $.jqplot.LogAxisRenderer.prototype.init = function(options) {\n        // prop: drawBaseline\n        // True to draw the axis baseline.\n        this.drawBaseline = true;\n        // prop: minorTicks\n        // Number of ticks to add between \"major\" ticks.\n        // Major ticks are ticks supplied by user or auto computed.\n        // Minor ticks cannot be created by user.\n        this.minorTicks = 'auto';\n        this._scalefact = 1.0;\n\n        $.extend(true, this, options);\n\n        this._autoFormatString = '%d';\n        this._overrideFormatString = false;\n\n        for (var d in this.renderer.axisDefaults) {\n            if (this[d] == null) {\n                this[d] = this.renderer.axisDefaults[d];\n            }\n        }\n\n        this.resetDataBounds();\n    };\n    \n    $.jqplot.LogAxisRenderer.prototype.createTicks = function(plot) {\n        // we're are operating on an axis here\n        var ticks = this._ticks;\n        var userTicks = this.ticks;\n        var name = this.name;\n        var db = this._dataBounds;\n        var dim = (this.name.charAt(0) === 'x') ? this._plotDimensions.width : this._plotDimensions.height;\n        var interval;\n        var min, max;\n        var pos1, pos2;\n        var tt, i;\n\n        var threshold = 30;\n        // For some reason scalefactor is screwing up ticks.\n        this._scalefact =  (Math.max(dim, threshold+1) - threshold)/300;\n\n        // if we already have ticks, use them.\n        // ticks must be in order of increasing value.\n        if (userTicks.length) {\n            // ticks could be 1D or 2D array of [val, val, ,,,] or [[val, label], [val, label], ...] or mixed\n            for (i=0; i<userTicks.length; i++){\n                var ut = userTicks[i];\n                var t = new this.tickRenderer(this.tickOptions);\n                if (ut.constructor == Array) {\n                    t.value = ut[0];\n                    t.label = ut[1];\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    t.setTick(ut[0], this.name);\n                    this._ticks.push(t);\n                }\n\n                else if ($.isPlainObject(ut)) {\n                    $.extend(true, t, ut);\n                    t.axis = this.name;\n                    this._ticks.push(t);\n                }\n                \n                else {\n                    t.value = ut;\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    t.setTick(ut, this.name);\n                    this._ticks.push(t);\n                }\n            }\n            this.numberTicks = userTicks.length;\n            this.min = this._ticks[0].value;\n            this.max = this._ticks[this.numberTicks-1].value;\n        }\n        \n        // we don't have any ticks yet, let's make some!\n        else if (this.min == null && this.max == null) {\n            min = db.min * (2 - this.padMin);\n            max = db.max * this.padMax;\n            \n            // if min and max are same, space them out a bit\n            if (min == max) {\n                var adj = 0.05;\n                min = min*(1-adj);\n                max = max*(1+adj);\n            }\n            \n            // perform some checks\n            if (this.min != null && this.min <= 0) {\n                throw new Error(\"Log axis minimum must be greater than 0\");\n            }\n            if (this.max != null && this.max <= 0) {\n                throw new Error(\"Log axis maximum must be greater than 0\");\n            }\n\n            function findCeil (val) {\n                var order = Math.pow(10, Math.floor(Math.log(val)/Math.LN10));\n                return Math.ceil(val/order) * order;\n            }\n\n            function findFloor(val) {\n                var order = Math.pow(10, Math.floor(Math.log(val)/Math.LN10));\n                return Math.floor(val/order) * order;\n            }\n\n            // var range = max - min;\n            var rmin, rmax;\n\n            // for power distribution, open up range to get a nice power of axis.renderer.base.\n            // power distribution won't respect the user's min/max settings.\n            rmin = Math.pow(this.base, Math.floor(Math.log(min)/Math.log(this.base)));\n            rmax = Math.pow(this.base, Math.ceil(Math.log(max)/Math.log(this.base)));\n\n            // // if min and max are same, space them out a bit\n            // if (rmin === rmax) {\n            //     var adj = 0.05;\n            //     rmin = rmin*(1-adj);\n            //     rmax = rmax*(1+adj);\n            // }\n\n            // Handle case where a data value was zero\n            if (rmin === 0) {\n              rmin = 1;\n            }\n\n            var order = Math.round(Math.log(rmin)/Math.LN10);\n\n            if (this.tickOptions == null || !this.tickOptions.formatString) {\n                this._overrideFormatString = true;\n            }\n\n            this.min = rmin;\n            this.max = rmax;\n            var range = this.max - this.min;            \n\n            var minorTicks = (this.minorTicks === 'auto') ? 0 : this.minorTicks;\n            var numberTicks;\n            if (this.numberTicks == null){\n                if (dim > 140) {\n                    numberTicks = Math.round(Math.log(this.max/this.min)/Math.log(this.base) + 1);\n                    if (numberTicks < 2) {\n                        numberTicks = 2;\n                    }\n                    if (minorTicks === 0) {\n                        var temp = dim/(numberTicks - 1);\n                        if (temp < 100) {\n                            minorTicks = 0;\n                        }\n                        else if (temp < 190) {\n                            minorTicks = 1;\n                        }\n                        else if (temp < 250) {\n                            minorTicks = 3;\n                        }\n                        else if (temp < 600) {\n                            minorTicks = 4;\n                        }\n                        else {\n                            minorTicks = 9;\n                        }\n                    }\n                }\n                else {\n                    numberTicks = 2;\n                    if (minorTicks === 0) {\n                        minorTicks = 1;\n                    }\n                    minorTicks = 0;\n                }\n            }\n            else {\n                numberTicks = this.numberTicks;\n            }\n\n            if (order >= 0 && minorTicks !== 3) {\n                this._autoFormatString = '%d';\n            }\n            // Adjust format string for case with 3 ticks where we'll have like 1, 2.5, 5, 7.5, 10\n            else if (order <= 0 && minorTicks === 3) {\n                var temp = -(order - 1);\n                this._autoFormatString = '%.'+ Math.abs(order-1) + 'f';\n            }\n\n            // Adjust format string for values less than 1.\n            else if (order < 0) {\n                var temp = -order;\n                this._autoFormatString = '%.'+ Math.abs(order) + 'f';\n            }\n\n            else {\n                this._autoFormatString = '%d';\n            }\n\n            var to, t, val, tt1, spread, interval;\n            for (var i=0; i<numberTicks; i++){\n                tt = Math.pow(this.base, i - numberTicks + 1) * this.max;\n\n                t = new this.tickRenderer(this.tickOptions);\n            \n                if (this._overrideFormatString) {\n                    t.formatString = this._autoFormatString;\n                }\n                \n                if (!this.showTicks) {\n                    t.showLabel = false;\n                    t.showMark = false;\n                }\n                else if (!this.showTickMarks) {\n                    t.showMark = false;\n                }\n                t.setTick(tt, this.name);\n                this._ticks.push(t);\n\n                if (minorTicks && i<numberTicks-1) {\n                    tt1 = Math.pow(this.base, i - numberTicks + 2) * this.max;\n                    spread = tt1 - tt;\n                    interval = tt1 / (minorTicks+1);\n                    for (var j=minorTicks-1; j>=0; j--) {\n                        val = tt1-interval*(j+1);\n                        t = new this.tickRenderer(this.tickOptions);\n            \n                        if (this._overrideFormatString && this._autoFormatString != '') {\n                            t.formatString = this._autoFormatString;\n                        }\n                        if (!this.showTicks) {\n                            t.showLabel = false;\n                            t.showMark = false;\n                        }\n                        else if (!this.showTickMarks) {\n                            t.showMark = false;\n                        }\n                        t.setTick(val, this.name);\n                        this._ticks.push(t);\n                    }\n                }       \n            }     \n        }\n\n        // min and max are set as would be the case with zooming\n        else if (this.min != null && this.max != null) {\n            var opts = $.extend(true, {}, this.tickOptions, {name: this.name, value: null});\n            var nt, ti;\n            // don't have an interval yet, pick one that gives the most\n            // \"round\" ticks we can get.\n            if (this.numberTicks == null && this.tickInterval == null) {\n                // var threshold = 30;\n                var tdim = Math.max(dim, threshold+1);\n                var nttarget =  Math.ceil((tdim-threshold)/35 + 1);\n\n                var ret = $.jqplot.LinearTickGenerator.bestConstrainedInterval(this.min, this.max, nttarget);\n\n                this._autoFormatString = ret[3];\n                nt = ret[2];\n                ti = ret[4];\n\n                for (var i=0; i<nt; i++) {\n                    opts.value = this.min + i * ti;\n                    t = new this.tickRenderer(opts);\n                    \n                    if (this._overrideFormatString && this._autoFormatString != '') {\n                        t.formatString = this._autoFormatString;\n                    }\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    this._ticks.push(t);\n                }\n            }\n\n            // for loose zoom, number ticks and interval are also set.\n            else if (this.numberTicks != null && this.tickInterval != null) {\n                nt = this.numberTicks;\n                for (var i=0; i<nt; i++) {\n                    opts.value = this.min + i * this.tickInterval;\n                    t = new this.tickRenderer(opts);\n                    \n                    if (this._overrideFormatString && this._autoFormatString != '') {\n                        t.formatString = this._autoFormatString;\n                    }\n                    if (!this.showTicks) {\n                        t.showLabel = false;\n                        t.showMark = false;\n                    }\n                    else if (!this.showTickMarks) {\n                        t.showMark = false;\n                    }\n                    this._ticks.push(t);\n                }\n            }\n        }\n    };\n    \n    $.jqplot.LogAxisRenderer.prototype.pack = function(pos, offsets) {\n        var lb = parseInt(this.base, 10);\n        var ticks = this._ticks;\n        var trans = function (v) { return Math.log(v)/Math.log(lb); };\n        var invtrans = function (v) { return Math.pow(Math.E, (Math.log(lb)*v)); };\n        var max = trans(this.max);\n        var min = trans(this.min);\n        var offmax = offsets.max;\n        var offmin = offsets.min;\n        var lshow = (this._label == null) ? false : this._label.show;\n        \n        for (var p in pos) {\n            this._elem.css(p, pos[p]);\n        }\n        \n        this._offsets = offsets;\n        // pixellength will be + for x axes and - for y axes becasue pixels always measured from top left.\n        var pixellength = offmax - offmin;\n        var unitlength = max - min;\n        \n        // point to unit and unit to point conversions references to Plot DOM element top left corner.\n        this.p2u = function(p){\n            return invtrans((p - offmin) * unitlength / pixellength + min);\n        };\n        \n        this.u2p = function(u){\n            return (trans(u) - min) * pixellength / unitlength + offmin;\n        };\n        \n        if (this.name == 'xaxis' || this.name == 'x2axis'){\n            this.series_u2p = function(u){\n                return (trans(u) - min) * pixellength / unitlength;\n            };\n            this.series_p2u = function(p){\n                return invtrans(p * unitlength / pixellength + min);\n            };\n        }\n        // yaxis is max at top of canvas.\n        else {\n            this.series_u2p = function(u){\n                return (trans(u) - max) * pixellength / unitlength;\n            };\n            this.series_p2u = function(p){\n                return invtrans(p * unitlength / pixellength + max);\n            };\n        }\n        \n        if (this.show) {\n            if (this.name == 'xaxis' || this.name == 'x2axis') {\n                for (var i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {\n                        var shim;\n                        \n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                    if (t.angle < 0) {\n                                        shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    }\n                                    // position at start\n                                    else {\n                                        shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'end':\n                                    shim = -t.getWidth() + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                case 'start':\n                                    shim = -t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    break;\n                                case 'middle':\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                                default:\n                                    shim = -t.getWidth()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getWidth()/2;\n                        }\n                        // var shim = t.getWidth()/2;\n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('left', val);\n                        t.pack();\n                    }\n                }\n                if (lshow) {\n                    var w = this._label._elem.outerWidth(true);\n                    this._label._elem.css('left', offmin + pixellength/2 - w/2 + 'px');\n                    if (this.name == 'xaxis') {\n                        this._label._elem.css('bottom', '0px');\n                    }\n                    else {\n                        this._label._elem.css('top', '0px');\n                    }\n                    this._label.pack();\n                }\n            }\n            else {\n                for (var i=0; i<ticks.length; i++) {\n                    var t = ticks[i];\n                    if (t.show && t.showLabel) {                        \n                        var shim;\n                        if (t.constructor == $.jqplot.CanvasAxisTickRenderer && t.angle) {\n                            switch (t.labelPosition) {\n                                case 'auto':\n                                    // position at end\n                                case 'end':\n                                    if (t.angle < 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'start':\n                                    if (t.angle > 0) {\n                                        shim = -t._textRenderer.height * Math.cos(-t._textRenderer.angle) / 2;\n                                    }\n                                    else {\n                                        shim = -t.getHeight() + t._textRenderer.height * Math.cos(t._textRenderer.angle) / 2;\n                                    }\n                                    break;\n                                case 'middle':\n                                    // if (t.angle > 0) {\n                                    //     shim = -t.getHeight()/2 + t._textRenderer.height * Math.sin(-t._textRenderer.angle) / 2;\n                                    // }\n                                    // else {\n                                    //     shim = -t.getHeight()/2 - t._textRenderer.height * Math.sin(t._textRenderer.angle) / 2;\n                                    // }\n                                    shim = -t.getHeight()/2;\n                                    break;\n                                default:\n                                    shim = -t.getHeight()/2;\n                                    break;\n                            }\n                        }\n                        else {\n                            shim = -t.getHeight()/2;\n                        }\n                        \n                        var val = this.u2p(t.value) + shim + 'px';\n                        t._elem.css('top', val);\n                        t.pack();\n                    }\n                }\n                if (lshow) {\n                    var h = this._label._elem.outerHeight(true);\n                    this._label._elem.css('top', offmax - pixellength/2 - h/2 + 'px');\n                    if (this.name == 'yaxis') {\n                        this._label._elem.css('left', '0px');\n                    }\n                    else {\n                        this._label._elem.css('right', '0px');\n                    }   \n                    this._label.pack();\n                }\n            }\n        }        \n    };\n})(jQuery);","/**\n * jqPlot\n * Pure JavaScript plotting plugin using jQuery\n *\n * Version: 1.0.9-1\n * Revision: 2dbcde8\n *\n * Copyright (c) 2009-2016 Chris Leonello\n * jqPlot is currently available for use in all personal or commercial projects \n * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL \n * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can \n * choose the license that best suits your project and use it accordingly. \n *\n * Although not required, the author would appreciate an email letting him \n * know of any substantial use of jqPlot.  You can reach the author at: \n * chris at jqplot dot com or see http://www.jqplot.com/info.php .\n *\n * If you are feeling kind and generous, consider supporting the project by\n * making a donation at: http://www.jqplot.com/donate.php .\n *\n * sprintf functions contained in jqplot.sprintf.js by Ash Searle:\n *\n *     version 2007.04.27\n *     author Ash Searle\n *     http://hexmen.com/blog/2007/03/printf-sprintf/\n *     http://hexmen.com/js/sprintf.js\n *     The author (Ash Searle) has placed this code in the public domain:\n *     \"This code is unrestricted: you are free to use it however you like.\"\n * \n */\n(function($) {\n    \n    /**\n     * Class: $.jqplot.PointLabels\n     * Plugin for putting labels at the data points.\n     * \n     * To use this plugin, include the js\n     * file in your source:\n     * \n     * > <script type=\"text/javascript\" src=\"plugins/jqplot.pointLabels.js\"></script>\n     * \n     * By default, the last value in the data ponit array in the data series is used\n     * for the label.  For most series renderers, extra data can be added to the \n     * data point arrays and the last value will be used as the label.\n     * \n     * For instance, \n     * this series:\n     * \n     * > [[1,4], [3,5], [7,2]]\n     * \n     * Would, by default, use the y values in the labels.\n     * Extra data can be added to the series like so:\n     * \n     * > [[1,4,'mid'], [3 5,'hi'], [7,2,'low']]\n     * \n     * And now the point labels would be 'mid', 'low', and 'hi'.\n     * \n     * Options to the point labels and a custom labels array can be passed into the\n     * \"pointLabels\" option on the series option like so:\n     * \n     * > series:[{pointLabels:{\n     * >    labels:['mid', 'hi', 'low'],\n     * >    location:'se',\n     * >    ypadding: 12\n     * >    }\n     * > }]\n     * \n     * A custom labels array in the options takes precendence over any labels\n     * in the series data.  If you have a custom labels array in the options,\n     * but still want to use values from the series array as labels, set the\n     * \"labelsFromSeries\" option to true.\n     * \n     * By default, html entities (<, >, etc.) are escaped in point labels.  \n     * If you want to include actual html markup in the labels, \n     * set the \"escapeHTML\" option to false.\n     * \n     */\n    $.jqplot.PointLabels = function(options) {\n        // Group: Properties\n        //\n        // prop: show\n        // show the labels or not.\n        this.show = $.jqplot.config.enablePlugins;\n        // prop: location\n        // compass location where to position the label around the point.\n        // 'n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'\n        this.location = 'n';\n        // prop: labelsFromSeries\n        // true to use labels within data point arrays.\n        this.labelsFromSeries = false;\n        // prop: seriesLabelIndex\n        // array index for location of labels within data point arrays.\n        // if null, will use the last element of the data point array.\n        this.seriesLabelIndex = null;\n        // prop: labels\n        // array of arrays of labels, one array for each series.\n        this.labels = [];\n        // actual labels that will get displayed.\n        // needed to preserve user specified labels in labels array.\n        this._labels = [];\n        // prop: stackedValue\n        // true to display value as stacked in a stacked plot.\n        // no effect if labels is specified.\n        this.stackedValue = false;\n        // prop: ypadding\n        // vertical padding in pixels between point and label\n        this.ypadding = 6;\n        // prop: xpadding\n        // horizontal padding in pixels between point and label\n        this.xpadding = 6;\n        // prop: escapeHTML\n        // true to escape html entities in the labels.\n        // If you want to include markup in the labels, set to false.\n        this.escapeHTML = true;\n        // prop: edgeTolerance\n        // Number of pixels that the label must be away from an axis\n        // boundary in order to be drawn.  Negative values will allow overlap\n        // with the grid boundaries.\n        this.edgeTolerance = -5;\n        // prop: formatter\n        // A class of a formatter for the tick text.  sprintf by default.\n        this.formatter = $.jqplot.DefaultTickFormatter;\n        // prop: formatString\n        // string passed to the formatter.\n        this.formatString = '';\n        // prop: hideZeros\n        // true to not show a label for a value which is 0.\n        this.hideZeros = false;\n        this._elems = [];\n        \n        $.extend(true, this, options);\n    };\n    \n    var locations = ['nw', 'n', 'ne', 'e', 'se', 's', 'sw', 'w'];\n    var locationIndicies = {'nw':0, 'n':1, 'ne':2, 'e':3, 'se':4, 's':5, 'sw':6, 'w':7};\n    var oppositeLocations = ['se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n    \n    // called with scope of a series\n    $.jqplot.PointLabels.init = function (target, data, seriesDefaults, opts, plot){\n        var options = $.extend(true, {}, seriesDefaults, opts);\n        options.pointLabels = options.pointLabels || {};\n        if (this.renderer.constructor === $.jqplot.BarRenderer && this.barDirection === 'horizontal' && !options.pointLabels.location) {\n            options.pointLabels.location = 'e';\n        }\n        // add a pointLabels attribute to the series plugins\n        this.plugins.pointLabels = new $.jqplot.PointLabels(options.pointLabels);\n        this.plugins.pointLabels.setLabels.call(this);\n    };\n    \n    // called with scope of series\n    $.jqplot.PointLabels.prototype.setLabels = function() {   \n        var p = this.plugins.pointLabels; \n        var labelIdx;\n        if (p.seriesLabelIndex != null) {\n            labelIdx = p.seriesLabelIndex;\n        }\n        else if (this.renderer.constructor === $.jqplot.BarRenderer && this.barDirection === 'horizontal') {\n           labelIdx = (this._plotData[0].length < 3) ? 0 : this._plotData[0].length -1;\n        }\n        else {\n            labelIdx = (this._plotData.length === 0) ? 0 : this._plotData[0].length -1;\n        }\n        p._labels = [];\n        if (p.labels.length === 0 || p.labelsFromSeries) {    \n            if (p.stackedValue) {\n                if (this._plotData.length && this._plotData[0].length){\n                    // var idx = p.seriesLabelIndex || this._plotData[0].length -1;\n                    for (var i=0; i<this._plotData.length; i++) {\n                        p._labels.push(this._plotData[i][labelIdx]);\n                    }\n                }\n            }\n            else {\n                // var d = this._plotData;\n                var d = this.data;\n                if (this.renderer.constructor === $.jqplot.BarRenderer && this.waterfall) {\n                    d = this._data;\n                }\n                if (d.length && d[0].length) {\n                    // var idx = p.seriesLabelIndex || d[0].length -1;\n                    for (var i=0; i<d.length; i++) {\n                        p._labels.push(d[i][labelIdx]);\n                    }\n                }\n                d = null;\n            }\n        }\n        else if (p.labels.length){\n            p._labels = p.labels;\n        }\n    };\n    \n    $.jqplot.PointLabels.prototype.xOffset = function(elem, location, padding) {\n        location = location || this.location;\n        padding = padding || this.xpadding;\n        var offset;\n        \n        switch (location) {\n            case 'nw':\n                offset = -elem.outerWidth(true) - this.xpadding;\n                break;\n            case 'n':\n                offset = -elem.outerWidth(true)/2;\n                break;\n            case 'ne':\n                offset =  this.xpadding;\n                break;\n            case 'e':\n                offset = this.xpadding;\n                break;\n            case 'se':\n                offset = this.xpadding;\n                break;\n            case 's':\n                offset = -elem.outerWidth(true)/2;\n                break;\n            case 'sw':\n                offset = -elem.outerWidth(true) - this.xpadding;\n                break;\n            case 'w':\n                offset = -elem.outerWidth(true) - this.xpadding;\n                break;\n            default: // same as 'nw'\n                offset = -elem.outerWidth(true) - this.xpadding;\n                break;\n        }\n        return offset; \n    };\n    \n    $.jqplot.PointLabels.prototype.yOffset = function(elem, location, padding) {\n        location = location || this.location;\n        padding = padding || this.xpadding;\n        var offset;\n        \n        switch (location) {\n            case 'nw':\n                offset = -elem.outerHeight(true) - this.ypadding;\n                break;\n            case 'n':\n                offset = -elem.outerHeight(true) - this.ypadding;\n                break;\n            case 'ne':\n                offset = -elem.outerHeight(true) - this.ypadding;\n                break;\n            case 'e':\n                offset = -elem.outerHeight(true)/2;\n                break;\n            case 'se':\n                offset = this.ypadding;\n                break;\n            case 's':\n                offset = this.ypadding;\n                break;\n            case 'sw':\n                offset = this.ypadding;\n                break;\n            case 'w':\n                offset = -elem.outerHeight(true)/2;\n                break;\n            default: // same as 'nw'\n                offset = -elem.outerHeight(true) - this.ypadding;\n                break;\n        }\n        return offset; \n    };\n    \n    // called with scope of series\n    $.jqplot.PointLabels.draw = function (sctx, options, plot) {\n        var p = this.plugins.pointLabels;\n        // set labels again in case they have changed.\n        p.setLabels.call(this);\n        // remove any previous labels\n        for (var i=0; i<p._elems.length; i++) {\n            // Memory Leaks patch\n            // p._elems[i].remove();\n            if(p._elems[i]) {\n                p._elems[i].emptyForce();\n            }\n        }\n        p._elems.splice(0, p._elems.length);\n\n        if (p.show) {\n            var ax = '_'+this._stackAxis+'axis';\n        \n            if (!p.formatString) {\n                p.formatString = this[ax]._ticks[0].formatString;\n                p.formatter = this[ax]._ticks[0].formatter;\n            }\n        \n            var pd = this._plotData;\n            var ppd = this._prevPlotData;\n            var xax = this._xaxis;\n            var yax = this._yaxis;\n            var elem, helem;\n\n            for (var i=0, l=p._labels.length; i < l; i++) {\n                var label = p._labels[i];\n                \n                if (label == null || (p.hideZeros && parseFloat(label) == 0)) {\n                    continue;\n                }\n                \n                label = p.formatter(p.formatString, label);\n\n                helem = document.createElement('div');\n                p._elems[i] = $(helem);\n\n                elem = p._elems[i];\n\n\n                elem.addClass('jqplot-point-label jqplot-series-'+this.index+' jqplot-point-'+i);\n                elem.css('position', 'absolute');\n                elem.insertAfter(sctx.canvas);\n\n                if (p.escapeHTML) {\n                    elem.text(label);\n                }\n                else {\n                    elem.html(label);\n                }\n                var location = p.location;\n                if ((this.fillToZero && pd[i][1] < 0) || (this.fillToZero && this._type === 'bar' && this.barDirection === 'horizontal' && pd[i][0] < 0) || (this.waterfall && parseInt(label, 10)) < 0) {\n                    location = oppositeLocations[locationIndicies[location]];\n                }\n\n\n                var ell = xax.u2p(pd[i][0]) + p.xOffset(elem, location);\n                var elt = yax.u2p(pd[i][1]) + p.yOffset(elem, location);\n\n                // we have stacked chart but are not showing stacked values,\n                // place labels in center.\n                if (this._stack && !p.stackedValue) {\n                    if (this.barDirection === \"vertical\") {\n                        elt = (this._barPoints[i][0][1] + this._barPoints[i][1][1]) / 2 + plot._gridPadding.top - 0.5 * elem.outerHeight(true);\n                    }\n                    else {\n                        ell = (this._barPoints[i][2][0] + this._barPoints[i][0][0]) / 2 + plot._gridPadding.left - 0.5 * elem.outerWidth(true);\n                    }\n                }\n\n                if (this.renderer.constructor == $.jqplot.BarRenderer) {\n                    if (this.barDirection == \"vertical\") {\n                        ell += this._barNudge;\n                    }\n                    else {\n                        elt -= this._barNudge;\n                    }\n                }\n                elem.css('left', ell);\n                elem.css('top', elt);\n                var elr = ell + elem.width();\n                var elb = elt + elem.height();\n                var et = p.edgeTolerance;\n                var scl = $(sctx.canvas).position().left;\n                var sct = $(sctx.canvas).position().top;\n                var scr = sctx.canvas.width + scl;\n                var scb = sctx.canvas.height + sct;\n                // if label is outside of allowed area, remove it\n                if (ell - et < scl || elt - et < sct || elr + et > scr || elb + et > scb) {\n                    elem.remove();\n                }\n\n                elem = null;\n                helem = null;\n            }\n\n            // finally, animate them if the series is animated\n            // if (this.renderer.animation && this.renderer.animation._supported && this.renderer.animation.show && plot._drawCount < 2) {\n            //     var sel = '.jqplot-point-label.jqplot-series-'+this.index;\n            //     $(sel).hide();\n            //     $(sel).fadeIn(1000);\n            // }\n\n        }\n    };\n    \n    $.jqplot.postSeriesInitHooks.push($.jqplot.PointLabels.init);\n    $.jqplot.postDrawSeriesHooks.push($.jqplot.PointLabels.draw);\n})(jQuery);\n"],"names":["window","processJqPlotOptions","options","jqPlotDefaultOptions","animate","$","jqplot","use_excanvas","animateReplot","axesDefaults","labelRenderer","CanvasAxisLabelRenderer","tickRenderer","CanvasAxisTickRenderer","tickOptions","markSize","formatString","cursor","show","showTooltip","zoom","grid","background","drawBorder","shadow","highlighter","legend","seriesColors","seriesDefaults","markerOptions","style","color","lineWidth","pointLabels","location","xpadding","edgeTolerance","rendererOptions","animation","speed","highlightColors","smooth","size","extend","document","ready","width","this","data","each","$this","val","_","isNumber","Counter","duration","easing","step","text","Math","ceil","undefined","Axis","name","ElemContainer","call","_series","AxisTickRenderer","AxisLabelRenderer","labelOptions","label","showLabel","min","max","autoscale","pad","padMax","padMin","ticks","numberTicks","tickInterval","renderer","LinearAxisRenderer","showTicks","showTickMarks","showMinorTicks","drawMajorGridlines","drawMinorGridlines","drawMajorTickMarks","drawMinorTickMarks","useSeriesColor","borderWidth","borderColor","scaleToHiddenSeries","_dataBounds","_intervalStats","_offsets","_ticks","_label","syncTicks","tickSpacing","_min","_max","_tickInterval","_numberTicks","__ticks","_options","Legend","labels","showLabels","showSwatches","placement","xoffset","yoffset","border","textColor","fontFamily","fontSize","rowSpacing","TableLegendRenderer","preDraw","marginTop","marginRight","marginBottom","marginLeft","escapeHtml","Title","textAlign","DivTitleRenderer","Series","xaxis","_xaxis","yaxis","_yaxis","gridBorderWidth","LineRenderer","gridData","negativeColor","lineJoin","lineCap","linePattern","shadowAngle","shadowOffset","shadowDepth","shadowAlpha","breakOnNull","markerRenderer","MarkerRenderer","showLine","showMarker","index","fill","fillColor","fillAlpha","fillAndStroke","disableStack","_stack","neighborThreshold","fillToZero","fillToValue","fillAxis","useNegativeColors","_stackData","_plotData","_plotValues","x","y","_intervals","_prevPlotData","_prevGridData","_stackAxis","_primaryAxis","canvas","GenericCanvas","shadowCanvas","plugins","_sumy","_sumx","_type","Grid","drawGridlines","gridLineColor","gridLineWidth","shadowWidth","shadowColor","_left","_top","_right","_bottom","_width","_height","_axes","CanvasGridRenderer","top","bottom","left","right","fn","emptyForce","elem","i","nodeType","cleanData","getElementsByTagName","outerHTML","firstChild","removeChild","removeChildForce","parent","datas","l","arguments","length","isArray","push","isPlainObject","tid","plot","opts","dl","ol","attr","targetCounter","target","_data","jqPlot","removeClass","config","catchErrors","init","draw","themeEngine","e","msg","errorMessage","message","append","addClass","getElementById","errorBackground","errorBorder","errorFontFamily","errorFontSize","fontStyle","errorFontStyle","fontWeight","errorFontWeight","version","revision","CanvasManager","canvases","free","myCanvases","getCanvas","makeNew","createElement","initCanvas","G_vmlCanvasManager","initElement","cctx","getContext","canvasBackingScale","devicePixelRatio","webkitBackingStorePixelRatio","oldWidth","oldHeight","height","save","scale","freeAllCanvases","freeCanvas","idx","uninitElement","clearRect","unbind","removeAttr","css","position","log","console","apply","addDomReference","enablePlugins","defaultHeight","defaultWidth","UTCAdjust","timezoneOffset","Date","getTimezoneOffset","defaultTickFormatString","defaultColors","defaultNegativeColors","dashLength","gapLength","dotGapLength","srcLocation","pluginLocation","arrayMax","array","arrayMin","support_canvas","result","support_canvas_text","_version","fillText","support","boxModel","objectAll","$support","leadingWhitespace","preInitHooks","postInitHooks","preParseOptionsHooks","postParseOptionsHooks","preDrawHooks","postDrawHooks","preDrawSeriesHooks","postDrawSeriesHooks","preDrawLegendHooks","addLegendRowHooks","preSeriesInitHooks","postSeriesInitHooks","preParseSeriesOptionsHooks","postParseSeriesOptionsHooks","eventListenerHooks","preDrawSeriesShadowHooks","postDrawSeriesShadowHooks","_elem","_plotWidth","_plotHeight","_plotDimensions","prototype","el","offsets","clss","cssopts","attrib","klass","getWidth","outerWidth","getHeight","outerHeight","getPosition","getTop","getLeft","getBottom","getRight","constructor","isFunction","axis","showMark","indexOf","ctx","set","pack","pos","reset","resetScale","resetDataBounds","s","d","db","doforce","bands","charAt","minyidx","maxyidx","j","BarRenderer","hasOwnProperty","forceTickAt0","barDirection","setOptions","gridbw","temp","colorGenerator","get","negativeColorGenerator","comp","normalize2rgb","getColorComponents","sctx","_ctx","setGridData","preventJqPlotSeriesDrawTrigger","trigger","makeGridData","_smoothedData","drawShadow","toggleDisplay","ev","callback","series","is","fadeIn","nextAll","fadeOut","hide","plotDimensions","canvasManager","setContext","resetCanvas","HooksManager","hooks","args","addOnce","havehook","add","EventListenerManager","h","_axisNames","axes","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis","baseCanvas","captureRightClick","dataRenderer","dataRendererOptions","defaults","defaultAxisStart","drawIfHidden","eventCanvas","fillBetween","series1","series2","baseSeries","noDataIndicator","indicator","negativeSeriesColors","previousSeriesStack","seriesStack","sortData","stackSeries","syncXTicks","syncYTicks","targetId","title","_drawCount","_gridPadding","_defaultGridPadding","_addDomReference","ColorGenerator","ThemeEngine","sc","check","bat","n","sort","a","b","getEventPosition","go","offset","gridPos","pageX","pageY","dataPos","an","ax","series_p2u","checkIntersection","gridpos","k","r","theta","sm","sa","minang","maxang","d0","p","points","hp","threshold","t","_highlightThreshold","_barPoints","seriesIndex","pointIndex","PyramidRenderer","DonutRenderer","startAngle","PI","_center","sqrt","pow","atan","sliceMargin","_radius","_innerRadius","PieRenderer","BubbleRenderer","ret","FunnelRenderer","lex","rex","cv","v","_vertices","vfirst","vlast","findedge","p1","p2","m","inside","_boundingBox","numPoints","_areaPoints","ii","vertex1","vertex2","OHLCRenderer","candleStick","yp","series_u2p","_bodyWidth","hlc","_tickLength","Error","w","hasClass","parseInt","prop","eh","ew","temp2","html","th","tw","parseOptions","computePlotData","resetAxesScale","reInitialize","substr","tdata","tlen","quickInit","initBands","cd","plotValues","sidx","cdl","prevval","populatePlotData","tempx","tempy","dval","stackval","plotdata","getNextSeriesColor","tempi","setColors","gridPadding","normalizeData","dir","start","sopts","toString","destroy","empty","innerHTML","replot","clear","resetAxes","isEmptyObject","redraw","tsl","legendElem","detach","ra","rapad","gpr","gridDimensions","gdw","gdh","widthAdj","heightAdj","arr","legendPadding","ltemp","zIndex","seriesLength","fillStyle","fillRect","bindCustomEvents","before","drawSeries","legendInfo","after","bind","temps","tempr","sel","_els","fb","doFillBetweenLines","doFb","tempSeries1","tempSeries2","cnt","_supported","find","stop","jqplotEffect","mode","direction","sid1","sid2","id1","id2","tempgd","slice","reverse","gd","concat","closePath","shapeRenderer","onClick","onDblClick","onMouseDown","onMouseMove","onMouseEnter","onMouseLeave","onRightClick","oncontextmenu","onMouseUp","positions","neighbor","evt","Event","which","relatedTarget","BezierCurveRenderer","moveSeriesToFront","stackIndex","inArray","opidx","serelem","shadelem","splice","moveSeriesToBack","unshift","restorePreviousSeriesOrder","move","keep","restoreOriginalSeriesOrder","activateTheme","activate","computeHighlightColors","colors","sum","newrgb","rgba","next","previous","floor","c","getIndex","setIndex","hex2rgb","rgb","replace","rgb2hex","match","search","colorKeywordMap","parseFloat","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","escapeHTML","Number","mark","showGridline","isMinorTick","value","_styles","formatter","DefaultTickFormatter","prefix","suffix","_breakTick","setTick","axisName","isMinor","format","sprintf","String","PercentTickFormatter","shadowRenderer","ShadowRenderer","isarc","angle","alpha","depth","strokeStyle","backgroundColor","numticks","drawBaseline","bopts","baselineWidth","baselineColor","drawLine","round","u2p","tn","t0","bx","by","ex","ey","beginPath","moveTo","lineTo","stroke","restore","styles","paddingBottom","getSteps","f","tanh","exp","computeConstrainedSmoothedData","dim","xp","steps","dist","_smoothedPlotData","isNaN","A","B","C","D","yy","xx","dxx","x1","x0","nmax","num","gdl","gxx","ggxx","increment","computeHermiteSmoothedData","h1","h2","h3","h4","TiX","TiY","Ti1X","Ti1Y","pX","pY","stretch","shift","tension","a1","slope2","abs","postInit","highlightMouseOver","highlightMouseDown","postPlotDraw","lineRenderer","highlightCanvas","highlightedSeriesIndex","unhighlight","highlight","pidx","_highlightedPoint","highlightColor","type","handleMove","datapos","ins","evt1","jQuery","handleMouseDown","handleMouseUp","handleClick","handleRightClick","bestFormatString","interval","fstr","LN10","LinePattern","pattern","defaultLinePatterns","dotted","dashed","solid","imax","patternIndex","patternDistance","px","py","pathx0","pathy0","dx","dy","dp","ShapeRenderer","constrainSmoothing","_hiBandGridData","_lowBandGridData","_hiBandSmoothedData","_lowBandSmoothedData","bandData","hiData","lowData","showLines","lopts","shadow_offset","isTrendline","fc","bd","bdminidx","bdmaxidx","low","hi","intrv","afunc","bfunc","hd","ld","pdata","hasNull","ymin","xmax","ymax","posfs","fasgd","prev","pd","pyzero","xintercept","gridymin","len","fasopts","markerOptionsCallback","bdat","xmin","breakPoints","breakTickLabel","forceTickAt100","tickInset","minorTicks","alignTicks","_autoFormatString","_overrideFormatString","_scalefact","createTicks","appendTo","tick","lshow","tt","userTicks","userMin","userMax","userNT","userTI","ut","rmin","rmax","to","range","keepMin","keepMax","LinearTickGenerator","tumin","tumax","adj","rrange","ti","margin","forceMinZero","forceZeroLine","faname","vals","vmin","vmax","ntmin","ntmax","sf","getSignificantFigures","digitsLeft","significantDigits","digitsRight","fs","precision","regex","fact","toFixed","resetTickValues","offmax","offmin","pixellength","unitlength","p2u","u","labelPosition","shim","_textRenderer","sin","cos","bestInterval","minimum","magnitude","residual","bestLinearInterval","scalefact","expv","getShadowRendererOptions","sdopt","getShapeRendererOptions","shopt","numericalOrder","clone","obj","key","merge","obj1","obj2","axis_min","axis_max","ss","gsf","digitsMin","digitsSS","digitsMax","newti","bestLinearComponents","bestConstrainedInterval","nttarget","sd","bestNT","fsd","currentNT","bestPrec","badness","MAX_VALUE","drawDiamond","drawPlus","points1","points2","drawX","drawDash","drawSquare","drawCircle","ctxPattern","translate","arc","strokeRect","addrow","tr","td","div0","div1","rs","prependTo","paddingTop","lt","item","themes","activeTheme","nn","Theme","_name","LineSeriesProperties","BarSeriesProperties","PieSeriesProperties","DonutSeriesProperties","FunnelSeriesProperties","MeterGaugeRenderer","MeterSeriesProperties","AxisProperties","_add","getThemeNames","getThemes","redrawPlot","axesStyles","axname","thaxis","thaxstyle","thax","seriesStyles","theme","parse","remove","newTheme","copy","deep","src","rename","oldName","newName","sourceName","targetName","AxisTicks","AxisLabel","whiteSpace","MarkerOptions","barPadding","barMargin","barWidth","padding","innerDiameter","thickness","ringMargin","sectionMargin","ringColor","tickColor","ringWidth","intervalColors","intervalInnerRadius","intervalOuterRadius","hubRadius","needleThickness","needlePad","jqplotChildText","contents","filter","jqplotGetComputedFontStyle","getComputedStyle","currentStyle","attrs","join","jqplotToImageCanvas","x_offset","y_offset","temptop","templeft","tempbottom","tempright","newCanvas","offs","plotleft","plottop","transx","transy","clses","newContext","writeWrappedText","context","canvasWidth","lineheight","getLineheight","tagwidth","innerWidth","words","innerHeight","split","wl","breaks","measureText","_jqpToImage","tagname","tagName","toLowerCase","borderLeftWidth","paddingLeft","borderTopWidth","swatch","children","font","drawImage","textBaseline","jqplotToImageStr","imgCanvas","toDataURL","jqplotToImageElem","str","jqplotToImageElemStr","jqplotSaveImage","imgData","href","jqplotViewImage","imgStr","open","write","close","jsDate","syntax","proxy","locale","regional","getLocale","defaultCentury","get_type","createDate","date","setFullYear","setHours","defaultLocale","number","unit","factor","multipliers","day","setTime","getTime","getUtcOffset","diff","dateObj","allowDecimal","unitDiff","getAbbrDayName","getDay","getAbbrMonthName","getMonth","getAMPM","getHours","getAmPm","getCentury","getFullYear","getDate","getDayOfWeek","dow","getDayOfYear","ms","getDayName","getFullWeekOfYear","doy","rdow","getGmtOffset","hours","addZeros","getHours12","getIsoWeek","woy","getWeekOfYear","dow1_1","idow","getMilliseconds","getMinutes","getMonthName","getMonthNumber","getSeconds","getShortYear","getYear","getTimezoneAbbr","getTimezoneName","exec","getUnix","setDate","setMilliseconds","setMinutes","setMonth","setSeconds","setYear","strftime","toYmdInt","monthNames","monthNamesShort","dayNames","dayNamesShort","lang","digits","millisecond","second","minute","hour","week","month","year","prevMonth","d1","d2","diffYears","substring","code","formats","getter","nbr","thing","Object","syn","loc","source","codes","matcher","ISO","SQL","perl","Y","H","I","M","S","N","O","Z","G","shortcuts","F","T","X","R","php","U","V","W","P","z","parsable","m3","ny","nd","nm","m1","m2","cent","matchers","current","NaN","daysInMonth","chr","leftJustify","Array","thousand_separate","value_str","thousandsSeparator","justify","minWidth","zeroPad","htmlSpace","spchar","formatBaseX","base","valueIndex","flags","positivePrefix","prefixBaseX","thousandSeparation","isFinite","fromCharCode","toUpperCase","method","textTransform","parts","decimalMark","toExponential","zeros","toPrecision","prec","expn","dleft","exponent","getPrecision","backCompat","uiBackCompat","effects","effect","dataSpace","_normalizeArguments","fx","speeds","off","_default","complete","element","setMode","createWrapper","props","wrapper","active","activeElement","wrap","contains","focus","removeWrapper","replaceWith","queue","effectMethod","oldEffectMethod","run","done","rvertical","rpositivemotion","blind","o","distance","vertical","test","ref","ref2","motion","overflow","getStart","didx","prevSeriesIndex","aidx","barRenderer","waterfall","groups","varyBarColor","transposedData","_plotSeriesInfo","_dataColors","skip","count","calcSeriesNumbers","nvals","nseries","paxis","setBarWidth","nbins","_barNudge","negativeColors","positiveColors","xstart","ystart","positiveColor","clr","fontStretch","enableFontSupport","pt2px","ropts","getAngleRad","CanvasFontRenderer","CanvasTextRenderer","setText","fontVariant","normalizedFontSize","normalizeFontSize","setHeight","sz","fontWeight2Float","getText","setWidth","measure","letter","ch","letters","ascent","descent","total","tx","ty","mag","rotate","penUp","fstyle","CategoryAxisRenderer","sortMergedLabels","groupLabels","_groupLabels","_grouped","_barsPerGroup","numcats","isMerged","track","maxVisibleTicks","dim2","labeledge","mid","updateTooltip","addbr","showTooltipGridPosition","showTooltipUnitPosition","g","tooltipAxisGroups","useAxesFormatters","af","tooltipFormatString","showTooltipDataPosition","getIntersectingPoints","cellid","indices","sx","sy","xf","yf","xfstr","yfstr","_tooltipElem","moveLine","cursorCanvas","showVerticalLine","showHorizontalLine","showCursorLegend","cells","cursorLegendFormatString","intersectionThreshold","moveTooltip","tooltipLocation","tooltipOffset","preventDefault","stopImmediatePropagation","clickReset","resetZoom","getSelection","selection","isCollapsed","collapse","handleDblClick","dblClickReset","handleMouseLeave","onGrid","previousCursor","_zoom","zooming","showTooltipOutsideZoom","constrainOutsideZoom","handleMouseEnter","followMouse","positionTooltip","handleMouseMove","handleZoomMove","started","zoomTarget","zoomCanvas","xpos","ypos","constrainZoomTo","end","drawZoomBox","mobile","one","onselectstart","_oldHandlers","ondrag","onmousedown","zoomProxy","doZoom","Cursor","looseZoom","isZoomed","CursorLegendRenderer","tickFormatString","postDraw","display","targetPlot","controllerPlot","tc","cc","cax","newmin","newmax","curax","zaxes","daTickInterval","LogAxisRenderer","autoscaleConstraint","seriesMin","seriesMax","seriesIdx","seriesObj","point","DateAxisRenderer","niceFormatStrings","niceIntervals","DateTickFormatter","_daTickInterval","stats","intv","intervals","frequencies","sortedIntervals","mean","frequency","insetMult","onePointOpts","delta","titarget","tdim","spacingFactor","bestTi","bestfmt","bestDateInterval","tempti","mstart","tempmend","mend","nmonths","nyears","nc","hl","isHighlighting","fadeTooltip","tooltipFadeSpeed","bringSeriesToFront","currentNeighbor","showHighlight","Highlighter","lineWidthAdjust","sizeAdjust","tooltipAxes","tooltipSeparator","tooltipContentEditor","yvalues","locations","locationIndicies","oppositeLocations","smr","mr","x_pos","y_pos","serieshl","xstr","ystrs","axisDefaults","tickDistribution","order","tt1","nt","lb","trans","invtrans","E","PointLabels","labelsFromSeries","seriesLabelIndex","_labels","stackedValue","ypadding","hideZeros","_elems","setLabels","labelIdx","xOffset","yOffset","helem","xax","yax","insertAfter","ell","elt","elr","elb","et","scl","sct","scr","scb"],"sourceRoot":""}