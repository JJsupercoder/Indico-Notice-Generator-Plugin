{"version":3,"file":"js/module_events.management.647b21c7.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/management/client/js/badges.js","webpack:///indico/modules/events/persons/client/js/EmailParticipantRoles.jsx","webpack:///indico/modules/events/persons/client/js/EmailParticipantRolesButton.jsx","webpack:///indico/modules/events/persons/client/js/PersonList.jsx","webpack:///indico/modules/events/persons/client/js/AuthorsList.jsx","webpack:///indico/modules/events/persons/client/js/AuthorsListButton.jsx","webpack:///indico/modules/events/management/client/js/SeriesManagement.module.scss?c828","webpack:///indico/modules/events/management/client/js/SeriesManagement.jsx","webpack:///indico/modules/events/management/client/js/index.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n(function(global) {\n  global.setupBadgePrinting = function setupBadgePrinting(templates) {\n    const $template = $('#template');\n    const $pageLayout = $('#page_layout');\n    const $dashedBorder = $('#dashed_border');\n    const $pageSize = $('#page_size');\n    const $pageOrientation = $('#page_orientation');\n    const $marginEditor = $('.margin-editor');\n    const $infoMessage = $('.info');\n\n    function toggleFoldableOption(template, pageSize, pageOrientation) {\n      const foldablePairs = {\n        A0: 'A2',\n        A1: 'A3',\n        A2: 'A4',\n        A3: 'A5',\n        A4: 'A6',\n        A5: 'A7',\n        A6: 'A8',\n      };\n      if (foldablePairs[pageSize] === template.format && pageOrientation === template.orientation) {\n        $(\"#page_layout option[value='foldable']\").prop('disabled', false);\n      } else {\n        $(\"#page_layout option[value='foldable']\").prop('disabled', true);\n        if ($('#page_layout :selected').val() === 'foldable') {\n          $('#page_layout :selected')\n            .next()\n            .prop('selected', true);\n        }\n      }\n    }\n\n    $template\n      .on('change', function() {\n        const $this = $(this);\n        const template = templates[parseInt($this.val(), 10)];\n\n        $pageLayout.closest('.form-group').toggle(!!template.backside_tpl_id);\n        $pageLayout.val('front_only');\n        toggleFoldableOption(template, $pageSize.val(), $pageOrientation.val());\n      })\n      .change();\n\n    $pageLayout\n      .on('change', function() {\n        $marginEditor.add($infoMessage).toggle($(this).val() !== 'foldable');\n        $dashedBorder.closest('.form-group').toggle($(this).val() !== 'foldable');\n      })\n      .change();\n    $pageSize\n      .add($pageOrientation)\n      .on('change', function() {\n        toggleFoldableOption(\n          templates[parseInt($template.val(), 10)],\n          $pageSize.val(),\n          $pageOrientation.val()\n        );\n        $pageLayout.change();\n      })\n      .change();\n  };\n})(window);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport emailMetadataURL from 'indico-url:persons.api_email_event_persons_metadata';\nimport emailSendURL from 'indico-url:persons.api_email_event_persons_send';\nimport emailPreviewURL from 'indico-url:persons.email_event_persons_preview';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Dimmer, Loader} from 'semantic-ui-react';\n\nimport {handleSubmitError} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {indicoAxios} from 'indico/utils/axios';\n\nimport {EmailDialog} from './EmailDialog';\n\nexport function EmailParticipantRoles({\n  eventId,\n  roleIds,\n  persons,\n  onClose,\n  onSubmitSucceeded,\n  noAccount,\n  notInvitedOnly,\n  successTimeout,\n}) {\n  const [sentCount, setSentCount] = useState(0);\n  const recipientData = {\n    role_id: roleIds,\n    persons,\n    no_account: noAccount,\n    not_invited_only: notInvitedOnly,\n  };\n  const {data, loading} = useIndicoAxios({\n    url: emailMetadataURL({event_id: eventId}),\n    method: 'POST',\n    data: recipientData,\n  });\n  const {\n    senders = [],\n    recipients = [],\n    subject: defaultSubject,\n    body: defaultBody,\n    placeholders = [],\n  } = data || {};\n\n  const handleSubmit = async data => {\n    const requestData = {...data, ...recipientData};\n    let resp;\n    try {\n      resp = await indicoAxios.post(emailSendURL({event_id: eventId}), requestData);\n    } catch (err) {\n      return handleSubmitError(err);\n    }\n    setSentCount(resp.data.count);\n    if (onSubmitSucceeded) {\n      onSubmitSucceeded(resp.data.count);\n    }\n    setTimeout(() => onClose(), successTimeout);\n  };\n\n  if (loading) {\n    return (\n      <Dimmer active page inverted>\n        <Loader />\n      </Dimmer>\n    );\n  }\n\n  return (\n    <EmailDialog\n      onSubmit={handleSubmit}\n      onClose={onClose}\n      senders={senders}\n      recipients={recipients}\n      previewURL={emailPreviewURL({event_id: eventId})}\n      previewContext={recipientData}\n      placeholders={placeholders}\n      initialFormValues={{subject: defaultSubject, body: defaultBody}}\n      sentEmailsCount={sentCount}\n    />\n  );\n}\n\nEmailParticipantRoles.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  roleIds: PropTypes.arrayOf(PropTypes.number),\n  persons: PropTypes.arrayOf(PropTypes.string),\n  onClose: PropTypes.func.isRequired,\n  onSubmitSucceeded: PropTypes.func,\n  noAccount: PropTypes.bool,\n  notInvitedOnly: PropTypes.bool,\n  successTimeout: PropTypes.number,\n};\n\nEmailParticipantRoles.defaultProps = {\n  roleIds: [],\n  persons: [],\n  onSubmitSucceeded: undefined,\n  noAccount: false,\n  notInvitedOnly: false,\n  successTimeout: 5000,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useEffect, useState} from 'react';\nimport {Button} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport {EmailParticipantRoles} from './EmailParticipantRoles';\nimport {getIds} from './util';\n\nexport function EmailParticipantRolesButton({\n  eventId,\n  roleId,\n  persons,\n  personSelector,\n  triggerSelector,\n  noAccount,\n  notInvitedOnly,\n  onSubmitSucceeded,\n  successTimeout,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  persons = personSelector ? getIds(personSelector, false) : persons;\n\n  useEffect(() => {\n    if (!triggerSelector) {\n      return;\n    }\n    const handler = () => setOpen(true);\n    const element = document.querySelector(triggerSelector);\n    element.addEventListener('click', handler);\n    return () => element.removeEventListener('click', handler);\n  }, [triggerSelector]);\n\n  return (\n    <>\n      {!triggerSelector && (\n        <Button onClick={() => setOpen(true)} disabled={!(roleId || persons.length)} {...rest}>\n          <Translate>Send email</Translate>\n        </Button>\n      )}\n      {open && (\n        <EmailParticipantRoles\n          eventId={eventId}\n          roleIds={roleId && [roleId]}\n          persons={persons}\n          noAccount={noAccount}\n          notInvitedOnly={notInvitedOnly}\n          onClose={() => setOpen(false)}\n          onSubmitSucceeded={onSubmitSucceeded}\n          successTimeout={successTimeout}\n        />\n      )}\n    </>\n  );\n}\n\nEmailParticipantRolesButton.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  roleId: PropTypes.number,\n  persons: PropTypes.arrayOf(PropTypes.string),\n  personSelector: PropTypes.string,\n  triggerSelector: PropTypes.string,\n  noAccount: PropTypes.bool,\n  notInvitedOnly: PropTypes.bool,\n  onSubmitSucceeded: PropTypes.func,\n  successTimeout: PropTypes.number,\n};\n\nEmailParticipantRolesButton.defaultProps = {\n  roleId: undefined,\n  persons: [],\n  personSelector: undefined,\n  triggerSelector: undefined,\n  noAccount: false,\n  notInvitedOnly: false,\n  onSubmitSucceeded: undefined,\n  successTimeout: undefined,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {useReducer} from 'react';\nimport {Checkbox, Icon, Popup, Table} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport './PersonList.module.scss';\n\nconst getDefaultSort = persons => _.sortBy(persons, 'identifier');\n\nfunction personListReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_SORT':\n      if (state.column !== action.column) {\n        return {\n          column: action.column,\n          sortedPersons: getDefaultSort(state.sortedPersons).sort((a, b) =>\n            a[action.column].localeCompare(b[action.column])\n          ),\n          direction: 'ascending',\n        };\n      }\n      if (state.direction === 'ascending') {\n        return {\n          column: state.column,\n          sortedPersons: state.sortedPersons.slice().reverse(),\n          direction: 'descending',\n        };\n      }\n      return {\n        column: null,\n        sortedPersons: getDefaultSort(state.sortedPersons),\n        direction: null,\n      };\n    default:\n      return state;\n  }\n}\n\nconst makeAuthorType = ({primaryAuthor, secondaryAuthor}) => {\n  return (\n    [primaryAuthor && Translate.string('Primary'), secondaryAuthor && Translate.string('Co-author')]\n      .filter(t => t)\n      .join(', ') || '-'\n  );\n};\n\nexport default function PersonList({\n  persons,\n  selectedPersons,\n  onChangeSelection,\n  isSelectable,\n  isVisible,\n  extraRoles,\n}) {\n  const [state, dispatch] = useReducer(personListReducer, {\n    column: null,\n    sortedPersons: getDefaultSort(persons).map(person => ({\n      ...person,\n      authorType: makeAuthorType(person),\n      selectable: isSelectable(person),\n    })),\n    direction: null,\n  });\n  const {column, sortedPersons, direction} = state;\n  const visibleSortedPersons = sortedPersons.filter(person => isVisible(person));\n  const selectablePersons = visibleSortedPersons.filter(person => person.selectable);\n  const visibleSelectedPersons = selectedPersons.filter(id =>\n    isVisible(persons.find(person => person.identifier === id))\n  ).length;\n\n  const roles = [\n    ...extraRoles,\n    {\n      icon: 'mic',\n      isActive: p => p.speaker,\n      titleActive: Translate.string('This person is a speaker'),\n      titleInactive: Translate.string('This person is not a speaker'),\n    },\n  ];\n\n  const toggleSelectAll = dataChecked => {\n    if (dataChecked) {\n      onChangeSelection(selectablePersons.map(person => person.identifier));\n    } else {\n      onChangeSelection([]);\n    }\n  };\n\n  const toggleSelectRow = ({identifier, selectable}) => {\n    if (!selectable) {\n      return;\n    }\n    if (selectedPersons.includes(identifier)) {\n      onChangeSelection(selectedPersons.filter(sId => sId !== identifier));\n    } else {\n      onChangeSelection([...selectedPersons, identifier]);\n    }\n  };\n\n  return (\n    <Table sortable selectable singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell disabled colSpan=\"2\">\n            <Checkbox\n              indeterminate={\n                visibleSelectedPersons > 0 && visibleSelectedPersons < selectablePersons.length\n              }\n              checked={\n                visibleSelectedPersons > 0 && visibleSelectedPersons === selectablePersons.length\n              }\n              onChange={(e, data) => toggleSelectAll(data.checked)}\n              disabled={!selectablePersons.length}\n            />\n          </Table.HeaderCell>\n          <Translate\n            as={Table.HeaderCell}\n            sorted={column === 'fullName' ? direction : null}\n            onClick={() => dispatch({type: 'CHANGE_SORT', column: 'fullName'})}\n          >\n            Name\n          </Translate>\n          <Translate\n            as={Table.HeaderCell}\n            sorted={column === 'email' ? direction : null}\n            onClick={() => dispatch({type: 'CHANGE_SORT', column: 'email'})}\n          >\n            Email\n          </Translate>\n          <Translate\n            as={Table.HeaderCell}\n            sorted={column === 'affiliation' ? direction : null}\n            onClick={() => dispatch({type: 'CHANGE_SORT', column: 'affiliation'})}\n          >\n            Affiliation\n          </Translate>\n          <Translate\n            as={Table.HeaderCell}\n            sorted={column === 'authorType' ? direction : null}\n            onClick={() => dispatch({type: 'CHANGE_SORT', column: 'authorType'})}\n          >\n            Author type\n          </Translate>\n          <Translate as={Table.HeaderCell} disabled>\n            Roles\n          </Translate>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {visibleSortedPersons.map(person => (\n          <Table.Row\n            key={person.identifier}\n            style={person.selectable ? {} : {opacity: '50%'}}\n            onClick={() => toggleSelectRow(person)}\n          >\n            <Table.Cell collapsing>\n              <Checkbox\n                disabled={!person.selectable}\n                checked={selectedPersons.includes(person.identifier)}\n              />\n            </Table.Cell>\n            <Table.Cell collapsing>\n              <Popup\n                content={\n                  person.registered\n                    ? Translate.string('This person is registered for the event')\n                    : Translate.string('This person is not yet registered')\n                }\n                position=\"bottom center\"\n                inverted\n                trigger={<i className={`icon-ticket ${person.registered ? '' : 'inactive'}`} />}\n              />\n            </Table.Cell>\n            <Table.Cell styleName=\"data-cell\">{person.fullName}</Table.Cell>\n            <Table.Cell styleName=\"data-cell\">{person.email}</Table.Cell>\n            <Table.Cell styleName=\"data-cell\">{person.affiliation}</Table.Cell>\n            <Table.Cell collapsing>{person.authorType}</Table.Cell>\n            <Table.Cell collapsing>\n              {roles.map(({icon, isActive, titleActive, titleInactive}) => (\n                <Popup\n                  key={icon}\n                  content={isActive(person) ? titleActive : titleInactive}\n                  position=\"bottom center\"\n                  inverted\n                  trigger={\n                    <i\n                      key={icon}\n                      className={`icon-${icon} ${isActive(person) ? '' : 'inactive'}`}\n                    />\n                  }\n                />\n              ))}\n            </Table.Cell>\n          </Table.Row>\n        ))}\n        {!visibleSortedPersons.length && (\n          <Table.Row warning>\n            <Table.Cell colSpan=\"7\">\n              <Icon name=\"attention\" />\n              <Translate>No persons were found matching the selected criteria.</Translate>\n            </Table.Cell>\n          </Table.Row>\n        )}\n      </Table.Body>\n    </Table>\n  );\n}\n\nPersonList.propTypes = {\n  persons: PropTypes.arrayOf(\n    PropTypes.shape({\n      identifier: PropTypes.string.isRequired,\n      fullName: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      affiliation: PropTypes.string.isRequired,\n      speaker: PropTypes.bool.isRequired,\n      primaryAuthor: PropTypes.bool.isRequired,\n      secondaryAuthor: PropTypes.bool.isRequired,\n      registered: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  selectedPersons: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChangeSelection: PropTypes.func.isRequired,\n  isSelectable: PropTypes.func,\n  isVisible: PropTypes.func,\n  extraRoles: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      isActive: PropTypes.func.isRequired,\n      titleActive: PropTypes.string.isRequired,\n      titleInactive: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nPersonList.defaultProps = {\n  isSelectable: () => true,\n  isVisible: () => true,\n  extraRoles: [],\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport abstractsPersonListURL from 'indico-url:abstracts.person_list';\nimport contribsPersonListURL from 'indico-url:contributions.person_list';\nimport sessionsPersonListURL from 'indico-url:sessions.person_list';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Button, Dimmer, Loader, Message, Modal} from 'semantic-ui-react';\n\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\n\nimport {EmailSentMessage} from './EmailDialog';\nimport {EmailParticipantRolesButton} from './EmailParticipantRolesButton';\nimport PersonList from './PersonList';\n\n// In abstracts there is always a submitter so we don't need an emptyListMessage\nexport const CONTEXTS = {\n  abstracts: {idType: 'abstract_id', personListURL: abstractsPersonListURL},\n  contributions: {\n    idType: 'contribution_id',\n    personListURL: contribsPersonListURL,\n    emptyListMessage: Translate.string(\n      'There are no persons associated with the selected contributions'\n    ),\n  },\n  sessions: {\n    idType: 'session_id',\n    personListURL: sessionsPersonListURL,\n    emptyListMessage: Translate.string(\n      'There are no persons associated with contributions in the selected sessions'\n    ),\n  },\n};\n\nconst FILTER_OPTIONS = {\n  submitter: {\n    text: Translate.string('Submitters'),\n    isMatch: person => person.submitter,\n    contexts: ['abstracts'],\n  },\n  speaker: {\n    text: Translate.string('Speakers'),\n    isMatch: person => person.speaker,\n  },\n  primaryAuthor: {\n    text: Translate.string('Primary authors'),\n    isMatch: person => person.primaryAuthor,\n  },\n  secondaryAuthor: {\n    text: Translate.string('Co-authors'),\n    isMatch: person => person.secondaryAuthor,\n  },\n  notRegistered: {\n    text: Translate.string('Not registered'),\n    isMatch: person => !person.registered,\n  },\n};\n\nexport function AuthorsList({eventId, sourceIds, objectContext, onClose}) {\n  const [selectedPersons, setSelectedPersons] = useState([]);\n  const [sentEmailCount, setSentEmailCount] = useState(undefined);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const formData = new FormData();\n  sourceIds.forEach(v => formData.append(CONTEXTS[objectContext].idType, v));\n  const {data, loading} = useIndicoAxios(\n    {\n      url: CONTEXTS[objectContext].personListURL({event_id: eventId}),\n      method: 'POST',\n      data: formData,\n      headers: {'content-type': 'multipart/form-data'},\n    },\n    {camelize: true}\n  );\n  const extraRoles =\n    objectContext === 'abstracts'\n      ? [\n          {\n            icon: 'user-check icon',\n            isActive: p => p.submitter,\n            titleActive: Translate.string('This person submitted an abstract'),\n            titleInactive: Translate.string(\"This person hasn't submitted any abstracts\"),\n          },\n        ]\n      : undefined;\n\n  const isVisible = person =>\n    !activeFilters.length || activeFilters.some(filter => FILTER_OPTIONS[filter].isMatch(person));\n\n  const toggleFilter = name => {\n    setActiveFilters(\n      activeFilters.includes(name)\n        ? activeFilters.filter(f => f !== name)\n        : [...activeFilters, name]\n    );\n  };\n\n  const filterButtons = Object.entries(FILTER_OPTIONS)\n    .filter(([, filter]) => !filter.contexts || filter.contexts.includes(objectContext))\n    .map(([name, filter]) => ({\n      key: name,\n      content: filter.text,\n      onClick: () => toggleFilter(name),\n      primary: activeFilters.includes(name),\n    }));\n\n  return (\n    <Modal open onClose={() => onClose()} size=\"large\">\n      <Modal.Header content={Translate.string('Authors list')} />\n      <Modal.Content>\n        {sentEmailCount && <EmailSentMessage count={sentEmailCount} />}\n        <div>\n          <Translate\n            as=\"div\"\n            style={{display: 'inline-block', fontWeight: 'bold', padding: '0.5em'}}\n          >\n            Filter by\n          </Translate>\n          <Button.Group buttons={filterButtons} compact />\n        </div>\n        {loading || !data ? (\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n        ) : Object.keys(data.eventPersons).length ? (\n          <PersonList\n            persons={Object.values(data.eventPersons)}\n            selectedPersons={selectedPersons}\n            onChangeSelection={persons => setSelectedPersons(persons)}\n            isSelectable={person => !!person.email}\n            isVisible={isVisible}\n            extraRoles={extraRoles}\n          />\n        ) : (\n          <Message error>{CONTEXTS[objectContext].emptyListMessage}</Message>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <EmailParticipantRolesButton\n          eventId={eventId}\n          persons={selectedPersons.filter(id => isVisible(data.eventPersons[id]))}\n          onSubmitSucceeded={count => setSentEmailCount(count)}\n          successTimeout={0}\n          primary\n        />\n        <Translate as={Button} onClick={() => onClose()}>\n          Close\n        </Translate>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nAuthorsList.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  sourceIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n  objectContext: PropTypes.oneOf(Object.keys(CONTEXTS)).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport {AuthorsList, CONTEXTS} from './AuthorsList';\nimport {getIds} from './util';\n\nexport function AuthorsListButton({eventId, objectContext, paramsSelector}) {\n  const [open, setOpen] = useState(false);\n  const sourceIds = getIds(paramsSelector);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"i-button icon-users js-requires-selected-row disabled\"\n        onClick={evt => {\n          if (!evt.target.classList.contains('disabled')) {\n            setOpen(true);\n          }\n        }}\n      >\n        <Translate>Authors list</Translate>\n      </button>\n      {open && (\n        <AuthorsList\n          eventId={eventId}\n          sourceIds={sourceIds}\n          objectContext={objectContext}\n          onClose={() => setOpen(false)}\n        />\n      )}\n    </>\n  );\n}\n\nAuthorsListButton.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  objectContext: PropTypes.oneOf(Object.keys(CONTEXTS)).isRequired,\n  paramsSelector: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"evt-list\":\"events-management-client-js-___SeriesManagement-module__evt-list___PkKqH\",\"evt-item\":\"events-management-client-js-___SeriesManagement-module__evt-item___5iu8a\",\"detail\":\"events-management-client-js-___SeriesManagement-module__detail___mXZyy\",\"delete-button\":\"events-management-client-js-___SeriesManagement-module__delete-button___BZmEH\",\"list-flex\":\"events-management-client-js-___SeriesManagement-module__list-flex___DE65m\",\"disabled\":\"events-management-client-js-___SeriesManagement-module__disabled___CB78C\",\"date-span\":\"events-management-client-js-___SeriesManagement-module__date-span___8yRl2\",\"category-chain\":\"events-management-client-js-___SeriesManagement-module__category-chain___SNXOv\",\"event-title\":\"events-management-client-js-___SeriesManagement-module__event-title___961dm\",\"warning-reason\":\"events-management-client-js-___SeriesManagement-module__warning-reason___ag6NQ\",\"positive-note\":\"events-management-client-js-___SeriesManagement-module__positive-note___TNVKv\",\"load-more\":\"events-management-client-js-___SeriesManagement-module__load-more___6T2U4\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport eventSearch from 'indico-url:categories.event_search';\nimport eventSeriesURL from 'indico-url:event_series.event_series';\nimport singleEventAPI from 'indico-url:events.single_event_api';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Button, Dimmer, Divider, Dropdown, Icon, List, Loader, Popup} from 'semantic-ui-react';\n\nimport {TooltipIfTruncated, IButton, RequestConfirmDelete} from 'indico/react/components';\nimport {FinalCheckbox, FinalField, FinalInput, handleSubmitError} from 'indico/react/forms';\nimport {FinalModalForm, getChangedValues, getValuesForFields} from 'indico/react/forms/final-form';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\nimport {makeAsyncDebounce} from 'indico/utils/debounce';\n\nimport styles from './SeriesManagement.module.scss';\n\nconst debounce = makeAsyncDebounce(250);\nconst debounceSingle = makeAsyncDebounce(250);\n\nexport function SeriesManagement({eventId, categoryId, seriesId, timezone}) {\n  const hasSeries = seriesId !== null;\n  const [open, setOpen] = useState(false);\n  const {loading, reFetch, data} = useIndicoAxios(\n    hasSeries ? eventSeriesURL({series_id: seriesId}) : singleEventAPI({event_id: eventId}),\n    {manual: true}\n  );\n\n  const handleOpenClick = async () => {\n    await reFetch();\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // either an actual series or a new series-like object containing the initial event\n  const series = data\n    ? hasSeries\n      ? data\n      : {\n          id: null,\n          events: [data],\n          show_sequence_in_title: false,\n          show_links: false,\n          event_title_pattern: '',\n        }\n    : null;\n\n  return (\n    <>\n      {hasSeries ? (\n        <IButton\n          borderless\n          icon=\"stack\"\n          title={Translate.string('Manage event series')}\n          onClick={handleOpenClick}\n        >\n          <Translate>Manage series</Translate>\n        </IButton>\n      ) : (\n        <IButton\n          borderless\n          icon=\"stack\"\n          title={Translate.string('Create event series')}\n          onClick={handleOpenClick}\n        >\n          <Translate>Create series</Translate>\n        </IButton>\n      )}\n      <Dimmer active={loading} page inverted>\n        <Loader />\n      </Dimmer>\n      {open && (\n        <SeriesManagementModal\n          currentEventId={eventId}\n          categoryId={categoryId}\n          timezone={timezone}\n          series={series}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n\nSeriesManagement.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  categoryId: PropTypes.number.isRequired,\n  timezone: PropTypes.string.isRequired,\n  seriesId: PropTypes.number,\n};\n\nSeriesManagement.defaultProps = {\n  seriesId: null,\n};\n\nfunction SeriesManagementModal({currentEventId, categoryId, series, timezone, onClose}) {\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n\n  const existingSeries = series.id !== null;\n  const localMoment = dt => moment(dt).tz(timezone);\n\n  const handleSubmit = async (data, form) => {\n    const payload = existingSeries ? getChangedValues(data, form) : getValuesForFields(data, form);\n    if (payload.events) {\n      payload.event_ids = payload.events.map(e => e.id);\n      delete payload.events;\n    }\n\n    try {\n      if (existingSeries) {\n        await indicoAxios.patch(eventSeriesURL({series_id: series.id}), payload);\n      } else {\n        await indicoAxios.post(eventSeriesURL(), payload);\n      }\n    } catch (e) {\n      return handleSubmitError(e, {event_ids: 'events'});\n    }\n\n    location.reload();\n    // never finish submitting to avoid fields being re-enabled\n    await new Promise(() => {});\n  };\n\n  const deleteSeries = async () => {\n    try {\n      await indicoAxios.delete(eventSeriesURL({series_id: series.id}));\n    } catch (e) {\n      handleAxiosError(e);\n      return true;\n    }\n    location.reload();\n  };\n\n  return (\n    <>\n      <FinalModalForm\n        id=\"event-series\"\n        header={\n          existingSeries ? Translate.string('Manage series') : Translate.string('Create series')\n        }\n        size=\"standard\"\n        alignTop\n        onSubmit={handleSubmit}\n        onClose={onClose}\n        initialValues={series}\n        disabledUntilChange={existingSeries}\n        extraActions={fprops =>\n          existingSeries && (\n            <Button\n              style={{marginRight: 'auto'}}\n              onClick={() => setDeleteConfirmOpen(true)}\n              disabled={fprops.submitting}\n              negative\n            >\n              <Translate>Delete series</Translate>\n            </Button>\n          )\n        }\n        submitLabel={\n          existingSeries ? Translate.string('Update series') : Translate.string('Create series')\n        }\n      >\n        {() => (\n          <>\n            <FinalField\n              name=\"events\"\n              isEqual={(a, b) => _.isEqual((a || []).map(e => e.id), (b || []).map(e => e.id))}\n              validate={val => {\n                if (!val.length) {\n                  return Translate.string('A series needs to contain at least one event.');\n                }\n              }}\n              component={SeriesEvents}\n              localMoment={localMoment}\n              categoryId={categoryId}\n              currentEventId={currentEventId}\n              existingSeriesId={series.id}\n              divider={\n                <Divider horizontal>\n                  {existingSeries ? (\n                    <Translate>Events in series</Translate>\n                  ) : (\n                    <Translate>Events to add</Translate>\n                  )}\n                </Divider>\n              }\n            />\n            <Divider horizontal>\n              <Translate>Series options</Translate>\n            </Divider>\n            <FinalCheckbox\n              name=\"show_sequence_in_title\"\n              label={Translate.string(\n                'Show the sequence number in the event titles (lectures only)'\n              )}\n            />\n            <FinalCheckbox\n              name=\"show_links\"\n              label={Translate.string(\n                'Show links to the other events of the series on the main event page'\n              )}\n            />\n            <FinalInput\n              name=\"event_title_pattern\"\n              label={Translate.string('Event title pattern')}\n              description={\n                <Translate>\n                  Title pattern for cloned events. Must contain the{' '}\n                  <Param name=\"placeholder\" wrapper={<code />} value=\"{n}\" /> placeholder which will\n                  indicate the new event's position in the series.\n                </Translate>\n              }\n              validate={val => {\n                if (val && !val.includes('{n}')) {\n                  return Translate.string(\n                    'Title pattern must contain the {placeholder} placeholder',\n                    {placeholder: '{n}'}\n                  );\n                }\n              }}\n            />\n          </>\n        )}\n      </FinalModalForm>\n      <RequestConfirmDelete\n        open={deleteConfirmOpen}\n        onClose={() => setDeleteConfirmOpen(false)}\n        requestFunc={deleteSeries}\n        persistent\n      >\n        <Translate>\n          Do you really want to delete this series? The associated events will not be deleted.\n        </Translate>\n      </RequestConfirmDelete>\n    </>\n  );\n}\n\nSeriesManagementModal.propTypes = {\n  currentEventId: PropTypes.number.isRequired,\n  categoryId: PropTypes.number.isRequired,\n  series: PropTypes.shape({\n    id: PropTypes.number,\n    events: PropTypes.arrayOf(PropTypes.object).isRequired,\n    show_sequence_in_title: PropTypes.bool.isRequired,\n    show_links: PropTypes.bool.isRequired,\n    event_title_pattern: PropTypes.string.isRequired,\n  }).isRequired,\n  timezone: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nfunction SeriesEvents({\n  value: currentEvents,\n  onChange,\n  onFocus,\n  onBlur,\n  divider,\n  localMoment,\n  categoryId,\n  currentEventId,\n  existingSeriesId,\n}) {\n  const [searchQuery, setSearchQuery] = useState(undefined);\n  const [results, setResults] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [isSearching, setSearching] = useState(false);\n  const [denialReason, setDenialReason] = useState(null);\n\n  const existingSeries = existingSeriesId !== null;\n\n  const setTouched = () => {\n    // pretend focus+blur to mark the field as touched even if the dropdown was never focused\n    onFocus();\n    onBlur();\n  };\n\n  const getSingleEventInfo = async eventId => {\n    let resp;\n    try {\n      resp = await debounceSingle(() => indicoAxios.get(singleEventAPI({event_id: +eventId})));\n    } catch (error) {\n      handleAxiosError(error);\n      return;\n    }\n    if (resp.data === null) {\n      setDenialReason(Translate.string('No event found with this ID.'));\n    } else if (!resp.data.can_access) {\n      setDenialReason(Translate.string(\"You don't have rights to access this event.\"));\n    } else if (!resp.data.category_chain) {\n      setDenialReason(Translate.string('This event is unlisted.'));\n    } else {\n      setResults([resp.data]);\n      setDenialReason(null);\n      setSearching(false);\n      return;\n    }\n    setSearching(false);\n    setResults([]);\n  };\n\n  const searchEvents = async (q, searchOffset = 0, addToResults = false) => {\n    let resp;\n    try {\n      resp = await debounce(() =>\n        indicoAxios.get(eventSearch({category_id: categoryId, q, offset: searchOffset}))\n      );\n    } catch (error) {\n      handleAxiosError(error);\n      return;\n    }\n    if (addToResults) {\n      setResults([...results, ...resp.data.events]);\n    } else {\n      setResults(resp.data.events);\n    }\n    setHasMore(resp.data.has_more);\n    setDenialReason(null);\n    setSearching(false);\n  };\n\n  const handleSearch = async (__, {searchQuery: query}) => {\n    setHasMore(false);\n    setSearchQuery(query);\n    query = query.trim();\n    setDenialReason(null);\n    if (!query) {\n      setSearching(false);\n      setResults([]);\n      return;\n    }\n    const regexUrl = new RegExp(`^${location.origin.replace('/', '\\\\/')}\\\\/event\\\\/([0-9]+)`);\n    const match = query.match(regexUrl);\n    if (match) {\n      setSearching(true);\n      getSingleEventInfo(match[1], setResults);\n    } else if (/^#([0-9])+$/.test(query)) {\n      setSearching(true);\n      getSingleEventInfo(query.substr(1), setResults);\n    } else if (query !== '#') {\n      setSearching(true);\n      searchEvents(query);\n    }\n  };\n\n  const currentEventIdsSet = new Set(currentEvents.map(e => e.id));\n\n  let eventOptions = results.map(evt => ({\n    key: evt.id,\n    value: evt.id,\n    text: evt.title,\n    disabled:\n      !evt.can_manage ||\n      !evt.category_chain ||\n      (evt.series_id !== existingSeriesId && evt.series_id !== null) ||\n      currentEventIdsSet.has(evt.id),\n    content: (\n      <div styleName=\"list-flex\">\n        <span styleName=\"date-span\">{localMoment(evt.start_dt).format('ll')}</span>\n        <span styleName=\"event-title\">\n          {evt.title}\n          <br />\n          <TooltipIfTruncated>\n            <span styleName=\"category-chain\">\n              {evt.category_chain ? (\n                evt.category_chain.join(' » ')\n              ) : (\n                <Translate>Unlisted</Translate>\n              )}\n            </span>\n          </TooltipIfTruncated>\n          {!evt.can_manage && (\n            <span styleName=\"warning-reason\">\n              <br />\n              <Translate>You do not have editing rights for this event.</Translate>\n            </span>\n          )}\n          {!evt.category_chain && (\n            <span styleName=\"warning-reason\">\n              <br />\n              <Translate>This event is unlisted.</Translate>\n            </span>\n          )}\n          {evt.series_id !== existingSeriesId && evt.series_id !== null && (\n            <span styleName=\"warning-reason\">\n              <br />\n              <Translate>This event is already part of a different series.</Translate>\n            </span>\n          )}\n          {currentEventIdsSet.has(evt.id) && (\n            <span styleName=\"positive-note\">\n              <br />\n              <Translate>This event is already part of this series.</Translate>\n            </span>\n          )}\n        </span>\n      </div>\n    ),\n  }));\n\n  const loadMore = () => {\n    setSearching(true);\n    searchEvents(searchQuery.trim(), results.length, true);\n  };\n\n  if (eventOptions.length > 0 && hasMore) {\n    eventOptions = [\n      ...eventOptions,\n      {\n        key: '_',\n        value: '_',\n        className: styles['load-more'],\n        content: (\n          <div\n            onClick={e => {\n              // The dropdown item with the 'Load more' button should not be selectable.\n              // This prevents triggering onChange on the dropdown when the item is clicked.\n              e.stopPropagation();\n            }}\n          >\n            <Button\n              primary\n              compact\n              size=\"small\"\n              type=\"button\"\n              loading={isSearching}\n              onClick={loadMore}\n            >\n              <Translate>Load more</Translate>\n            </Button>\n          </div>\n        ),\n      },\n    ];\n  }\n\n  return (\n    <>\n      <Dropdown\n        fluid\n        selection\n        search={x => x}\n        icon=\"search\"\n        closeOnChange={false}\n        selectOnBlur={false}\n        selectOnNavigation={false}\n        placeholder={Translate.string(\n          'Search for an event title or paste an event URL or event ID (#123)'\n        )}\n        options={eventOptions}\n        value={null}\n        loading={isSearching}\n        onSearchChange={handleSearch}\n        searchQuery={searchQuery}\n        onChange={(__, {value}) => {\n          if (value === '_') {\n            return;\n          }\n          const event = results.find(e => e.id === value);\n          const newEvents = [...currentEvents, event].sort(\n            (a, b) => moment(a.start_dt) - moment(b.start_dt)\n          );\n          onChange(newEvents);\n        }}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        noResultsMessage={\n          isSearching\n            ? Translate.string('Searching...')\n            : denialReason !== null\n            ? denialReason\n            : searchQuery\n            ? Translate.string('No results found.')\n            : Translate.string('Enter search term')\n        }\n      />\n      {divider}\n      <List divided relaxed styleName=\"evt-list\">\n        {currentEvents.map(event => (\n          <List.Item key={event.id} styleName=\"evt-item\">\n            <List.Content>\n              <div styleName=\"list-flex\">\n                <span styleName=\"date-span\">\n                  {localMoment(event.start_dt).format('ll')}\n                  <br />\n                  {currentEventId === event.id && (\n                    <span styleName=\"positive-note\">\n                      (<Translate>this event</Translate>)\n                    </span>\n                  )}\n                </span>\n                <span styleName=\"event-title\">\n                  {event.title}\n                  <br />\n                  <TooltipIfTruncated>\n                    <span styleName=\"detail\">\n                      {event.category_chain ? (\n                        event.category_chain.join(' » ')\n                      ) : (\n                        <span styleName=\"warning-reason\">\n                          <Translate>Unlisted</Translate>\n                        </span>\n                      )}\n                    </span>\n                  </TooltipIfTruncated>\n                </span>\n                {(currentEventId !== event.id || existingSeries) && (\n                  <Popup\n                    trigger={\n                      <Icon\n                        styleName=\"delete-button\"\n                        name=\"close\"\n                        onClick={() => {\n                          setTouched();\n                          onChange(currentEvents.filter(e => e.id !== event.id));\n                        }}\n                        link\n                      />\n                    }\n                    content={Translate.string('Remove from event series')}\n                    position=\"bottom center\"\n                  />\n                )}\n              </div>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nSeriesEvents.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired,\n  divider: PropTypes.node.isRequired,\n  localMoment: PropTypes.func.isRequired,\n  categoryId: PropTypes.number.isRequired,\n  currentEventId: PropTypes.number.isRequired,\n  existingSeriesId: PropTypes.number,\n  onFocus: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n\nSeriesEvents.defaultProps = {\n  existingSeriesId: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global setupSearchBox:false, cornerMessage:false, handleAjaxError:false,\n          enableIfChecked:false */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'indico/modules/events/util/list_generator';\nimport 'indico/modules/events/util/static_filters';\n\nimport './badges';\n\nimport {AuthorsListButton} from 'indico/modules/events/persons/AuthorsListButton';\nimport {EmailContribAbstractRolesButton} from 'indico/modules/events/persons/EmailContribAbstractRolesButton';\nimport {EmailParticipantRolesButton} from 'indico/modules/events/persons/EmailParticipantRolesButton';\nimport {$T} from 'indico/utils/i18n';\nimport {natSortCompare} from 'indico/utils/sort';\n\nimport {SingleEventMove, EventPublish} from './EventMove';\nimport {SeriesManagement} from './SeriesManagement';\n\n(function(global) {\n  global.setupEmailButton = function setupEmailButton(field, trigger) {\n    const element = document.querySelector(field);\n    const {eventId, roleId, personSelector} = element.dataset;\n    const extraParams = {};\n    if (element.dataset.noAccount !== undefined) {\n      extraParams.noAccount = true;\n    }\n    if (element.dataset.notInvitedOnly !== undefined) {\n      extraParams.notInvitedOnly = true;\n    }\n    ReactDOM.render(\n      <EmailParticipantRolesButton\n        eventId={+eventId}\n        roleId={roleId && +roleId}\n        personSelector={personSelector}\n        triggerSelector={trigger}\n        {...extraParams}\n      />,\n      element\n    );\n  };\n\n  global.setupEmailContribAbstractRoles = function setupEmailContribAbstractRoles(\n    containerSelector\n  ) {\n    const element = document.querySelector(containerSelector);\n    const {objectContext, idSelector, metadataUrl, previewUrl, sendUrl} = element.dataset;\n    ReactDOM.render(\n      <EmailContribAbstractRolesButton\n        objectContext={objectContext}\n        idSelector={idSelector}\n        metadataURL={metadataUrl}\n        previewURL={previewUrl}\n        sendURL={sendUrl}\n        className=\"js-requires-selected-row disabled\"\n      />,\n      element\n    );\n  };\n\n  global.setupAuthorsListButton = function setupAuthorsListButton(containerSelector) {\n    const element = document.querySelector(containerSelector);\n    const {eventId, objectContext, paramsSelector} = element.dataset;\n    ReactDOM.render(\n      <AuthorsListButton\n        eventId={+eventId}\n        objectContext={objectContext}\n        paramsSelector={paramsSelector}\n      />,\n      element\n    );\n  };\n\n  global.setupEventManagementActionMenu = function setupEventManagementActionMenu() {\n    const moveContainer = document.querySelector('#event-action-move-container');\n    if (moveContainer) {\n      ReactDOM.render(\n        React.createElement(SingleEventMove, {\n          eventId: +moveContainer.dataset.eventId,\n          currentCategoryId: +moveContainer.dataset.categoryId,\n          hasPendingMoveRequest: moveContainer.dataset.pendingRequest !== undefined,\n        }),\n        moveContainer\n      );\n    }\n\n    const manageSeriesContainer = document.querySelector('#event-action-manage-series-container');\n    if (manageSeriesContainer) {\n      const seriesId =\n        manageSeriesContainer.dataset.seriesId !== undefined\n          ? +manageSeriesContainer.dataset.seriesId\n          : null;\n      ReactDOM.render(\n        React.createElement(SeriesManagement, {\n          eventId: +manageSeriesContainer.dataset.eventId,\n          categoryId: +manageSeriesContainer.dataset.categoryId,\n          timezone: manageSeriesContainer.dataset.timezone,\n          seriesId,\n        }),\n        manageSeriesContainer\n      );\n    }\n\n    const publishContainer = document.querySelector('#event-action-publish-container');\n    if (publishContainer) {\n      ReactDOM.render(\n        React.createElement(EventPublish, {\n          eventId: +publishContainer.dataset.eventId,\n          hasPendingPublishRequest: publishContainer.dataset.pendingRequest !== undefined,\n        }),\n        publishContainer\n      );\n    }\n\n    $('#event-action-menu-clones-target').qbubble({\n      content: {\n        text: $('#event-action-menu-clones'),\n      },\n    });\n\n    $('#event-action-menu-actions-target').qbubble({\n      content: {\n        text: $('#event-action-menu-actions'),\n      },\n      style: {\n        classes: 'qtip-allow-overflow',\n      },\n    });\n\n    const selectors = [\n      '#event-action-menu-actions button:not(.js-dropdown)',\n      '#event-action-menu-actions a:not(.disabled)',\n    ];\n    $(selectors.join(', ')).on('click', function() {\n      $('#event-action-menu-actions-target').qbubble('hide');\n    });\n  };\n\n  function refreshPersonFilters() {\n    $('#person-filters ul > li').removeClass('enabled');\n    const personRows = $('.js-event-person-list tr[data-person-roles]');\n    const filters = $('.js-event-person-list [data-filter]:checked')\n      .map(function() {\n        const $this = $(this);\n        $this.closest('li').addClass('enabled');\n        return $this.data('filter');\n      })\n      .get();\n\n    const visibleEntries = personRows.filter(\n      (idx, entry) =>\n        !filters.length || filters.find(filterName => $(entry).data('person-roles')[filterName])\n    );\n\n    personRows.addClass('hidden');\n    visibleEntries.removeClass('hidden');\n    $('.js-event-person-list').trigger('indico:syncEnableIfChecked');\n  }\n\n  function toggleResetBtn() {\n    $('.js-reset-role-filter').toggleClass(\n      'disabled',\n      $('#person-filters [data-filter]:checked').length === 0\n    );\n  }\n\n  function initTooltip() {\n    $('.js-show-regforms').qtip({\n      content: {\n        text() {\n          return $(this).data('title');\n        },\n      },\n      hide: {\n        delay: 100,\n        fixed: true,\n      },\n    });\n  }\n\n  global.setupEventPersonsList = function setupEventPersonsList(options) {\n    options = $.extend(\n      {\n        hasNoAccountFilter: false,\n        hasNoRegistrationFilter: false,\n        hasNoBuiltinRolesFilter: false,\n      },\n      options\n    );\n\n    const filterConfig = {\n      itemHandle: 'tr',\n      listItems: '#event-participants-list tbody tr:not(.hidden)',\n      term: '#search-input',\n      state: '#filtering-state',\n      placeholder: '#filter-placeholder',\n    };\n    const applySearchFilters = setupSearchBox(filterConfig);\n\n    enableIfChecked(\n      '.js-event-person-list',\n      '.select-row:visible',\n      '.js-event-person-list .js-requires-selected-row'\n    );\n    if ($('.js-event-person-list').closest('.ui-dialog').length) {\n      $('.js-event-person-list [data-toggle=dropdown]')\n        .closest('.toolbar')\n        .dropdown();\n    }\n    $('.js-event-person-list [data-filter]').on('click', refreshPersonFilters);\n\n    $('.js-event-person-list td').on('mouseenter', function() {\n      const $this = $(this);\n      if (\n        this.offsetWidth < this.scrollWidth &&\n        !$this.attr('title') &&\n        !$this.find('.js-popup-container').length\n      ) {\n        $this.attr('title', $this.text());\n      }\n    });\n\n    $('.js-event-person-list .tablesorter').tablesorter({\n      cssAsc: 'header-sort-asc',\n      cssDesc: 'header-sort-desc',\n      headerTemplate: '',\n      sortList: [[1, 0]],\n    });\n\n    const $roleLabels = $('.js-event-person-list .roles-column > span');\n    $roleLabels.qbubble({\n      show: {\n        event: 'mouseover',\n      },\n      hide: {\n        fixed: true,\n        delay: 100,\n        event: 'mouseleave',\n      },\n      position: {\n        my: 'left center',\n        at: 'right center',\n      },\n      content: {\n        text() {\n          const $this = $(this);\n          const html = $('<div>');\n          const role = $('<strong>', {text: $(this).data('role-name')});\n          html.append(role);\n          if ($this.is('.js-count-label')) {\n            const list = $('<ul>', {class: 'qbubble-item-list'});\n            const items = _.values($this.data('items')).sort(function(a, b) {\n              return natSortCompare(a.title.toLowerCase(), b.title.toLowerCase());\n            });\n\n            $.each(items, function() {\n              const item = $('<li>');\n              if (this.url) {\n                item.append($('<a>', {text: this.title, href: this.url}));\n              } else {\n                item.text(this.title);\n              }\n              list.append(item);\n            });\n            html.append(list);\n          }\n\n          return html;\n        },\n      },\n    });\n\n    // Sets background color of custom role labels based on their font color\n    $roleLabels.filter('.custom').each(function() {\n      const $this = $(this);\n      $this.css('background-color', $.Color($this.css('color')).alpha(0.1));\n    });\n\n    if (options.hasNoAccountFilter) {\n      $('.js-event-person-list [data-filter]:not(#filter-no-account)').on('change', function() {\n        $('#filter-no-account').prop('checked', false);\n        refreshPersonFilters();\n        applySearchFilters();\n      });\n      $('#filter-no-account').on('change', function() {\n        if (this.checked) {\n          $('.js-event-person-list [data-filter]:checked:not(#filter-no-account)').prop(\n            'checked',\n            false\n          );\n        }\n        refreshPersonFilters();\n        applySearchFilters();\n      });\n    }\n\n    if (options.hasNoRegistrationFilter) {\n      $('.js-event-person-list [data-filter]:not(#filter-no-registration)').on(\n        'change',\n        function() {\n          $('#filter-no-registration').prop('checked', false);\n          refreshPersonFilters();\n          applySearchFilters();\n        }\n      );\n      $('#filter-no-registration').on('change', function() {\n        if (this.checked) {\n          $('.js-event-person-list [data-filter]:checked:not(#filter-no-registration)').prop(\n            'checked',\n            false\n          );\n        }\n        refreshPersonFilters();\n        applySearchFilters();\n      });\n    }\n\n    if (options.hasNoBuiltinRolesFilter) {\n      $('.js-event-person-list [data-filter]:not(#filter-no-builtin-roles)').on(\n        'change',\n        function() {\n          $('#filter-no-builtin-roles').prop('checked', false);\n          refreshPersonFilters();\n          applySearchFilters();\n        }\n      );\n      $('#filter-no-builtin-roles').on('change', function() {\n        if (this.checked) {\n          $('.js-event-person-list [data-filter]:checked:not(#filter-no-builtin-roles)').prop(\n            'checked',\n            false\n          );\n        }\n        refreshPersonFilters();\n        applySearchFilters();\n      });\n    }\n\n    initTooltip();\n\n    const $personFilters = $('#person-filters');\n    // Sets background color of role filter items based on their colored squared color\n    $personFilters.find('li .colored-square').each(function() {\n      const $this = $(this);\n      $this.closest('li').css('background-color', $.Color($this.css('color')).alpha(0.1));\n    });\n\n    // Reset role filters\n    $personFilters.find('.js-reset-role-filter').on('click', function() {\n      $('.js-event-person-list [data-filter]').each(function() {\n        const $this = $(this);\n        $this.prop('checked', false);\n        $this.parent().toggleClass('enabled', false);\n      });\n      refreshPersonFilters();\n      applySearchFilters();\n      toggleResetBtn();\n    });\n\n    // Allows to click in the whole list item area to enable/disable role filters\n    $personFilters.find('li label').on('click', function(evt) {\n      evt.preventDefault();\n    });\n    $personFilters.find('li').on('click', function() {\n      const $checkbox = $(this).find('[data-filter]');\n      $checkbox.prop('checked', !$checkbox.prop('checked')).trigger('change');\n      toggleResetBtn();\n    });\n\n    $('#event-participants-list').on('indico:htmlUpdated', initTooltip);\n  };\n\n  global.showUndoWarning = function showUndoWarning(message, feedbackMessage, actionCallback) {\n    cornerMessage({\n      message,\n      progressMessage: $T.gettext('Undoing previous operation...'),\n      feedbackMessage,\n      actionLabel: $T.gettext('Undo'),\n      actionCallback,\n      duration: 10000,\n      feedbackDuration: 4000,\n      class: 'warning',\n    });\n  };\n\n  global.handleSelectedRowHighlight = function handleSelectedRowHighlight(trigger) {\n    const $obj = $('table.i-table input.select-row').on('change', function() {\n      $(this)\n        .closest('tr')\n        .toggleClass('selected', this.checked);\n    });\n\n    if (trigger) {\n      $obj.trigger('change');\n    }\n  };\n\n  global.showThemeSettingsForm = function showThemeSettingsForm(options) {\n    options = $.extend(\n      true,\n      {\n        formUrl: null,\n        themeFieldId: null,\n        lastFieldId: null,\n      },\n      options\n    );\n    $(`#${options.themeFieldId}`).on('change', function() {\n      $.ajax({\n        url: options.formUrl,\n        data: {\n          theme: $(this).val(),\n        },\n        complete: IndicoUI.Dialogs.Util.progress(),\n        error: handleAjaxError,\n        success(data) {\n          const lastField = $(`#${options.lastFieldId}`);\n          lastField.nextAll(':not(.form-group-footer)').remove();\n          if (data.html) {\n            lastField.after(data.html);\n          }\n          if (data.js) {\n            $('body').append(data.js);\n          }\n        },\n      });\n    });\n  };\n})(window);\n"],"names":["window","setupBadgePrinting","templates","$template","$","$pageLayout","$dashedBorder","$pageSize","$pageOrientation","$marginEditor","$infoMessage","toggleFoldableOption","template","pageSize","pageOrientation","A0","A1","A2","A3","A4","A5","A6","format","orientation","prop","val","next","on","$this","this","parseInt","closest","toggle","backside_tpl_id","change","add","emailMetadataURL","_buildFlaskURL","bind","endpoint","rules","args","converters","event_id","defaults","trace","data","isDynamic","emailSendURL","emailPreviewURL","EmailParticipantRoles","_ref","eventId","roleIds","persons","onClose","onSubmitSucceeded","noAccount","notInvitedOnly","successTimeout","sentCount","setSentCount","useState","recipientData","role_id","no_account","not_invited_only","loading","useIndicoAxios","url","method","senders","recipients","subject","defaultSubject","body","defaultBody","placeholders","React","Dimmer","active","page","inverted","Loader","EmailDialog","onSubmit","async","requestData","_objectSpread","resp","indicoAxios","post","err","handleSubmitError","count","setTimeout","previewURL","previewContext","initialFormValues","sentEmailsCount","propTypes","PropTypes","isRequired","defaultProps","undefined","EmailParticipantRolesButton","roleId","personSelector","triggerSelector","rest","_objectWithoutProperties","_excluded","open","setOpen","getIds","useEffect","handler","element","document","querySelector","addEventListener","removeEventListener","Button","_extends","onClick","disabled","length","Translate","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","getDefaultSort","_sortBy","personListReducer","state","action","type","column","sortedPersons","sort","a","b","localeCompare","direction","slice","reverse","makeAuthorType","primaryAuthor","secondaryAuthor","string","join","PersonList","_ref2","selectedPersons","onChangeSelection","isSelectable","isVisible","extraRoles","dispatch","useReducer","map","person","authorType","selectable","visibleSortedPersons","selectablePersons","visibleSelectedPersons","id","find","identifier","roles","icon","isActive","p","speaker","titleActive","titleInactive","Table","sortable","singleLine","Header","Row","HeaderCell","colSpan","Checkbox","indeterminate","checked","onChange","toggleSelectAll","dataChecked","as","sorted","Body","key","style","opacity","_ref3","includes","sId","toggleSelectRow","Cell","collapsing","Popup","content","registered","position","trigger","className","fullName","email","affiliation","_ref4","warning","Icon","name","abstractsPersonListURL","contribsPersonListURL","sessionsPersonListURL","CONTEXTS","abstracts","idType","personListURL","contributions","emptyListMessage","sessions","FILTER_OPTIONS","submitter","text","isMatch","contexts","notRegistered","AuthorsList","sourceIds","objectContext","setSelectedPersons","sentEmailCount","setSentEmailCount","activeFilters","setActiveFilters","formData","FormData","v","append","headers","camelize","some","filterButtons","entries","f","toggleFilter","primary","Modal","size","Content","EmailSentMessage","display","fontWeight","padding","Group","buttons","compact","eventPersons","values","Message","error","Actions","AuthorsListButton","paramsSelector","evt","target","classList","contains","eventSearch","category_id","eventSeriesURL","series_id","singleEventAPI","debounce","makeAsyncDebounce","debounceSingle","SeriesManagement","categoryId","seriesId","timezone","hasSeries","reFetch","manual","handleOpenClick","series","events","show_sequence_in_title","show_links","event_title_pattern","IButton","borderless","title","SeriesManagementModal","currentEventId","handleClose","deleteConfirmOpen","setDeleteConfirmOpen","existingSeries","localMoment","dt","moment","tz","FinalModalForm","header","alignTop","form","payload","getChangedValues","getValuesForFields","event_ids","patch","location","reload","Promise","initialValues","disabledUntilChange","extraActions","fprops","marginRight","submitting","negative","submitLabel","FinalField","isEqual","_isEqual","validate","component","SeriesEvents","existingSeriesId","divider","Divider","horizontal","FinalCheckbox","label","FinalInput","description","Param","wrapper","value","placeholder","RequestConfirmDelete","requestFunc","delete","handleAxiosError","persistent","currentEvents","onFocus","onBlur","searchQuery","setSearchQuery","results","setResults","hasMore","setHasMore","isSearching","setSearching","denialReason","setDenialReason","getSingleEventInfo","get","can_access","category_chain","searchEvents","q","searchOffset","addToResults","offset","has_more","currentEventIdsSet","Set","eventOptions","can_manage","has","start_dt","TooltipIfTruncated","loadMore","trim","styles","stopPropagation","Dropdown","fluid","selection","search","x","closeOnChange","selectOnBlur","selectOnNavigation","options","onSearchChange","__","query","regexUrl","RegExp","origin","replace","match","test","substr","_ref5","event","newEvents","noResultsMessage","List","divided","relaxed","Item","link","global","refreshPersonFilters","removeClass","personRows","filters","addClass","visibleEntries","idx","entry","filterName","toggleResetBtn","toggleClass","initTooltip","qtip","hide","delay","fixed","setupEmailButton","field","dataset","extraParams","ReactDOM","setupEmailContribAbstractRoles","containerSelector","idSelector","metadataUrl","previewUrl","sendUrl","EmailContribAbstractRolesButton","metadataURL","sendURL","setupAuthorsListButton","setupEventManagementActionMenu","moveContainer","SingleEventMove","currentCategoryId","hasPendingMoveRequest","pendingRequest","manageSeriesContainer","publishContainer","EventPublish","hasPendingPublishRequest","qbubble","classes","setupEventPersonsList","extend","hasNoAccountFilter","hasNoRegistrationFilter","hasNoBuiltinRolesFilter","applySearchFilters","setupSearchBox","itemHandle","listItems","term","enableIfChecked","dropdown","offsetWidth","scrollWidth","attr","tablesorter","cssAsc","cssDesc","headerTemplate","sortList","$roleLabels","show","my","at","html","role","is","list","class","items","_values","natSortCompare","toLowerCase","each","item","href","css","Color","alpha","$personFilters","parent","preventDefault","$checkbox","showUndoWarning","message","feedbackMessage","actionCallback","cornerMessage","progressMessage","$T","gettext","actionLabel","duration","feedbackDuration","handleSelectedRowHighlight","$obj","showThemeSettingsForm","formUrl","themeFieldId","lastFieldId","ajax","theme","complete","IndicoUI","Dialogs","Util","progress","handleAjaxError","success","lastField","nextAll","remove","after","js"],"sourceRoot":""}