{"version":3,"file":"js/module_events.editing.35a09a95.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/editing/client/js/management/Section.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/NextEditable.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/TeamManager.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/EditableTypeDashboard.module.scss?172b","webpack:///indico/modules/events/editing/client/js/management/editable_type/EditableTypeDashboard.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/EditableTypeSubPageNav.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/file_types/ExtensionList.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/file_types/FileTypeModal.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/file_types/FileTypeManager.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/file_types/index.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/context.js","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/ReviewConditionForm.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/ConditionInfo.module.scss?0e36","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/ConditionInfo.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/ReviewConditionsManager.module.scss?3d62","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/ReviewConditionsManager.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/review_conditions/index.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/StateIndicator.module.scss?f7d2","webpack:///indico/modules/events/editing/client/js/editing/timeline/StateIndicator.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/util.js","webpack:///indico/modules/events/editing/client/js/management/editable_type/CommentButton.jsx","webpack:///indico/modules/events/editing/client/js/management/editable_type/EditableList.jsx","webpack:///indico/modules/events/editing/client/js/management/EditableTypeList.module.scss?3829","webpack:///indico/modules/events/editing/client/js/management/EditableTypeList.jsx","webpack:///indico/modules/events/editing/client/js/management/ManageService.jsx","webpack:///indico/modules/events/editing/client/js/management/EditingManagementDashboard.jsx","webpack:///indico/modules/events/editing/client/js/management/tags/TagModal.jsx","webpack:///indico/modules/events/editing/client/js/management/tags/TagManager.jsx","webpack:///indico/modules/events/editing/client/js/management/tags/index.js","webpack:///indico/modules/events/editing/client/js/management/EditingManagement.jsx","webpack:///indico/modules/events/editing/client/js/management/index.jsx","webpack:///indico/modules/events/editing/client/js/editing/page_layout/MenuBar.module.scss?7850","webpack:///indico/modules/events/editing/client/js/editing/page_layout/MenuBar.jsx","webpack:///indico/modules/events/editing/client/js/editing/page_layout/EditingView.module.scss?f422","webpack:///indico/modules/events/editing/client/js/editing/page_layout/EditingView.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/actions.js","webpack:///indico/modules/events/editing/client/js/editing/timeline/DeleteEditable.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/TimelineHeader.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/FileDisplay/FileDisplay.module.scss?3fac","webpack:///indico/modules/events/editing/client/js/editing/timeline/FileDisplay/index.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/SubmitRevision.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/ChangesConfirmation.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/CustomActions.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/ResetReview.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/ReviewComment.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/CommentForm.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/JudgmentDropdownItems.module.scss?a937","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/JudgmentDropdownItems.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/JudgmentBoxHeader.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/TagInput.module.scss?ef15","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/TagInput.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/judgment/UpdateFilesBox.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/ReviewForm.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/CommentItem.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/RevisionLog.jsx","webpack:///indico/modules/events/editing/client/styles/timeline.module.scss?d8f2","webpack:///indico/modules/events/editing/client/js/editing/timeline/TimelineItem.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/index.jsx","webpack:///indico/modules/events/editing/client/js/editing/timeline/reducer.js","webpack:///indico/modules/events/editing/client/js/editing/ReduxTimeline.jsx","webpack:///indico/modules/events/editing/client/js/editing/index.jsx","webpack:///node_modules/lodash/uniqBy.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Section({icon, label, description, children}) {\n  return (\n    <div className=\"section\">\n      <span className={`icon icon-${icon}`} />\n      <div className=\"text\">\n        <div className=\"label\">{label}</div>\n        {description}\n      </div>\n      <div className=\"toolbar\">{children}</div>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  icon: PropTypes.string.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport assignMyselfURL from 'indico-url:event_editing.api_assign_editable_self';\nimport fileTypesURL from 'indico-url:event_editing.api_file_types';\nimport editableListURL from 'indico-url:event_editing.api_filter_editables_by_filetypes';\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {useState, useMemo, useRef} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Button, Loader, Modal, Table, Checkbox, Dimmer} from 'semantic-ui-react';\n\nimport {ListFilter} from 'indico/react/components';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\nimport {camelizeKeys} from 'indico/utils/case';\n\nimport {fileTypePropTypes} from '../../editing/timeline/FileManager/util';\nimport {EditableType, GetNextEditableTitles} from '../../models';\n\nimport './NextEditable.module.scss';\n\nexport default function NextEditable({eventId, editableType, onClose, management}) {\n  const {data: fileTypes, loading: isLoadingFileTypes} = useIndicoAxios(\n    fileTypesURL({event_id: eventId, type: editableType}),\n    {camelize: true}\n  );\n\n  if (isLoadingFileTypes) {\n    return <Loader active />;\n  } else if (!fileTypes) {\n    return null;\n  }\n\n  return (\n    <NextEditableDisplay\n      eventId={eventId}\n      editableType={editableType}\n      onClose={onClose}\n      fileTypes={fileTypes}\n      management={management}\n    />\n  );\n}\n\nNextEditable.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n  onClose: PropTypes.func.isRequired,\n  management: PropTypes.bool.isRequired,\n};\n\nfunction NextEditableDisplay({eventId, editableType, onClose, fileTypes, management}) {\n  const [editables, setEditables] = useState(null);\n  const [filters, setFilters] = useState({});\n  const [filteredSet, _setFilteredSet] = useState(new Set());\n  const [selectedEditable, setSelectedEditable] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const currFilters = useRef(null);\n  const history = useHistory();\n\n  const setFilteredSet = value => {\n    _setFilteredSet(value);\n    if (selectedEditable && !value.has(selectedEditable.id)) {\n      setSelectedEditable(null);\n    }\n  };\n\n  const getEditables = async _filters => {\n    let response;\n    try {\n      response = await indicoAxios.post(editableListURL({event_id: eventId, type: editableType}), {\n        extensions: _.pickBy(_filters, x => Array.isArray(x)),\n        has_files: _.pickBy(_filters, x => !Array.isArray(x)),\n      });\n    } catch (e) {\n      handleAxiosError(e);\n      return;\n    }\n    return camelizeKeys(response.data);\n  };\n\n  const filterOptions = useMemo(\n    () => [\n      {\n        key: 'code',\n        text: Translate.string('Program code'),\n        options: _.uniq(editables?.map(e => e.contributionCode).filter(x => x)).map(code => ({\n          value: code,\n          text: code,\n        })),\n        isMatch: (editable, selectedOptions) => selectedOptions.includes(editable.contributionCode),\n      },\n      {\n        key: 'keywords',\n        text: Translate.string('Keywords'),\n        options: _.uniq(_.flatten(editables?.map(c => c.contributionKeywords))).map(keyword => ({\n          value: keyword,\n          text: keyword,\n        })),\n        isMatch: (editable, selectedOptions) =>\n          editable.contributionKeywords.some(k => selectedOptions.includes(k)),\n      },\n      ...fileTypes.map(({id, name, extensions}) => ({\n        key: `filetypes_${id}`,\n        text: name,\n        options: [\n          ...(extensions.length > 1\n            ? extensions.map(extension => ({value: `has_ext_${extension}`, text: extension}))\n            : [{value: 'has_files', text: Translate.string('has files'), exclusive: true}]),\n          {\n            value: 'has_no_files',\n            text: Translate.string('has no files'),\n            exclusive: true,\n          },\n        ],\n      })),\n    ],\n    [editables, fileTypes]\n  );\n\n  const onChangeFilters = async activeFilters => {\n    const filetypesKeyExpr = /^filetypes_(\\d+)$/;\n    const formatFilterOptions = options => {\n      const extOptionExpr = /^has_ext_(.*)$/;\n      const extensionOptions = Object.keys(options).filter(o => extOptionExpr.exec(o));\n      return extensionOptions.length > 0\n        ? extensionOptions.map(o => extOptionExpr.exec(o)[1])\n        : !options.has_no_files;\n    };\n    const newFilters = Object.keys(activeFilters)\n      .filter(f => filetypesKeyExpr.exec(f))\n      .reduce(\n        (acc, f) => ({\n          ...acc,\n          [+filetypesKeyExpr.exec(f)[1]]: formatFilterOptions(activeFilters[f]),\n        }),\n        {}\n      );\n    let _editables = editables;\n    if (!_.isEqual(currFilters.current, newFilters)) {\n      setLoading(true);\n      _editables = await getEditables(newFilters);\n      setLoading(false);\n      setEditables(_editables);\n      currFilters.current = newFilters;\n    }\n    const filtered = _editables.filter(x =>\n      filterOptions.every(\n        ({key, isMatch}) =>\n          !activeFilters[key] || !isMatch || isMatch(x, Object.keys(activeFilters[key] || {}))\n      )\n    );\n    setFilters(activeFilters);\n    setFilteredSet(new Set(filtered.map(e => e.id)));\n  };\n\n  const filteredEditables = useMemo(\n    () =>\n      _.orderBy(\n        editables?.map(e => ({\n          ...e,\n          canAssignSelf: filteredSet.has(e.id) ? e.canAssignSelf : false,\n        })) || [],\n        'canAssignSelf',\n        'desc'\n      ),\n    [editables, filteredSet]\n  );\n\n  const handleAssign = async () => {\n    try {\n      await indicoAxios.put(\n        assignMyselfURL({\n          event_id: eventId,\n          contrib_id: selectedEditable.contributionId,\n          type: editableType,\n        })\n      );\n    } catch (error) {\n      handleAxiosError(error);\n      return;\n    }\n    if (management) {\n      location.href = selectedEditable.timelineURL;\n    } else {\n      history.push(selectedEditable.timelineURL);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose} closeOnDimmerClick={false} open>\n      <Modal.Header>{GetNextEditableTitles[editableType]}</Modal.Header>\n      <Modal.Content>\n        <div styleName=\"filetype-list\">\n          <ListFilter\n            name={`get-next-${editableType}-filter-${eventId}`}\n            list={editables || []}\n            filters={filters}\n            filterOptions={filterOptions}\n            searchableId={e => e.contributionFriendlyId}\n            searchableFields={e =>\n              e.editor\n                ? [e.contributionTitle, e.contributionCode, e.editor.fullName]\n                : [e.contributionTitle, e.contributionCode]\n            }\n            onChangeFilters={onChangeFilters}\n            onChangeList={setFilteredSet}\n          />\n        </div>\n        <Dimmer.Dimmable styleName=\"filtered-editables\" dimmed={loading}>\n          <NextEditableTable\n            filteredEditables={filteredEditables}\n            selectedEditable={selectedEditable}\n            setSelectedEditable={setSelectedEditable}\n          />\n          <Dimmer active={loading} inverted>\n            <Loader />\n          </Dimmer>\n        </Dimmer.Dimmable>\n      </Modal.Content>\n      <Modal.Actions style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <Button onClick={onClose}>\n          <Translate>Cancel</Translate>\n        </Button>\n        <Button color=\"blue\" onClick={handleAssign} disabled={selectedEditable === null}>\n          <Translate>Assign to myself</Translate>\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nNextEditableDisplay.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  editableType: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  fileTypes: PropTypes.arrayOf(PropTypes.shape(fileTypePropTypes)).isRequired,\n  management: PropTypes.bool.isRequired,\n};\n\nfunction NextEditableTable({filteredEditables, selectedEditable, setSelectedEditable}) {\n  if (filteredEditables === null) {\n    return null;\n  }\n\n  const codePresent = Object.values(filteredEditables).some(c => c.contributionCode);\n\n  return filteredEditables.length ? (\n    <Table basic=\"very\" striped>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell style={{width: '2%'}} />\n          <Table.HeaderCell style={{width: '6%'}}>ID</Table.HeaderCell>\n          {codePresent && <Table.HeaderCell style={{width: '10%'}}>Code</Table.HeaderCell>}\n          <Table.HeaderCell>Title</Table.HeaderCell>\n          <Table.HeaderCell style={{width: '18%'}}>Editor</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {filteredEditables.map(editable => (\n          <Table.Row key={editable.id} style={editable.canAssignSelf ? {} : {opacity: '50%'}}>\n            <Table.Cell>\n              <Checkbox\n                radio\n                disabled={!editable.canAssignSelf}\n                value={editable.id}\n                checked={selectedEditable?.id === editable.id}\n                onChange={() => setSelectedEditable(editable)}\n              />\n            </Table.Cell>\n            <Table.Cell>{editable.contributionFriendlyId}</Table.Cell>\n            {codePresent && (\n              <Table.Cell>\n                {editable.contributionCode ? editable.contributionCode : Translate.string('n/a')}\n              </Table.Cell>\n            )}\n            <Table.Cell>\n              <a href={editable.timelineURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                {editable.contributionTitle}\n              </a>\n            </Table.Cell>\n            <Table.Cell>{editable.editor ? editable.editor.fullName : ''}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  ) : (\n    <div styleName=\"no-editables-available\">\n      <Translate>There are no editables available.</Translate>\n    </div>\n  );\n}\n\nNextEditableTable.propTypes = {\n  filteredEditables: PropTypes.array,\n  selectedEditable: PropTypes.object,\n  setSelectedEditable: PropTypes.func.isRequired,\n};\n\nNextEditableTable.defaultProps = {\n  filteredEditables: null,\n  selectedEditable: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport principalsURL from 'indico-url:event_editing.api_editable_type_principals';\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Loader, Message} from 'semantic-ui-react';\n\nimport {FinalPrincipalList} from 'indico/react/components';\nimport {getChangedValues, handleSubmitError} from 'indico/react/forms';\nimport {FinalModalForm} from 'indico/react/forms/final-form';\nimport {useFavoriteUsers, useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\nimport {indicoAxios} from 'indico/utils/axios';\n\nexport default function TeamManager({editableType, onClose}) {\n  const eventId = useNumericParam('event_id');\n  const favoriteUsersController = useFavoriteUsers();\n\n  const {data: principals, loading: isLoadingPrincipals} = useIndicoAxios(\n    principalsURL({event_id: eventId, type: editableType})\n  );\n\n  const handleSubmit = async (data, form) => {\n    const changedValues = getChangedValues(data, form);\n    try {\n      await indicoAxios.post(principalsURL({event_id: eventId, type: editableType}), changedValues);\n    } catch (error) {\n      return handleSubmitError(error);\n    }\n    onClose();\n  };\n\n  if (isLoadingPrincipals) {\n    return <Loader active />;\n  } else if (!principals) {\n    return null;\n  }\n\n  return (\n    <FinalModalForm\n      id=\"team-manager\"\n      size=\"small\"\n      onSubmit={handleSubmit}\n      onClose={onClose}\n      header={Translate.string('Set editors')}\n      initialValues={{principals}}\n      initialValuesEqual={_.isEqual}\n      unloadPrompt\n      unloadPromptRouter\n    >\n      <Message>\n        <FinalPrincipalList\n          name=\"principals\"\n          withEventRoles\n          withCategoryRoles\n          favoriteUsersController={favoriteUsersController}\n          label={Translate.string('Editors')}\n          eventId={eventId}\n        />\n      </Message>\n    </FinalModalForm>\n  );\n}\n\nTeamManager.propTypes = {\n  editableType: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"toolbar-checkbox\":\"events-editing-client-js-management-editable_type-___EditableTypeDashboard-module__toolbar-checkbox___in161\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global ajaxDialog:false */\n\nimport anonymousTeamURL from 'indico-url:event_editing.api_anonymous_team';\nimport contribsWithNoEditablesURL from 'indico-url:event_editing.api_contribs_with_no_editables';\nimport enableEditingURL from 'indico-url:event_editing.api_editing_enabled';\nimport emailMetadataURL from 'indico-url:event_editing.api_email_not_submitted_metadata';\nimport emailPreviewURL from 'indico-url:event_editing.api_email_not_submitted_preview';\nimport emailSendURL from 'indico-url:event_editing.api_email_not_submitted_send';\nimport selfAssignURL from 'indico-url:event_editing.api_self_assign_enabled';\nimport enableSubmissionURL from 'indico-url:event_editing.api_submission_enabled';\nimport contactEditingTeamURL from 'indico-url:event_editing.contact_team';\nimport dashboardURL from 'indico-url:event_editing.dashboard';\nimport manageEditableTypeListURL from 'indico-url:event_editing.manage_editable_type_list';\nimport manageFileTypesURL from 'indico-url:event_editing.manage_file_types';\nimport manageReviewConditionsURL from 'indico-url:event_editing.manage_review_conditions';\n\nimport React, {useState} from 'react';\nimport {useParams, Link} from 'react-router-dom';\nimport {Checkbox, Loader} from 'semantic-ui-react';\n\nimport {EmailContribAbstractRolesButton} from 'indico/modules/events/persons/EmailContribAbstractRolesButton';\nimport {ManagementPageSubTitle, ManagementPageBackButton} from 'indico/react/components';\nimport {useIndicoAxios, useTogglableValue} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport {EditableTypeTitles, GetNextEditableTitles} from '../../models';\nimport Section from '../Section';\n\nimport NextEditable from './NextEditable';\nimport TeamManager from './TeamManager';\n\nimport './EditableTypeDashboard.module.scss';\n\nexport default function EditableTypeDashboard() {\n  const eventId = useNumericParam('event_id');\n  const {type} = useParams();\n  const [editorManagerVisible, setEditorManagerVisible] = useState(false);\n  const [selfAssignModalVisible, setSelfAssignModalVisible] = useState(false);\n\n  const [\n    selfAssignEnabled,\n    toggleSelfAssign,\n    selfAssignLoading,\n    selfAssignSaving,\n  ] = useTogglableValue(selfAssignURL({event_id: eventId, type}));\n\n  const [\n    anonymousTeamEnabled,\n    toggleAnonymousTeam,\n    anonymousTeamLoading,\n    anonymousTeamSaving,\n  ] = useTogglableValue(anonymousTeamURL({event_id: eventId, type}));\n\n  const [submissionEnabled, toggleSubmission, submissionLoading] = useTogglableValue(\n    enableSubmissionURL({event_id: eventId, type})\n  );\n\n  const [editingEnabled, toggleEditing, editingLoading] = useTogglableValue(\n    enableEditingURL({event_id: eventId, type})\n  );\n\n  const contactEditingTeam = () => {\n    ajaxDialog({\n      url: contactEditingTeamURL({event_id: eventId, type}),\n      title: Translate.string('Send emails to the editing team'),\n    });\n  };\n\n  const editorAssignmentDescription = {\n    paper: Translate.string('Assign an editor to papers'),\n    poster: Translate.string('Assign an editor to posters'),\n    slides: Translate.string('Assign an editor to slides'),\n  }[type];\n\n  const {data} = useIndicoAxios(contribsWithNoEditablesURL({event_id: eventId, type}));\n  const numEditables = data?.count || 0;\n\n  return (\n    <>\n      <ManagementPageSubTitle title={EditableTypeTitles[type]} />\n      <ManagementPageBackButton url={dashboardURL({event_id: eventId})} />\n      {selfAssignLoading || anonymousTeamLoading || submissionLoading || editingLoading ? (\n        <Loader active />\n      ) : (\n        <>\n          <div className=\"action-box\">\n            <Section\n              icon=\"file\"\n              label={\n                submissionEnabled\n                  ? Translate.string('Submission is open')\n                  : Translate.string('Submission is not open')\n              }\n              description={Translate.string('Toggle whether users can submit new editables')}\n            >\n              <button className=\"i-button highlight\" onClick={toggleSubmission} type=\"button\">\n                {submissionEnabled ? Translate.string('Close now') : Translate.string('Start now')}\n              </button>\n            </Section>\n            <Section\n              icon=\"edit\"\n              label={\n                editingEnabled\n                  ? Translate.string('Editing is open')\n                  : Translate.string('Editing is not open')\n              }\n              description={Translate.string('Toggle whether editors can review submissions')}\n            >\n              <button className=\"i-button highlight\" onClick={toggleEditing} type=\"button\">\n                {editingEnabled ? Translate.string('Close now') : Translate.string('Start now')}\n              </button>\n            </Section>\n            <Section\n              icon=\"bell\"\n              label={Translate.string('Remind submitters')}\n              description={Translate.string(\n                'Send an email to authors who have not submitted any files of this editable type'\n              )}\n            >\n              <span className=\"i-label\" title={Translate.string('Contributions without editables')}>\n                {numEditables}\n              </span>\n              <EmailContribAbstractRolesButton\n                objectContext=\"contributions\"\n                metadataURL={emailMetadataURL({event_id: eventId, type})}\n                previewURL={emailPreviewURL({event_id: eventId, type})}\n                sendURL={emailSendURL({event_id: eventId, type})}\n                className={numEditables > 0 ? '' : 'disabled'}\n              />\n            </Section>\n          </div>\n          <div className=\"action-box\">\n            <Section\n              icon=\"file\"\n              label={Translate.string('File types')}\n              description={Translate.string('Configure file types')}\n            >\n              <Link\n                className=\"i-button icon-settings\"\n                to={manageFileTypesURL({event_id: eventId, type})}\n              >\n                <Translate>Configure</Translate>\n              </Link>\n            </Section>\n            <Section\n              icon=\"equalizer\"\n              label={Translate.string('Ready for review conditions')}\n              description={Translate.string('Configure conditions for reviewing')}\n            >\n              <Link\n                className=\"i-button icon-settings\"\n                to={manageReviewConditionsURL({event_id: eventId, type})}\n              >\n                <Translate>Configure</Translate>\n              </Link>\n            </Section>\n            <Section\n              icon=\"users\"\n              label={Translate.string('Editing team')}\n              description={Translate.string('Configure editing team')}\n            >\n              <Checkbox\n                styleName=\"toolbar-checkbox\"\n                toggle\n                checked={anonymousTeamEnabled}\n                onClick={!anonymousTeamSaving ? toggleAnonymousTeam : null}\n                label={Translate.string('Keep editing team members anonymous')}\n              />\n              <button className=\"i-button icon-mail\" onClick={contactEditingTeam} type=\"button\">\n                <Translate>Contact</Translate>\n              </button>\n              <button\n                className=\"i-button icon-users\"\n                onClick={() => setEditorManagerVisible(true)}\n                type=\"button\"\n              >\n                <Translate>Manage team</Translate>\n              </button>\n              {editorManagerVisible && (\n                <TeamManager editableType={type} onClose={() => setEditorManagerVisible(false)} />\n              )}\n            </Section>\n            <Section\n              icon=\"copy1\"\n              label={Translate.string('Editor assignment')}\n              description={editorAssignmentDescription}\n            >\n              <Checkbox\n                styleName=\"toolbar-checkbox\"\n                toggle\n                checked={selfAssignEnabled}\n                onClick={!selfAssignSaving ? toggleSelfAssign : null}\n                label={Translate.string('Allow editors to self-assign editables')}\n              />\n              <Link\n                className=\"i-button icon-list\"\n                to={manageEditableTypeListURL({event_id: eventId, type})}\n              >\n                <Translate>List</Translate>\n              </Link>\n              <a\n                className=\"i-button icon-arrow-right-sparse\"\n                onClick={() => setSelfAssignModalVisible(true)}\n              >\n                {GetNextEditableTitles[type]}\n              </a>\n              {selfAssignModalVisible && (\n                <NextEditable\n                  eventId={eventId}\n                  editableType={type}\n                  onClose={() => setSelfAssignModalVisible(false)}\n                  management\n                />\n              )}\n            </Section>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport editableTypeURL from 'indico-url:event_editing.manage_editable_type';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {\n  ManagementPageBackButton,\n  ManagementPageTitle,\n  ManagementPageSubTitle,\n} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport {EditableTypeTitles} from '../../models';\n\nexport default function EditableTypeSubPageNav({title}) {\n  const eventId = useNumericParam('event_id');\n  const {type} = useParams();\n  return (\n    <>\n      <ManagementPageTitle\n        title={Translate.string('Editing ({type})', {type: EditableTypeTitles[type]})}\n      />\n      <ManagementPageSubTitle title={title} />\n      <ManagementPageBackButton url={editableTypeURL({event_id: eventId, type})} />\n    </>\n  );\n}\n\nEditableTypeSubPageNav.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\n\nexport default function ExtensionList({value, disabled, onChange, onFocus, onBlur}) {\n  const handleChange = (e, {value: newValue}) => {\n    onChange(_.uniq(newValue.map(x => x.trim().replace(/^[*.]+/, ''))));\n    onFocus();\n    onBlur();\n  };\n\n  return (\n    <Dropdown\n      options={value.map(x => ({text: x, value: x}))}\n      value={value}\n      disabled={disabled}\n      search\n      selection\n      multiple\n      allowAdditions\n      fluid\n      icon={null}\n      closeOnChange\n      noResultsMessage={Translate.string('Enter an extension')}\n      additionLabel={Translate.string('Add extension') + ' '} // eslint-disable-line prefer-template\n      onChange={handleChange}\n    />\n  );\n}\n\nExtensionList.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.string).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Header, Icon, Message} from 'semantic-ui-react';\n\nimport {FinalCheckbox, FinalField, FinalInput, unsortedArraysEqual} from 'indico/react/forms';\nimport {FinalModalForm} from 'indico/react/forms/final-form';\nimport {Param, Translate} from 'indico/react/i18n';\n\nimport ExtensionList from './ExtensionList';\n\nexport default function FileTypeModal({onClose, onSubmit, fileType, header}) {\n  const handleSubmit = async (formData, form) => {\n    const error = await onSubmit(formData, form);\n    if (error) {\n      return error;\n    }\n    onClose();\n  };\n\n  const {name, filenameTemplate, extensions, required, allowMultipleFiles, publishable} = fileType;\n  return (\n    <FinalModalForm\n      id=\"file-type\"\n      onSubmit={handleSubmit}\n      onClose={onClose}\n      header={header}\n      initialValues={{\n        name,\n        extensions,\n        required,\n        publishable,\n        filename_template: filenameTemplate,\n        allow_multiple_files: allowMultipleFiles,\n      }}\n    >\n      {fileType.isUsed && (\n        <Message visible warning>\n          <Message.Content>\n            <Icon name=\"warning\" size=\"large\" />\n            <Translate>Take into account that this file type has files attached to it.</Translate>\n          </Message.Content>\n        </Message>\n      )}\n      <FinalInput name=\"name\" label={Translate.string('Name')} required />\n      <FinalInput\n        name=\"filename_template\"\n        label={Translate.string('Filename template')}\n        description={\n          <Translate>\n            Glob-style filename template that all files of this type have to conform to (e.g.{' '}\n            <Param name=\"example\" value=\"*_paper\" wrapper={<code />} />\n            ). No dots allowed. It is possible to use{' '}\n            <Param name=\"placeholder\" value=\"{code}\" wrapper={<code />} /> as a placeholder for the\n            contribution program code.\n          </Translate>\n        }\n        pattern=\"^[^.]*$\"\n        nullIfEmpty\n      />\n      <FinalField\n        name=\"extensions\"\n        component={ExtensionList}\n        label={Translate.string('Extensions')}\n        isEqual={unsortedArraysEqual}\n        description={\n          <Translate>\n            Allowed file extensions. If left empty, there are no extension restrictions\n          </Translate>\n        }\n      />\n      <Header>Options</Header>\n      <FinalCheckbox\n        name=\"required\"\n        label={Translate.string('File required')}\n        description={<Translate>Whether the file type is mandatory</Translate>}\n      />\n      <FinalCheckbox\n        name=\"allow_multiple_files\"\n        label={Translate.string('Multiple files')}\n        description={<Translate>Whether the file type allows uploading multiple files</Translate>}\n      />\n      <FinalCheckbox\n        name=\"publishable\"\n        label={Translate.string('Publishable')}\n        description={<Translate>Whether the files of this type can be published</Translate>}\n      />\n    </FinalModalForm>\n  );\n}\n\nFileTypeModal.propTypes = {\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  header: PropTypes.string.isRequired,\n  fileType: PropTypes.object,\n};\n\nFileTypeModal.defaultProps = {\n  fileType: {\n    name: null,\n    extensions: [],\n    required: false,\n    allowMultipleFiles: false,\n    publishable: false,\n    isUsed: false,\n    filenameTemplate: null,\n  },\n  onClose: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport createFileTypeURL from 'indico-url:event_editing.api_add_file_type';\nimport editFileTypeURL from 'indico-url:event_editing.api_edit_file_type';\nimport fileTypesURL from 'indico-url:event_editing.api_file_types';\n\nimport PropTypes from 'prop-types';\nimport React, {useReducer} from 'react';\nimport {Button, Icon, Loader, Message, Segment, Popup, Label} from 'semantic-ui-react';\n\nimport {RequestConfirmDelete, TooltipIfTruncated} from 'indico/react/components';\nimport {getChangedValues, handleSubmitError} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nimport {EditableType} from '../../../models';\n\nimport FileTypeModal from './FileTypeModal';\n\nimport './FileTypeManager.module.scss';\n\nconst initialState = {\n  fileType: null,\n  operation: null,\n};\n\nfunction fileTypesReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_FILE_TYPE':\n      return {operation: 'add', fileType: null};\n    case 'EDIT_FILE_TYPE':\n      return {operation: 'edit', fileType: action.fileType};\n    case 'DELETE_FILE_TYPE':\n      return {operation: 'delete', fileType: action.fileType};\n    case 'CLEAR':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nfunction StatusIcon({active, icon, text}) {\n  return (\n    <Icon size=\"small\" color={active ? 'blue' : 'grey'} name={icon} title={active ? text : ''} />\n  );\n}\n\nStatusIcon.propTypes = {\n  active: PropTypes.bool.isRequired,\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default function FileTypeManager({eventId, editableType}) {\n  const [state, dispatch] = useReducer(fileTypesReducer, initialState);\n  const {data, loading: isLoadingFileTypes, reFetch, lastData} = useIndicoAxios(\n    fileTypesURL({event_id: eventId, type: editableType}),\n    {camelize: true}\n  );\n\n  const createFileType = async formData => {\n    try {\n      await indicoAxios.post(createFileTypeURL({event_id: eventId, type: editableType}), formData);\n      reFetch();\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n  };\n\n  const editFileType = async (fileTypeId, fileTypeData) => {\n    const url = editFileTypeURL({event_id: eventId, file_type_id: fileTypeId, type: editableType});\n\n    try {\n      await indicoAxios.patch(url, fileTypeData);\n      reFetch();\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n  };\n\n  const deleteFileType = async fileTypeId => {\n    const url = editFileTypeURL({event_id: eventId, file_type_id: fileTypeId, type: editableType});\n\n    try {\n      await indicoAxios.delete(url);\n      reFetch();\n    } catch (e) {\n      handleAxiosError(e);\n      return true;\n    }\n  };\n\n  const fileTypes = data || lastData;\n  if (isLoadingFileTypes && !lastData) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!fileTypes) {\n    return null;\n  }\n\n  const isLastPublishable = fileTypeId => {\n    const publishable = fileTypes.filter(ft => ft.publishable);\n    return publishable.length === 1 && publishable[0].id === fileTypeId;\n  };\n\n  const canDelete = fileType =>\n    !fileType.isUsedInCondition && !fileType.isUsed && !isLastPublishable(fileType.id);\n  const renderPopupContent = fileType => {\n    if (canDelete(fileType)) {\n      return null;\n    }\n\n    if (fileType.isUsed) {\n      return <Translate>This type has files attached</Translate>;\n    } else if (fileType.isUsedInCondition) {\n      return <Translate>This type is used in a review condition</Translate>;\n    } else {\n      return <Translate>Cannot delete the only publishable type</Translate>;\n    }\n  };\n  const {operation, fileType: currentFileType} = state;\n  return (\n    <div styleName=\"file-types-container\">\n      {fileTypes.length === 0 && (\n        <Message info>\n          <Translate>There are no file types defined for this event</Translate>\n        </Message>\n      )}\n      {fileTypes.map(fileType => (\n        <Segment key={fileType.id} styleName=\"filetype-segment\">\n          <Label ribbon>\n            <StatusIcon\n              active={fileType.required}\n              icon=\"asterisk\"\n              text={Translate.string('File required')}\n            />\n            <StatusIcon\n              active={fileType.allowMultipleFiles}\n              icon=\"copy outline\"\n              text={Translate.string('Multiple files allowed')}\n            />\n            <StatusIcon\n              active={fileType.publishable}\n              icon=\"eye\"\n              text={Translate.string('File publishable')}\n            />\n          </Label>\n          <Popup\n            on=\"hover\"\n            disabled={canDelete(fileType)}\n            position=\"right center\"\n            content={renderPopupContent(fileType)}\n            trigger={\n              <Icon\n                style={canDelete(fileType) ? {cursor: 'pointer'} : {}}\n                color=\"red\"\n                name=\"trash\"\n                corner=\"top right\"\n                disabled={!canDelete(fileType)}\n                onClick={() =>\n                  canDelete(fileType) && dispatch({type: 'DELETE_FILE_TYPE', fileType})\n                }\n              />\n            }\n          />\n          <Icon\n            style={{cursor: 'pointer'}}\n            color=\"blue\"\n            name=\"pencil\"\n            corner=\"top right\"\n            onClick={() => dispatch({type: 'EDIT_FILE_TYPE', fileType})}\n          />\n          <div styleName=\"filetype-header\">\n            <h3>\n              <TooltipIfTruncated>\n                <span styleName=\"name\">{fileType.name}</span>\n              </TooltipIfTruncated>\n            </h3>\n            <ul styleName=\"file-extensions\">\n              {fileType.extensions.length !== 0\n                ? fileType.extensions.map(ext => <li key={ext}>{ext}</li>)\n                : Translate.string('(no extension restrictions)')}\n            </ul>\n          </div>\n        </Segment>\n      ))}\n      <Button primary floated=\"right\" onClick={() => dispatch({type: 'ADD_FILE_TYPE'})}>\n        <Icon name=\"plus\" />\n        <Translate>Add a new file type</Translate>\n      </Button>\n      {['add', 'edit'].includes(operation) && (\n        <FileTypeModal\n          header={\n            operation === 'edit'\n              ? Translate.string('Edit file type')\n              : Translate.string('Create a new file type')\n          }\n          onSubmit={async (formData, form) => {\n            if (operation === 'edit') {\n              return await editFileType(currentFileType.id, getChangedValues(formData, form));\n            } else {\n              return await createFileType(formData);\n            }\n          }}\n          fileType={currentFileType ? currentFileType : undefined}\n          onClose={() => dispatch({type: 'CLEAR'})}\n        />\n      )}\n      <RequestConfirmDelete\n        onClose={() => dispatch({type: 'CLEAR'})}\n        requestFunc={() => deleteFileType(currentFileType.id)}\n        open={operation === 'delete'}\n      >\n        {currentFileType && (\n          <Translate>\n            Are you sure you want to delete the file type{' '}\n            <Param name=\"fileType\" value={currentFileType.name} wrapper={<strong />} />?\n          </Translate>\n        )}\n      </RequestConfirmDelete>\n    </div>\n  );\n}\n\nFileTypeManager.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport EditableTypeSubPageNav from '../EditableTypeSubPageNav';\n\nimport FileTypeManager from './FileTypeManager';\n\nexport default function FileTypeManagement() {\n  const eventId = useNumericParam('event_id');\n  const {type} = useParams();\n\n  return (\n    <>\n      <EditableTypeSubPageNav title={Translate.string('File types')} />\n      <FileTypeManager eventId={eventId} editableType={type} />\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\n\nconst ReviewConditionsContext = React.createContext(null);\nexport default ReviewConditionsContext;\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useContext} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {Button, Form} from 'semantic-ui-react';\n\nimport {FinalDropdown, FinalSubmitButton} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport ReviewConditionsContext from './context';\n\nimport './ReviewConditionForm.module.scss';\n\nexport default function ReviewConditionForm({types, onSubmit, onDismiss}) {\n  const {fileTypes} = useContext(ReviewConditionsContext);\n  const options = fileTypes.map(fileType => ({text: fileType.name, value: fileType.id}));\n\n  return (\n    <div styleName=\"condition-form\">\n      <FinalForm\n        onSubmit={onSubmit}\n        initialValues={{file_types: types}}\n        subscription={{submitting: true}}\n      >\n        {({handleSubmit, submitting}) => (\n          <Form onSubmit={handleSubmit}>\n            <div styleName=\"file-types-dropdown\">\n              <FinalDropdown\n                placeholder={Translate.string('Select filetypes to create a condition')}\n                name=\"file_types\"\n                options={options}\n                hideValidationError\n                required\n                selection\n                multiple\n                search\n              />\n            </div>\n            <div styleName=\"action-buttons\">\n              <FinalSubmitButton icon=\"checkmark\" size=\"mini\" circular primary />\n              <Button\n                icon=\"cancel\"\n                size=\"mini\"\n                onClick={onDismiss}\n                disabled={submitting}\n                circular\n              />\n            </div>\n          </Form>\n        )}\n      </FinalForm>\n    </div>\n  );\n}\n\nReviewConditionForm.propTypes = {\n  types: PropTypes.arrayOf(PropTypes.number),\n  onSubmit: PropTypes.func.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n};\n\nReviewConditionForm.defaultProps = {\n  types: [],\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"types-list\":\"events-editing-client-js-management-editable_type-review_conditions-___ConditionInfo-module__types-list___iKqRf\",\"condition-actions\":\"events-editing-client-js-management-editable_type-review_conditions-___ConditionInfo-module__condition-actions___zPyeq\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport editReviewConditionURL from 'indico-url:event_editing.api_edit_review_condition';\n\nimport PropTypes from 'prop-types';\nimport React, {useState, useContext} from 'react';\nimport {Icon, Label} from 'semantic-ui-react';\n\nimport {RequestConfirmDelete, TooltipIfTruncated} from 'indico/react/components';\nimport {handleSubmitError} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nimport {EditableType} from '../../../models';\n\nimport ReviewConditionsContext from './context';\nimport ReviewConditionForm from './ReviewConditionForm';\n\nimport './ConditionInfo.module.scss';\n\nexport default function ConditionInfo({fileTypes, condId, editableType, onUpdate, disableActions}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const {eventId} = useContext(ReviewConditionsContext);\n  const url = editReviewConditionURL({event_id: eventId, condition_id: condId, type: editableType});\n\n  const deleteCondition = async () => {\n    try {\n      await indicoAxios.delete(url);\n    } catch (e) {\n      handleAxiosError(e);\n      return true;\n    }\n\n    if (onUpdate) {\n      onUpdate();\n    }\n  };\n\n  return isEditing ? (\n    <ReviewConditionForm\n      types={fileTypes.map(ft => ft.id)}\n      onDismiss={() => setIsEditing(false)}\n      onSubmit={async formData => {\n        try {\n          await indicoAxios.patch(url, formData);\n        } catch (e) {\n          return handleSubmitError(e);\n        }\n\n        if (onUpdate) {\n          onUpdate();\n        }\n        setIsEditing(false);\n      }}\n    />\n  ) : (\n    <>\n      <div styleName=\"types-list\">\n        {fileTypes.map((type, index) => (\n          <React.Fragment key={type.id}>\n            <TooltipIfTruncated>\n              <Label basic>{type.name}</Label>\n            </TooltipIfTruncated>\n            {index !== fileTypes.length - 1 && (\n              <Label as=\"span\" color=\"orange\" size=\"small\" circular>\n                <Translate>AND</Translate>\n              </Label>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      <div styleName=\"condition-actions\">\n        <Icon\n          color=\"blue\"\n          name=\"pencil\"\n          onClick={() => setIsEditing(true)}\n          disabled={disableActions}\n        />\n        <Icon\n          color=\"red\"\n          name=\"trash\"\n          onClick={() => setIsDeleting(true)}\n          disabled={disableActions}\n        />\n      </div>\n      <RequestConfirmDelete\n        onClose={() => setIsDeleting(false)}\n        requestFunc={deleteCondition}\n        open={isDeleting}\n      >\n        <Translate>Are you sure you want to delete this condition?</Translate>\n      </RequestConfirmDelete>\n    </>\n  );\n}\n\nConditionInfo.propTypes = {\n  fileTypes: PropTypes.array.isRequired,\n  condId: PropTypes.number.isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n  onUpdate: PropTypes.func,\n  disableActions: PropTypes.bool,\n};\n\nConditionInfo.defaultProps = {\n  onUpdate: null,\n  disableActions: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"conditions-container\":\"events-editing-client-js-management-editable_type-review_conditions-___ReviewConditionsManager-module__conditions-container___i4GxF\",\"condition-row\":\"events-editing-client-js-management-editable_type-review_conditions-___ReviewConditionsManager-module__condition-row___uSZ0H\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport reviewConditionsURL from 'indico-url:event_editing.api_review_conditions';\n\nimport React, {useState, useContext} from 'react';\nimport {Button, Divider, Loader, Message} from 'semantic-ui-react';\n\nimport {handleSubmitError} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\n\nimport ConditionInfo from './ConditionInfo';\nimport ReviewConditionsContext from './context';\nimport ReviewConditionForm from './ReviewConditionForm';\n\nimport './ReviewConditionsManager.module.scss';\n\nexport default function ReviewConditionsManager() {\n  const {eventId, fileTypes, editableType} = useContext(ReviewConditionsContext);\n  const [isAdding, setIsAdding] = useState(false);\n  const {loading, reFetch, data: eventConditionsSetting, lastData} = useIndicoAxios(\n    reviewConditionsURL({event_id: eventId, type: editableType})\n  );\n\n  const eventConditions = eventConditionsSetting || lastData;\n  if (loading && !lastData) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!eventConditions) {\n    return null;\n  }\n\n  // map an array of ids to an array of file type objects\n  const reviewConditions = eventConditions.map(([condId, condition]) => [\n    condId,\n    condition.map(fileTypeId => fileTypes.find(({id}) => id === fileTypeId)),\n  ]);\n  const createNewCondition = async formData => {\n    try {\n      await indicoAxios.post(\n        reviewConditionsURL({event_id: eventId, type: editableType}),\n        formData\n      );\n      setIsAdding(false);\n      reFetch();\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n  };\n\n  return (\n    <div styleName=\"conditions-container\">\n      <Message info>\n        <Translate>\n          Here you can define what filetype-related conditions have to be met for a submission to be\n          eligible for review. In order to start the review process, uploaded files must meet one of\n          the specified criteria.\n        </Translate>\n      </Message>\n      {eventConditions.length === 0 && (\n        <Message info>\n          <Translate>No reviewing conditions have been defined</Translate>\n        </Message>\n      )}\n      <div>\n        {reviewConditions.map(([condId, reviewCondition], index) => (\n          <React.Fragment key={condId}>\n            <div styleName=\"condition-row\">\n              <ConditionInfo\n                fileTypes={reviewCondition}\n                condId={condId}\n                editableType={editableType}\n                onUpdate={() => reFetch()}\n                disableActions={loading}\n              />\n            </div>\n            {index !== Object.keys(reviewConditions).length - 1 && (\n              <Divider horizontal>\n                <Translate>OR</Translate>\n              </Divider>\n            )}\n          </React.Fragment>\n        ))}\n        {reviewConditions.length > 0 && (\n          <Divider horizontal>\n            <Translate>Or</Translate>\n          </Divider>\n        )}\n        {isAdding ? (\n          <div styleName=\"condition-row\">\n            <ReviewConditionForm\n              onSubmit={createNewCondition}\n              onDismiss={() => setIsAdding(false)}\n            />\n          </div>\n        ) : (\n          <Button\n            onClick={() => setIsAdding(true)}\n            disabled={isAdding || loading}\n            floated=\"right\"\n            primary\n          >\n            <Translate>Create new filetype condition</Translate>\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport fileTypesURL from 'indico-url:event_editing.api_file_types';\n\nimport React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport EditableTypeSubPageNav from '../EditableTypeSubPageNav';\n\nimport ReviewConditionsContext from './context';\nimport ReviewConditionsManager from './ReviewConditionsManager';\n\nexport default function ReviewConditionManagement() {\n  const eventId = useNumericParam('event_id');\n  const {type} = useParams();\n\n  const {data: fileTypes} = useIndicoAxios(fileTypesURL({event_id: eventId, type}), {\n    camelize: true,\n  });\n\n  return (\n    <>\n      <EditableTypeSubPageNav title={Translate.string('Review conditions')} />\n      {fileTypes !== null && (\n        <ReviewConditionsContext.Provider value={{eventId, editableType: type, fileTypes}}>\n          <ReviewConditionsManager />\n        </ReviewConditionsContext.Provider>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label-text\":\"events-editing-client-js-editing-timeline-___StateIndicator-module__label-text___1APey\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Label, Popup} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\nimport Palette from 'indico/utils/palette';\n\nimport {EditableStatus} from '../../models';\n\nimport './StateIndicator.module.scss';\n\nconst colors = {\n  replaced: 'orange',\n  needs_submitter_confirmation: 'yellow',\n  rejected: 'black',\n  accepted: 'green',\n  needs_submitter_changes: 'red',\n  ready_for_review: 'grey',\n};\n\nconst labelColors = {\n  replaced: Palette.orange,\n  needs_submitter_confirmation: Palette.yellow,\n  rejected: Palette.black,\n  accepted: Palette.green,\n  needs_submitter_changes: Palette.red,\n  not_submitted: Palette.black,\n  ready_for_review: Palette.blue,\n};\n\nexport default function StateIndicator({label, circular, basic, tooltip, state, monochrome}) {\n  const labelColor = labelColors[state] || Palette.black;\n  const trigger = (\n    <Label\n      size=\"tiny\"\n      color={monochrome ? 'grey' : colors[state]}\n      circular={circular}\n      basic={basic}\n    />\n  );\n\n  return (\n    <>\n      <Popup\n        position=\"bottom center\"\n        trigger={trigger}\n        content={tooltip}\n        on=\"hover\"\n        disabled={!tooltip}\n      />\n      {label && (\n        <div styleName=\"label-text\" style={{color: monochrome ? Palette.gray : labelColor}}>\n          {EditableStatus[state] || Translate.string('Unknown')}\n        </div>\n      )}\n    </>\n  );\n}\n\nStateIndicator.propTypes = {\n  label: PropTypes.bool,\n  circular: PropTypes.bool,\n  basic: PropTypes.bool,\n  tooltip: PropTypes.string,\n  state: PropTypes.string.isRequired,\n  monochrome: PropTypes.bool,\n};\n\nStateIndicator.defaultProps = {\n  label: false,\n  circular: false,\n  basic: false,\n  tooltip: null,\n  monochrome: false,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport {RevisionType} from 'indico/modules/events/editing/models';\nimport {Translate} from 'indico/react/i18n';\n\nimport {filePropTypes} from './FileManager/util';\n\n// This method defines each revision as a block\n// with a label referring to its previous state transition\nexport function processRevisions(revisions) {\n  return revisions.map((revision, i) => {\n    const previousRevision = getPreviousRevisionWithFiles(revisions, i);\n    // Set the state on the files that were added/modified in this revision\n    let files = revision.files;\n    if (previousRevision && files?.length) {\n      const previousFilesUUIDs = new Set(previousRevision.files.map(f => f.uuid));\n      const previousFilenames = new Set(previousRevision.files.map(f => f.filename));\n      files = files.map(f => {\n        if (!previousFilesUUIDs.has(f.uuid)) {\n          if (previousFilenames.has(f.filename)) {\n            return {...f, state: 'modified'};\n          }\n          return {...f, state: 'added'};\n        }\n        return f;\n      });\n    }\n    let tags = revision.tags;\n    if (files?.length && !tags?.length) {\n      const nextRevision = revisions.slice(i + 1).find(r => !r.isUndone);\n      if (nextRevision?.isEditorRevision) {\n        tags = nextRevision.tags;\n      }\n    }\n    return {\n      ...revision,\n      header: getRevisionHeader(revisions, revision) || revision.header,\n      items: _.sortBy(revision.comments, 'createdDt'),\n      files,\n      tags,\n    };\n  });\n}\n\nfunction getPreviousRevisionWithFiles(revisions, index) {\n  return revisions\n    .slice(0, index)\n    .reverse()\n    .find(revision => !revision.isUndone && revision.files?.length);\n}\n\nexport const revisionStates = {\n  [RevisionType.needs_submitter_confirmation]: revision =>\n    Translate.string('{editorName} (editor) has made some changes to the paper', {\n      editorName: revision.user.fullName,\n    }),\n  [RevisionType.changes_acceptance]: Translate.string('Submitter has accepted proposed changes'),\n  [RevisionType.changes_rejection]: Translate.string('Submitter has rejected proposed changes'),\n  [RevisionType.needs_submitter_changes]: Translate.string(\n    'Submitter has been asked to make some changes'\n  ),\n  [RevisionType.acceptance]: revision =>\n    revision.files.length\n      ? Translate.string('{editorName} (editor) has accepted after making some changes', {\n          editorName: revision.user.fullName,\n        })\n      : Translate.string('{editorName} (editor) has accepted this revision', {\n          editorName: revision.user.fullName,\n        }),\n  [RevisionType.rejection]: revision =>\n    Translate.string('{editorName} (editor) has rejected this revision', {\n      editorName: revision.user.fullName,\n    }),\n  [RevisionType.replacement]: Translate.string('Revision has been replaced'),\n  [RevisionType.reset]: Translate.string(\"This editable's state has been reset\"),\n};\n\nfunction getRevisionHeader(revisions, revision) {\n  const header = revisionStates[revision.type.name];\n  return typeof header === 'function' ? header(revision) : header;\n}\n\nexport const INDICO_BOT_USER = {\n  fullName: 'Indico Bot',\n};\n\nexport const userPropTypes = {\n  identifier: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nconst typePropTypes = {\n  name: PropTypes.string.isRequired,\n};\n\n// Type that represents a revision comment block\n// (a simplified-ish version of the revision blocks below)\nexport const blockItemPropTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  revisionId: PropTypes.number.isRequired,\n  createdDt: PropTypes.string,\n  modifiedDt: PropTypes.string,\n  canModify: PropTypes.bool,\n  user: PropTypes.shape(userPropTypes),\n  header: PropTypes.string,\n  text: PropTypes.string,\n  html: PropTypes.string,\n  internal: PropTypes.bool,\n  system: PropTypes.bool,\n  isUndone: PropTypes.bool,\n  isEditorRevision: PropTypes.bool,\n  modifyCommentURL: PropTypes.string,\n};\n\n// Type that represents a revision block (with files)\nexport const blockPropTypes = {\n  id: PropTypes.number.isRequired,\n  user: PropTypes.shape(userPropTypes).isRequired,\n  createdDt: PropTypes.string.isRequired,\n  modifiedDt: PropTypes.string,\n  type: PropTypes.shape(typePropTypes).isRequired,\n  isUndone: PropTypes.bool,\n  isEditorRevision: PropTypes.bool,\n  comment: PropTypes.string.isRequired,\n  commentHtml: PropTypes.string.isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape(filePropTypes)).isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape(blockItemPropTypes)).isRequired,\n  customActions: PropTypes.array.isRequired,\n  customActionURL: PropTypes.string,\n  downloadFilesURL: PropTypes.string,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Button} from 'semantic-ui-react';\n\nimport {FinalCheckbox, FinalTextArea} from 'indico/react/forms';\nimport {FinalModalForm} from 'indico/react/forms/final-form';\nimport {Translate} from 'indico/react/i18n';\n\nexport default function CommentButton({onSubmit, loading, disabled}) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleSubmit = async (formData, form) => {\n    const rv = await onSubmit(formData, form);\n    if (!rv) {\n      setModalOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        content={Translate.string('Comment')}\n        loading={loading}\n        disabled={disabled}\n        onClick={() => setModalOpen(true)}\n      />\n      {modalOpen && <CommentModal onSubmit={handleSubmit} onClose={() => setModalOpen(false)} />}\n    </>\n  );\n}\n\nCommentButton.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nfunction CommentModal({onSubmit, onClose}) {\n  return (\n    <FinalModalForm\n      id=\"comment-form\"\n      header={Translate.string('Comment')}\n      onSubmit={onSubmit}\n      onClose={onClose}\n    >\n      <FinalTextArea\n        name=\"text\"\n        placeholder={Translate.string('Leave a comment...')}\n        hideValidationError\n        autoFocus\n        required\n      />\n      <FinalCheckbox\n        label={Translate.string('Restrict visibility of this comment to other editors only')}\n        name=\"internal\"\n        toggle\n      />\n    </FinalModalForm>\n  );\n}\n\nCommentModal.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport applyJudgmentURL from 'indico-url:event_editing.api_apply_judgment';\nimport assignEditorURL from 'indico-url:event_editing.api_assign_editor';\nimport assignSelfEditorURL from 'indico-url:event_editing.api_assign_myself';\nimport createCommentURL from 'indico-url:event_editing.api_create_comment';\nimport editableListURL from 'indico-url:event_editing.api_editable_list';\nimport editorsURL from 'indico-url:event_editing.api_editable_type_editors';\nimport canAssignSelfURL from 'indico-url:event_editing.api_editor_self_assign_allowed';\nimport editablesArchiveURL from 'indico-url:event_editing.api_prepare_editables_archive';\nimport unassignEditorURL from 'indico-url:event_editing.api_unassign_editor';\nimport editableTypeURL from 'indico-url:event_editing.manage_editable_type';\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {useState, useMemo, useEffect} from 'react';\nimport {useParams, Link} from 'react-router-dom';\nimport {Column, Table, SortDirection, WindowScroller} from 'react-virtualized';\nimport {Button, Icon, Loader, Checkbox, Message, Dropdown, Confirm} from 'semantic-ui-react';\n\nimport {\n  TooltipIfTruncated,\n  ManagementPageSubTitle,\n  ManagementPageBackButton,\n  ListFilter,\n} from 'indico/react/components';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {PluralTranslate, Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\nimport {camelizeKeys} from 'indico/utils/case';\nimport Palette from 'indico/utils/palette';\nimport {natSortCompare} from 'indico/utils/sort';\n\nimport StateIndicator from '../../editing/timeline/StateIndicator';\nimport {userPropTypes} from '../../editing/timeline/util';\nimport {EditableType, GetNextEditableTitles} from '../../models';\n\nimport CommentButton from './CommentButton';\nimport NextEditable from './NextEditable';\n\nimport './EditableList.module.scss';\n\nexport default function EditableList({management}) {\n  const eventId = useNumericParam('event_id');\n  const {type} = useParams();\n  const {data: contribList, loading: isLoadingContribList} = useIndicoAxios(\n    editableListURL({event_id: eventId, type}),\n    {camelize: true}\n  );\n  const {data: editors, loading: isLoadingEditors} = useIndicoAxios(\n    editorsURL({event_id: eventId, type}),\n    {camelize: true, manual: !management}\n  );\n  const {data: canAssignSelf, loading: isLoadingCanAssignSelf} = useIndicoAxios(\n    canAssignSelfURL({event_id: eventId, type}),\n    {manual: management}\n  );\n\n  if (isLoadingContribList || isLoadingEditors || isLoadingCanAssignSelf) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!contribList || (management && !editors)) {\n    return null;\n  }\n  const codePresent = Object.values(contribList).some(c => c.code);\n  return (\n    <EditableListDisplay\n      initialContribList={contribList}\n      codePresent={codePresent}\n      editableType={type}\n      eventId={eventId}\n      editors={management ? editors : []}\n      management={management}\n      canAssignSelf={management ? false : canAssignSelf}\n    />\n  );\n}\n\nEditableList.propTypes = {\n  management: PropTypes.bool,\n};\n\nEditableList.defaultProps = {\n  management: true,\n};\n\nfunction EditableListDisplay({\n  initialContribList,\n  codePresent,\n  editableType,\n  eventId,\n  editors,\n  management,\n  canAssignSelf,\n}) {\n  const [sortBy, setSortBy] = useState('friendly_id');\n  const [sortDirection, setSortDirection] = useState('ASC');\n\n  const [contribList, setContribList] = useState(initialContribList);\n  const [sortedList, setSortedList] = useState(contribList);\n  const contribsWithEditables = contribList.filter(x => x.editable);\n  const contribIdSet = new Set(contribsWithEditables.map(x => x.id));\n  const [filteredSet, setFilteredSet] = useState(new Set(contribList.map(e => e.id)));\n  const [selfAssignModalVisible, setSelfAssignModalVisible] = useState(false);\n\n  const [checked, setChecked] = useState([]);\n  const hasCheckedContribs = checked.length > 0;\n  const checkedSet = new Set(checked);\n  const checkedContribsWithEditables = contribsWithEditables.filter(x =>\n    checkedSet.has(x.editable.id)\n  );\n  const editorAssignments = Object.fromEntries(\n    checkedContribsWithEditables\n      .filter(x => x.editable.editor)\n      .map(x => [x.editable.id, x.editable.editor.identifier])\n  );\n  const [activeRequest, setActiveRequest] = useState(null);\n  const [assignmentConflict, setAssignmentConflict] = useState(null);\n  const [skippedEditables, setSkippedEditables] = useState(0);\n\n  const editorOptions = useMemo(\n    () =>\n      _.sortBy(editors, 'fullName').map(e => ({\n        key: e.identifier,\n        icon: 'user',\n        text: e.fullName,\n        value: e.identifier,\n      })),\n    [editors]\n  );\n\n  const judgmentOptions = [\n    {\n      key: 'accept',\n      value: 'accept',\n      text: Translate.string('Accept'),\n      label: {color: 'green', empty: true, circular: true},\n    },\n    {\n      key: 'reject',\n      value: 'reject',\n      text: Translate.string('Reject'),\n      label: {color: 'black', empty: true, circular: true},\n    },\n  ];\n\n  const filterOptions = useMemo(\n    () => [\n      {\n        key: 'state',\n        text: Translate.string('Status'),\n        options: [\n          {value: 'not_submitted', text: Translate.string('Not submitted'), color: 'default'},\n          {value: 'ready_for_review', text: Translate.string('Ready for review'), color: 'grey'},\n          {value: 'accepted', text: Translate.string('Accepted'), exclusive: true, color: 'green'},\n          {value: 'rejected', text: Translate.string('Rejected'), exclusive: true, color: 'black'},\n          {\n            value: 'needs_submitter_changes',\n            text: Translate.string('Needs submitter changes'),\n            exclusive: true,\n            color: 'red',\n          },\n          {\n            value: 'needs_submitter_confirmation',\n            text: Translate.string('Needs submitter confirmation'),\n            exclusive: true,\n            color: 'yellow',\n          },\n        ],\n        isMatch: (contrib, selectedOptions) =>\n          (contrib.c.editable && selectedOptions.includes(contrib.c.editable.state)) ||\n          (selectedOptions.includes('not_submitted') && !contrib.c.editable),\n      },\n      {\n        key: 'editor',\n        text: Translate.string('Editor'),\n        options: _.uniqBy(\n          contribsWithEditables.map(c => c.editable.editor).filter(x => x),\n          'id'\n        ).map(({identifier, fullName}) => ({\n          value: identifier,\n          text: fullName,\n        })),\n        isMatch: (contrib, selectedOptions) =>\n          contrib.c.editable &&\n          contrib.c.editable.editor &&\n          selectedOptions.includes(contrib.c.editable.editor.identifier),\n      },\n      {\n        key: 'code',\n        text: Translate.string('Program code'),\n        options: _.uniq(contribList.map(c => c.code).filter(x => x)).map(code => ({\n          value: code,\n          text: code,\n        })),\n        isMatch: (contrib, selectedOptions) => selectedOptions.includes(contrib.c.code),\n      },\n      {\n        key: 'keywords',\n        text: Translate.string('Keywords'),\n        options: _.uniq(_.flatten(contribList.map(c => c.keywords))).map(keyword => ({\n          value: keyword,\n          text: keyword,\n        })),\n        isMatch: (contrib, selectedOptions) =>\n          contrib.c.keywords.some(k => selectedOptions.includes(k)),\n      },\n      {\n        key: 'tags',\n        text: Translate.string('Tags'),\n        options: _.uniqBy(\n          contribsWithEditables\n            .map(c => c.editable.tags)\n            .filter(x => x.length)\n            .reduce((pre, cur) => pre.concat(cur), []),\n          'code'\n        ).map(t => ({value: t.code, text: t.code, color: t.color})),\n        isMatch: (contrib, selectedOptions) =>\n          contrib.c.editable?.tags &&\n          selectedOptions.some(tag => contrib.c.editable.tags.map(t => t.code).includes(tag)),\n      },\n    ],\n    [contribList, contribsWithEditables]\n  );\n\n  const title = {\n    [EditableType.paper]: Translate.string('List of papers'),\n    [EditableType.slides]: Translate.string('List of slides'),\n    [EditableType.poster]: Translate.string('List of posters'),\n  }[editableType];\n\n  const skippedEditablesWarning = {\n    [EditableType.paper]: PluralTranslate.string(\n      '{count} paper was skipped because of its current status.',\n      '{count} papers were skipped because of their current status.',\n      skippedEditables,\n      {count: skippedEditables}\n    ),\n    [EditableType.slides]: PluralTranslate.string(\n      '{count} slide was skipped because of its current status.',\n      '{count} slides were skipped because of their current status.',\n      skippedEditables,\n      {count: skippedEditables}\n    ),\n    [EditableType.poster]: PluralTranslate.string(\n      '{count} poster was skipped because of its current status.',\n      '{count} posters were skipped because of their current status.',\n      skippedEditables,\n      {count: skippedEditables}\n    ),\n  }[editableType];\n\n  const columnHeaders = [\n    ['friendlyId', Translate.string('ID'), 60],\n    ...(codePresent ? [['code', Translate.string('Code'), 110]] : []),\n    ['title', Translate.string('Title'), 600],\n    ['revision', Translate.string('Rev.'), 80],\n    ['status', Translate.string('Status'), 200],\n    ['editor', Translate.string('Editor'), 400],\n  ];\n\n  const programCodeKey = contribution => contribution.code;\n  const titleKey = contribution => contribution.title.toLowerCase();\n  const revisionKey = contribution => contribution.editable && contribution.editable.revisionCount;\n  const statusKey = contribution =>\n    contribution.editable && contribution.editable.state.toLowerCase();\n  const editorKey = contribution =>\n    contribution.editable &&\n    contribution.editable.editor &&\n    contribution.editable.editor.fullName.toLowerCase();\n\n  const sortKeys = {\n    code: programCodeKey,\n    title: titleKey,\n    revision: revisionKey,\n    status: statusKey,\n    editor: editorKey,\n  };\n\n  const sortFuncs = {\n    code: (arr, key) => [...arr].sort((a, b) => natSortCompare(key(a), key(b))),\n  };\n\n  // eslint-disable-next-line no-shadow\n  const _sortList = (sortBy, sortDirection, filteredResults) => {\n    const sortKey = sortKeys[sortBy] || (x => x[sortBy]);\n    const sortFn = sortFuncs[sortBy] || ((arr, key) => _.sortBy(arr, key));\n    const newList = sortFn(contribList, sortKey);\n    if (sortDirection === SortDirection.DESC) {\n      newList.reverse();\n    }\n    const matching = newList.filter(e => filteredResults.has(e.id));\n    const notMatching = newList.filter(e => !filteredResults.has(e.id));\n    return [...matching, ...notMatching];\n  };\n\n  // eslint-disable-next-line no-shadow\n  const _sort = ({sortBy, sortDirection}) => {\n    setSortBy(sortBy);\n    setSortDirection(sortDirection);\n    setSortedList(_sortList(sortBy, sortDirection, filteredSet));\n  };\n\n  const patchList = updatedEditables => {\n    updatedEditables = new Map(updatedEditables.map(x => [x.id, x]));\n    const _mapper = contrib => {\n      if (!contrib.editable || !updatedEditables.has(contrib.editable.id)) {\n        return contrib;\n      }\n      return {...contrib, editable: updatedEditables.get(contrib.editable.id)};\n    };\n    setContribList(list => list.map(_mapper));\n    setSortedList(list => list.map(_mapper));\n  };\n\n  const filterableContribs = useMemo(\n    () =>\n      contribList.map(c => ({\n        id: c.id,\n        searchableId: c.friendlyId,\n        searchableFields:\n          c.editable && c.editable.editor\n            ? [c.title, c.code, c.editable.editor.fullName]\n            : [c.title, c.code],\n        c,\n      })),\n    [contribList]\n  );\n\n  const onChangeList = filteredResults => {\n    setFilteredSet(filteredResults);\n    setSortedList(_sortList(sortBy, sortDirection, filteredResults));\n    setChecked(\n      contribsWithEditables\n        .filter(row => checkedSet.has(row.editable.id) && filteredResults.has(row.id))\n        .map(row => row.editable.id)\n    );\n  };\n\n  const renderCode = code => code || Translate.string('n/a');\n  const renderEditor = editable => {\n    return editable && editable.editor ? (\n      <div>\n        <Icon name=\"user outline\" />\n        {editable.editor.fullName}\n      </div>\n    ) : (\n      <div />\n    );\n  };\n  // eslint-disable-next-line no-shadow\n  const renderTitle = (title, index) => {\n    if (sortedList[index].editable) {\n      return management ? (\n        <a href={sortedList[index].editable.timelineURL}>{title}</a>\n      ) : (\n        <Link to={sortedList[index].editable.timelineURL}>{title}</Link>\n      );\n    }\n    return <div>{title}</div>;\n  };\n  const renderStatus = (editable, rowIndex) => {\n    return (\n      <StateIndicator\n        state={editable ? editable.state : 'not_submitted'}\n        circular\n        label\n        monochrome={!filteredSet.has(sortedList[rowIndex].id)}\n      />\n    );\n  };\n  const renderFuncs = {\n    title: renderTitle,\n    code: renderCode,\n    revision: editable => (editable ? editable.revisionCount : ''),\n    status: renderStatus,\n    editor: renderEditor,\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const renderCell = ({dataKey, rowIndex}) => {\n    let data = sortedList[rowIndex][dataKey];\n    if (['editor', 'revision', 'status'].includes(dataKey)) {\n      data = sortedList[rowIndex].editable;\n    }\n    const fn = renderFuncs[dataKey] || (x => x);\n    return (\n      <TooltipIfTruncated>\n        <div\n          styleName=\"rowcolumn-tooltip\"\n          role=\"gridcell\"\n          style={dataKey === 'title' ? {display: 'block'} : {}}\n        >\n          {fn(data, rowIndex)}\n        </div>\n      </TooltipIfTruncated>\n    );\n  };\n\n  const toggleSelectAll = dataChecked => {\n    if (dataChecked) {\n      setChecked(\n        contribsWithEditables.filter(row => filteredSet.has(row.id)).map(row => row.editable.id)\n      );\n    } else {\n      setChecked([]);\n    }\n  };\n\n  const toggleSelectRow = dataIndex => {\n    const newId = sortedList[dataIndex].editable.id;\n    if (checkedSet.has(newId)) {\n      setChecked(old => old.filter(id => id !== newId));\n    } else {\n      setChecked(old => [...old, newId]);\n    }\n  };\n\n  const checkedEditablesRequest = async (urlFunc, data = {}, urlData = {}) => {\n    let response;\n    try {\n      response = await indicoAxios.post(\n        urlFunc({event_id: eventId, type: editableType, ...urlData}),\n        {\n          editables: checked,\n          ...data,\n        }\n      );\n      setActiveRequest(null);\n    } catch (error) {\n      if (error.response?.status === 409 && error.response.data.editor_conflict) {\n        setAssignmentConflict([urlFunc, {...data, force: true}]);\n        return null;\n      }\n      handleAxiosError(error);\n      setActiveRequest(null);\n      return null;\n    }\n\n    return camelizeKeys(response.data);\n  };\n\n  const downloadAllFiles = async () => {\n    setActiveRequest('download');\n    const rv = await checkedEditablesRequest(editablesArchiveURL, {}, {archive_type: 'archive'});\n    if (rv) {\n      location.href = rv.downloadURL;\n    }\n  };\n\n  const exportJSON = async () => {\n    setActiveRequest('json');\n    const rv = await checkedEditablesRequest(editablesArchiveURL, {}, {archive_type: 'json'});\n    if (rv) {\n      location.href = rv.downloadURL;\n    }\n  };\n\n  const updateCheckedEditablesRequest = async (type, urlFunc, data = {}) => {\n    setActiveRequest(type);\n    const rv = await checkedEditablesRequest(urlFunc, data);\n    if (rv) {\n      patchList(rv);\n    }\n    return rv;\n  };\n\n  const checkedEditablesAssignmentRequest = async (type, urlFunc, data = {}) =>\n    updateCheckedEditablesRequest(type, urlFunc, {\n      ...data,\n      editor_assignments: editorAssignments,\n    });\n\n  const assignEditor = editor => {\n    checkedEditablesAssignmentRequest('assign', assignEditorURL, {editor});\n  };\n\n  const assignSelfEditor = () => {\n    checkedEditablesAssignmentRequest('assign-self', assignSelfEditorURL);\n  };\n\n  const unassignEditor = async () => {\n    checkedEditablesAssignmentRequest('unassign', unassignEditorURL);\n  };\n\n  const createComment = data => {\n    setActiveRequest('comment');\n    checkedEditablesRequest(createCommentURL, data);\n  };\n\n  const applyJudgment = async action => {\n    const rv = await updateCheckedEditablesRequest('judgment', applyJudgmentURL, {action});\n    if (rv) {\n      setSkippedEditables(checked.length - rv.length);\n    }\n  };\n\n  // make the page full-width\n  useEffect(() => {\n    document.body.classList.add('full-width-content-wrapper');\n    return () => {\n      document.body.classList.remove('full-width-content-wrapper');\n    };\n  }, []);\n\n  return (\n    <>\n      {management && <ManagementPageSubTitle title={title} />}\n      {management && (\n        <ManagementPageBackButton url={editableTypeURL({event_id: eventId, type: editableType})} />\n      )}\n      <div styleName=\"editable-topbar\">\n        <div styleName=\"editable-actions\">\n          {canAssignSelf && (\n            <Button\n              content={GetNextEditableTitles[editableType]}\n              onClick={() => setSelfAssignModalVisible(true)}\n            />\n          )}\n          {selfAssignModalVisible && (\n            <NextEditable\n              eventId={eventId}\n              editableType={editableType}\n              onClose={() => setSelfAssignModalVisible(false)}\n              management={management}\n            />\n          )}\n          {management && (\n            <>\n              <Button.Group>\n                <Dropdown\n                  disabled={!hasCheckedContribs || !editors.length || !!activeRequest}\n                  options={editorOptions}\n                  scrolling\n                  icon={null}\n                  value={null}\n                  selectOnBlur={false}\n                  selectOnNavigation={false}\n                  onChange={(evt, {value}) => assignEditor(value)}\n                  trigger={\n                    <Button icon loading={activeRequest === 'assign'}>\n                      <Translate>Assign</Translate>\n                      <Icon name=\"caret down\" />\n                    </Button>\n                  }\n                />\n                <Button\n                  disabled={!hasCheckedContribs || !!activeRequest}\n                  color=\"blue\"\n                  content={Translate.string('Assign to myself')}\n                  onClick={assignSelfEditor}\n                  loading={activeRequest === 'assign-self'}\n                />\n                <Button\n                  disabled={\n                    !checkedContribsWithEditables.some(x => x.editable.editor) || !!activeRequest\n                  }\n                  content={Translate.string('Unassign')}\n                  onClick={unassignEditor}\n                  loading={activeRequest === 'unassign'}\n                />\n              </Button.Group>\n              <CommentButton\n                disabled={!hasCheckedContribs || !!activeRequest}\n                onSubmit={createComment}\n                loading={activeRequest === 'comment'}\n              />\n              <Dropdown\n                disabled={!hasCheckedContribs || !!activeRequest}\n                options={judgmentOptions}\n                scrolling\n                icon={null}\n                value={null}\n                selectOnBlur={false}\n                selectOnNavigation={false}\n                onChange={(evt, {value}) => applyJudgment(value)}\n                trigger={\n                  <Button icon loading={activeRequest === 'judgment'}>\n                    <Translate>Judge</Translate>\n                    <Icon name=\"caret down\" />\n                  </Button>\n                }\n              />\n              <Button.Group>\n                <Button\n                  disabled={!hasCheckedContribs || !!activeRequest}\n                  content={Translate.string('Download all files')}\n                  onClick={downloadAllFiles}\n                  loading={activeRequest === 'download'}\n                />\n                <Button\n                  disabled={!hasCheckedContribs || !!activeRequest}\n                  content={Translate.string('Export as JSON')}\n                  onClick={exportJSON}\n                  loading={activeRequest === 'json'}\n                />\n              </Button.Group>\n            </>\n          )}\n        </div>\n        <ListFilter\n          name={`${editableType}-list-filter-${eventId}`}\n          list={filterableContribs || []}\n          filterOptions={filterOptions}\n          searchableId={e => e.searchableId}\n          searchableFields={e => e.searchableFields}\n          onChangeList={onChangeList}\n        />\n      </div>\n      {!!skippedEditables && (\n        <Message warning>\n          <Icon name=\"warning sign\" />\n          {skippedEditablesWarning}\n        </Message>\n      )}\n      {sortedList.length ? (\n        <div styleName=\"editable-list\">\n          <WindowScroller>\n            {({height, isScrolling, onChildScroll, scrollTop}) => (\n              <Table\n                autoHeight\n                width={1000}\n                styleName=\"table\"\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                headerHeight={30}\n                rowHeight={40}\n                sort={_sort}\n                sortBy={sortBy}\n                sortDirection={sortDirection}\n                rowCount={sortedList.length}\n                scrollTop={scrollTop}\n                rowGetter={({index}) => sortedList[index]}\n                rowStyle={({index}) =>\n                  index !== -1 && !filteredSet.has(sortedList[index].id)\n                    ? {backgroundColor: Palette.pastelGray, opacity: '60%'}\n                    : {}\n                }\n              >\n                {management && (\n                  <Column\n                    disableSort\n                    dataKey=\"checkbox\"\n                    width={30}\n                    headerRenderer={() => (\n                      <Checkbox\n                        indeterminate={\n                          checked.length > 0 &&\n                          checked.length < [...filteredSet].filter(x => contribIdSet.has(x)).length\n                        }\n                        checked={\n                          checked.length > 0 &&\n                          checked.length ===\n                            [...filteredSet].filter(x => contribIdSet.has(x)).length\n                        }\n                        onChange={(e, data) => toggleSelectAll(data.checked)}\n                        disabled={!!activeRequest}\n                      />\n                    )}\n                    cellRenderer={({rowIndex}) =>\n                      sortedList[rowIndex].editable && (\n                        <Checkbox\n                          disabled={!!activeRequest || !filteredSet.has(sortedList[rowIndex].id)}\n                          checked={\n                            sortedList[rowIndex].editable\n                              ? checkedSet.has(sortedList[rowIndex].editable.id)\n                              : false\n                          }\n                          onChange={(e, data) => toggleSelectRow(data.index)}\n                          index={rowIndex}\n                        />\n                      )\n                    }\n                  />\n                )}\n                {columnHeaders.map(([key, label, width, extraProps]) => (\n                  <Column\n                    key={key}\n                    dataKey={key}\n                    label={label}\n                    width={width}\n                    {...extraProps}\n                    cellRenderer={renderCell}\n                  />\n                ))}\n              </Table>\n            )}\n          </WindowScroller>\n        </div>\n      ) : (\n        <Message info>\n          <Translate>There are no editables yet.</Translate>\n        </Message>\n      )}\n      <Confirm\n        open={!!assignmentConflict}\n        header={Translate.string('Assignment conflict')}\n        content={Translate.string(\n          'Some editor assignments for the current selection have been changed externally. Are you sure you want to proceed?'\n        )}\n        confirmButton={<Button content={Translate.string('Force assignments')} negative />}\n        cancelButton={Translate.string('Cancel')}\n        onCancel={() => {\n          setActiveRequest(null);\n          setAssignmentConflict(null);\n        }}\n        onConfirm={() => {\n          updateCheckedEditablesRequest(activeRequest, ...assignmentConflict);\n          setAssignmentConflict(null);\n        }}\n      />\n    </>\n  );\n}\n\nEditableListDisplay.propTypes = {\n  initialContribList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      friendlyId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      code: PropTypes.string.isRequired,\n      editable: PropTypes.shape({\n        id: PropTypes.number,\n        editor: PropTypes.shape(userPropTypes),\n        state: PropTypes.string,\n        type: PropTypes.oneOf(Object.values(EditableType)),\n        timelineURL: PropTypes.string,\n      }),\n      keywords: PropTypes.arrayOf(PropTypes.string).isRequired,\n    })\n  ).isRequired,\n  editors: PropTypes.arrayOf(PropTypes.shape(userPropTypes)).isRequired,\n  codePresent: PropTypes.bool.isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n  eventId: PropTypes.number.isRequired,\n  management: PropTypes.bool.isRequired,\n  canAssignSelf: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editable-list\":\"events-editing-client-js-management-___EditableTypeList-module__editable-list___ypQO7\",\"type-switch\":\"events-editing-client-js-management-___EditableTypeList-module__type-switch___3h83P\",\"switch-toolbar\":\"events-editing-client-js-management-___EditableTypeList-module__switch-toolbar___w3tO7\",\"disabled\":\"events-editing-client-js-management-___EditableTypeList-module__disabled___b9Cu3\",\"header\":\"events-editing-client-js-management-___EditableTypeList-module__header___rFrl5\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport enabledEditableTypesURL from 'indico-url:event_editing.api_enabled_editable_types';\nimport manageEditableTypeURL from 'indico-url:event_editing.manage_editable_type';\nimport manageEditableTypeListURL from 'indico-url:event_editing.manage_editable_type_list';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {Link} from 'react-router-dom';\nimport {Button, Checkbox, Form, Loader, Popup} from 'semantic-ui-react';\n\nimport {FinalCheckbox, FinalSubmitButton, handleSubmitError} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\n\nimport {editableTypeOrder, EditableTypeTitles} from '../models';\n\nimport './EditableTypeList.module.scss';\n\nexport default function EditableTypeList({eventId}) {\n  const [editMode, setEditMode] = useState(false);\n  const {\n    data: enabledEditableTypes,\n    loading: isLoadingEnabledEditableTypes,\n    reFetch,\n  } = useIndicoAxios(enabledEditableTypesURL({event_id: eventId}), {camelize: true});\n\n  if (isLoadingEnabledEditableTypes) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!enabledEditableTypes) {\n    return null;\n  }\n\n  const handleSubmit = async formData => {\n    const url = enabledEditableTypesURL({event_id: eventId});\n    const enabledTypes = Object.keys(formData).filter(name => formData[name]);\n    try {\n      await indicoAxios.post(url, {editable_types: enabledTypes});\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n    reFetch();\n    setEditMode(false);\n  };\n\n  const renderEditMode = () => {\n    return (\n      <FinalForm\n        onSubmit={handleSubmit}\n        subscription={{submitting: true}}\n        initialValues={Object.assign(\n          ...editableTypeOrder.map(type => ({[type]: enabledEditableTypes.includes(type)}))\n        )}\n      >\n        {fprops => (\n          <>\n            <Form id=\"editable-type-form\" onSubmit={fprops.handleSubmit}>\n              <div className=\"action-box\">\n                {editableTypeOrder.map(type => (\n                  <div key={type} className=\"section\">\n                    <span className=\"icon icon-file\" />\n                    <div className=\"text\">\n                      <div className=\"label\">{EditableTypeTitles[type]}</div>\n                    </div>\n                    <div className=\"toolbar\" styleName=\"switch-toolbar\">\n                      <FinalCheckbox name={type} toggle label=\"\" styleName=\"type-switch\" />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Form>\n            <div className=\"toolbar f-j-end\">\n              <Button onClick={() => setEditMode(false)} disabled={fprops.submitting}>\n                <Translate>Cancel</Translate>\n              </Button>\n              <FinalSubmitButton form=\"editable-type-form\" label={Translate.string('Save')} />\n            </div>\n          </>\n        )}\n      </FinalForm>\n    );\n  };\n\n  const renderListMode = () => {\n    return enabledEditableTypes.length === 0 ? (\n      <span styleName=\"disabled\">\n        <Translate>\n          No editable types enabled yet. Click the toggle to enable any editable types.\n        </Translate>\n      </span>\n    ) : (\n      <div className=\"action-box\">\n        {enabledEditableTypes.map(type => (\n          <div key={type} className=\"section\">\n            <span className=\"icon icon-file\" />\n            <div className=\"text\">\n              <div className=\"label\">{EditableTypeTitles[type]}</div>\n            </div>\n            <div className=\"toolbar\">\n              <Link\n                className=\"i-button icon-list\"\n                to={manageEditableTypeListURL({event_id: eventId, type})}\n              >\n                <Translate>List</Translate>\n              </Link>\n              <Link\n                className=\"i-button icon-settings\"\n                to={manageEditableTypeURL({event_id: eventId, type})}\n              >\n                <Translate>Manage</Translate>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div styleName=\"editable-list\">\n      <div styleName=\"header\">\n        <h3>\n          <Translate>List of editable types</Translate>\n        </h3>\n        <Popup\n          content={Translate.string('Toggle editable types')}\n          trigger={<Checkbox checked={editMode} toggle onClick={() => setEditMode(!editMode)} />}\n        />\n      </div>\n      {editMode ? renderEditMode() : renderListMode()}\n    </div>\n  );\n}\n\nEditableTypeList.propTypes = {\n  eventId: PropTypes.number.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport checkServiceURL from 'indico-url:event_editing.api_check_service_url';\nimport connectServiceURL from 'indico-url:event_editing.api_service_connect';\nimport disconnectServiceURL from 'indico-url:event_editing.api_service_disconnect';\nimport checkServiceStatusURL from 'indico-url:event_editing.api_service_status';\n\nimport {FORM_ERROR} from 'final-form';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {Confirm, Modal, Button, Form, Loader, Message} from 'semantic-ui-react';\n\nimport {\n  FinalSubmitButton,\n  FinalInput,\n  handleSubmitError,\n  validators as v,\n} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Translate, Param} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\nimport {makeAsyncDebounce} from 'indico/utils/debounce';\n\nimport Section from './Section';\n\nconst debounce = makeAsyncDebounce(250);\n\nexport default function ManageService({eventId}) {\n  const [serviceURLInfo, setServiceURLInfo] = useState(false);\n  const [connectOpen, setConnectOpen] = useState(false);\n  const [disconnectOpen, setDisconnectOpen] = useState(false);\n  const {data, error, loading, reFetch} = useIndicoAxios(\n    checkServiceStatusURL({event_id: eventId}),\n    {camelize: true}\n  );\n\n  const checkPending = loading || (data === null && error === null);\n  let label = Translate.string('Custom editing workflow');\n  let description;\n  let showConnect = false;\n  let showDisconnect = false;\n  let forceDisconnect = false;\n\n  if (checkPending) {\n    description = Translate.string('Checking custom editing workflow status');\n  } else if (error || data.error) {\n    description = Translate.string('Workflow service unavailable: {error}', {\n      error: error || data.error,\n    });\n    // allow disconnecting if the service returned an error, not if our own request failed\n    if (error === null) {\n      showDisconnect = true;\n      forceDisconnect = true;\n    }\n  } else if (!data.connected) {\n    description = Translate.string('Use a custom editing workflow provided by an external service');\n    showConnect = true;\n  } else {\n    label = (\n      <Translate>\n        Custom editing workflow: <Param name=\"name\" value={data.status.service.name} /> (\n        <Param name=\"version\" value={data.status.service.version} />)\n      </Translate>\n    );\n    description = Translate.string('Connected to a custom editing workflow service');\n    showDisconnect = data.status.canDisconnect;\n  }\n\n  if (showDisconnect) {\n    description = (\n      <>\n        {description} (\n        <a onClick={() => setDisconnectOpen(true)}>\n          <Translate>disconnect</Translate>\n        </a>\n        )\n      </>\n    );\n  }\n\n  const closeConnectModal = () => {\n    setServiceURLInfo(null);\n    setConnectOpen(false);\n  };\n\n  const connect = async ({url}) => {\n    try {\n      await indicoAxios.post(connectServiceURL({event_id: eventId}), {url});\n    } catch (err) {\n      return handleSubmitError(err);\n    }\n    closeConnectModal();\n    reFetch();\n  };\n\n  const disconnect = async () => {\n    try {\n      await indicoAxios.post(disconnectServiceURL({event_id: eventId}), {force: forceDisconnect});\n    } catch (err) {\n      handleAxiosError(err);\n      return;\n    }\n    setDisconnectOpen(false);\n    reFetch();\n  };\n\n  return (\n    <Section icon=\"puzzle\" label={label} description={description}>\n      {showConnect && (\n        <button type=\"button\" className=\"i-button icon-puzzle\" onClick={() => setConnectOpen(true)}>\n          <Translate>Connect</Translate>\n        </button>\n      )}\n      {loading && <Loader active inline />}\n      <Confirm\n        size=\"tiny\"\n        open={disconnectOpen}\n        onCancel={() => setDisconnectOpen(false)}\n        onConfirm={disconnect}\n        confirmButton={<Button content={Translate.string('Disconnect')} negative />}\n        header={Translate.string('Disconnect editing workflow service')}\n        content={\n          <Modal.Content>\n            {forceDisconnect ? (\n              <Translate>\n                Disconnecting the editing workflow service while it is unavailable may leave your\n                editing process in an inconsistent state. Do not perform this action if you plan to\n                continue using the workflow service later.{' '}\n                <Param name=\"strong\" wrapper={<strong />}>\n                  The current error with the workflow service is most likely temporary. Attempting\n                  to disconnect and reconnect will most likely not fix it.\n                </Param>\n              </Translate>\n            ) : (\n              <Translate>\n                Do you really want to disconnect from the editing workflow service? If your editing\n                process has already started (e.g. people submitted content to be edited),\n                disconnecting is most likely not a good idea and should only be done if you do not\n                plan to enable the service again for this event.\n              </Translate>\n            )}\n          </Modal.Content>\n        }\n      />\n      <Modal size=\"small\" open={connectOpen} onClose={closeConnectModal}>\n        <FinalForm onSubmit={connect} subscription={{}}>\n          {fprops => (\n            <>\n              <Modal.Header content={Translate.string('Connect to editing workflow service')} />\n              <Modal.Content>\n                <Message warning>\n                  {/* This message is not translated because it will be removed soon-ish. */}\n                  This feature is still <strong>experimental</strong>. Especially if you are not the\n                  administrator of this Indico instance be aware that even minor Indico upgrades may\n                  contain backwards-incompatible changes to the API between Indico and the service.\n                </Message>\n                <Form id=\"connect-service-form\" onSubmit={fprops.handleSubmit}>\n                  <FinalInput\n                    name=\"url\"\n                    label={Translate.string('Service URL')}\n                    description={\n                      <Translate>\n                        Provide the URL for the service implementing your custom editing workflow.\n                      </Translate>\n                    }\n                    autoFocus\n                    required\n                    validate={async value => {\n                      setServiceURLInfo(null);\n\n                      const validationError = v.required(value) || v.url(value);\n                      if (validationError) {\n                        return validationError;\n                      }\n\n                      let resp;\n                      try {\n                        // this does send a request on each keypress, but in this particular case\n                        // it's VERY likely that people paste a url, so it shouldn't be an issue\n                        resp = await debounce(() =>\n                          indicoAxios.get(checkServiceURL({event_id: eventId}), {\n                            params: {url: value},\n                          })\n                        );\n                      } catch (err) {\n                        // the url validation is not exactly the same on the client and server\n                        // side, so we have some edge cases (e.g. `http://test:`) which pass\n                        // the client-side check but not the server-side one.\n                        // in this case we do not want an error dialog to show up but rather\n                        // fail validation nicely.\n                        const submitError = handleSubmitError(err);\n                        return submitError.url || submitError[FORM_ERROR];\n                      }\n\n                      if (resp.data.error) {\n                        return resp.data.error;\n                      }\n\n                      setServiceURLInfo(resp.data.info);\n                    }}\n                  />\n                  {serviceURLInfo ? (\n                    <Message info>\n                      <Translate>\n                        Your editing workflow will be managed by{' '}\n                        <Param name=\"service\" value={serviceURLInfo.name} wrapper={<strong />} /> (\n                        <Param name=\"version\" value={serviceURLInfo.version} />\n                        ).\n                      </Translate>\n                      <br />\n                      <Translate>\n                        Please note that connecting to this service may immediately update your\n                        editing settings and create e.g. new tags and file types. Only connect if\n                        you intend to use this workflow in your event!\n                      </Translate>\n                    </Message>\n                  ) : (\n                    <Message info>\n                      <Translate>\n                        If you are a developer looking to implement a custom workflow, head over to\n                        the{' '}\n                        <Param\n                          name=\"link\"\n                          wrapper={\n                            <a\n                              href=\"https://github.com/indico/openreferee/\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              style={{fontWeight: 'bold'}}\n                            />\n                          }\n                        >\n                          reference implementation of the OpenReferee spec on GitHub\n                        </Param>\n                        .\n                      </Translate>\n                    </Message>\n                  )}\n                </Form>\n              </Modal.Content>\n              <Modal.Actions style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <FinalSubmitButton\n                  form=\"connect-service-form\"\n                  label={Translate.string('Connect')}\n                />\n                <Button onClick={closeConnectModal}>\n                  <Translate>Cancel</Translate>\n                </Button>\n              </Modal.Actions>\n            </>\n          )}\n        </FinalForm>\n      </Modal>\n    </Section>\n  );\n}\n\nManageService.propTypes = {\n  eventId: PropTypes.number.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport manageTagsURL from 'indico-url:event_editing.manage_tags';\n\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport EditableTypeList from './EditableTypeList';\nimport ManageService from './ManageService';\nimport Section from './Section';\n\nexport default function EditingManagementDashboard() {\n  const eventId = useNumericParam('event_id');\n  return (\n    <>\n      <div className=\"action-box\">\n        <Section\n          icon=\"tag\"\n          label={Translate.string('Tags')}\n          description={Translate.string('Configure the tags that can be assigned to revisions')}\n        >\n          <Link to={manageTagsURL({event_id: eventId})} className=\"i-button icon-settings\">\n            <Translate>Configure</Translate>\n          </Link>\n        </Section>\n        {Indico.ExperimentalEditingService && <ManageService eventId={eventId} />}\n      </div>\n      <EditableTypeList eventId={eventId} />\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Label} from 'semantic-ui-react';\n\nimport {FinalDropdown, FinalInput} from 'indico/react/forms';\nimport {FinalModalForm} from 'indico/react/forms/final-form';\nimport {Translate} from 'indico/react/i18n';\nimport {SUIPalette} from 'indico/utils/palette';\n\nconst renderColorLabel = colorName => (\n  <div style={{display: 'flex', alignItems: 'center'}}>\n    <Label color={colorName} /> <span style={{marginLeft: 10}}>{SUIPalette[colorName]}</span>\n  </div>\n);\n\nconst availableColors = Object.keys(SUIPalette).map(colorName => ({\n  text: renderColorLabel(colorName),\n  value: colorName,\n}));\n\nexport default function TagModal({header, onSubmit, tag, onClose}) {\n  const handleSubmit = async (formData, form) => {\n    const error = await onSubmit(formData, form);\n    if (error) {\n      return error;\n    }\n    onClose();\n  };\n\n  return (\n    <FinalModalForm\n      id=\"tag-form\"\n      onSubmit={handleSubmit}\n      onClose={onClose}\n      initialValues={tag}\n      header={header}\n    >\n      <FinalInput name=\"code\" label={Translate.string('Code')} required autoFocus />\n      <FinalInput name=\"title\" label={Translate.string('Title')} required />\n      <FinalDropdown\n        name=\"color\"\n        label={Translate.string('Color')}\n        options={availableColors}\n        selection\n        required\n      />\n    </FinalModalForm>\n  );\n}\n\nTagModal.propTypes = {\n  header: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  tag: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nTagModal.defaultProps = {\n  tag: {\n    code: null,\n    title: null,\n    color: null,\n  },\n  onClose: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport createTagURL from 'indico-url:event_editing.api_create_tag';\nimport editTagURL from 'indico-url:event_editing.api_edit_tag';\nimport tagsURL from 'indico-url:event_editing.api_tags';\n\nimport PropTypes from 'prop-types';\nimport React, {useReducer} from 'react';\nimport {Button, Icon, Label, Loader, Message, Segment, Popup} from 'semantic-ui-react';\n\nimport {RequestConfirmDelete} from 'indico/react/components';\nimport {getChangedValues, handleSubmitError} from 'indico/react/forms';\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nimport TagModal from './TagModal';\n\nimport './TagManager.module.scss';\n\nconst initialState = {\n  tag: null,\n  operation: null,\n};\n\nfunction tagsReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TAG':\n      return {operation: 'add', tag: null};\n    case 'EDIT_TAG':\n      return {operation: 'edit', tag: action.tag};\n    case 'DELETE_TAG':\n      return {operation: 'delete', tag: action.tag};\n    case 'CLEAR':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default function TagManager({eventId}) {\n  const [state, dispatch] = useReducer(tagsReducer, initialState);\n  const {data, loading: isLoadingTags, reFetch, lastData} = useIndicoAxios(\n    tagsURL({event_id: eventId}),\n    {camelize: true}\n  );\n\n  const createTag = async formData => {\n    try {\n      await indicoAxios.post(createTagURL({event_id: eventId}), formData);\n      reFetch();\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n  };\n\n  const editTag = async (tagId, tagData) => {\n    const url = editTagURL({event_id: eventId, tag_id: tagId});\n\n    try {\n      await indicoAxios.patch(url, tagData);\n      reFetch();\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n  };\n\n  const deleteTag = async tagId => {\n    const url = editTagURL({event_id: eventId, tag_id: tagId});\n\n    try {\n      await indicoAxios.delete(url);\n      reFetch();\n    } catch (e) {\n      handleAxiosError(e);\n      return true;\n    }\n  };\n\n  const tags = data || lastData;\n  if (isLoadingTags && !lastData) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!tags) {\n    return null;\n  }\n\n  const {operation, tag: currentTag} = state;\n  return (\n    <div styleName=\"tags-container\">\n      {tags.map(tag => (\n        <Segment key={tag.id} styleName=\"tag-segment\">\n          <Label color={tag.color}>{tag.verboseTitle}</Label>\n          <div styleName=\"tag-actions\">\n            <Popup\n              on=\"hover\"\n              position=\"right center\"\n              disabled={!tag.system}\n              trigger={\n                <span>\n                  <Icon\n                    name=\"pencil\"\n                    color=\"grey\"\n                    size=\"small\"\n                    title={Translate.string('Edit tag')}\n                    onClick={() => dispatch({type: 'EDIT_TAG', tag})}\n                    disabled={tag.system}\n                    circular\n                    inverted\n                  />{' '}\n                  <Icon\n                    name=\"remove\"\n                    color=\"red\"\n                    size=\"small\"\n                    title={Translate.string('Delete tag')}\n                    onClick={() => dispatch({type: 'DELETE_TAG', tag})}\n                    disabled={tag.system}\n                    circular\n                    inverted\n                  />\n                </span>\n              }\n            >\n              <Translate>\n                System tags are managed by the editing workflow service and cannot be modified.\n              </Translate>\n            </Popup>\n          </div>\n        </Segment>\n      ))}\n      {tags.length === 0 && (\n        <Message info>\n          <Translate>There are no tags defined for this event</Translate>\n        </Message>\n      )}\n      <Button\n        onClick={() => dispatch({type: 'ADD_TAG'})}\n        disabled={!!operation}\n        floated=\"right\"\n        icon\n        primary\n      >\n        <Icon name=\"plus\" /> <Translate>Add new tag</Translate>\n      </Button>\n      {['add', 'edit'].includes(operation) && (\n        <TagModal\n          header={\n            operation === 'edit'\n              ? Translate.string('Edit tag')\n              : Translate.string('Create a new tag')\n          }\n          onSubmit={async (formData, form) => {\n            if (operation === 'edit') {\n              return await editTag(currentTag.id, getChangedValues(formData, form));\n            } else {\n              return await createTag(formData);\n            }\n          }}\n          tag={currentTag}\n          onClose={() => dispatch({type: 'CLEAR'})}\n        />\n      )}\n      <RequestConfirmDelete\n        onClose={() => dispatch({type: 'CLEAR'})}\n        requestFunc={() => deleteTag(currentTag.id)}\n        open={operation === 'delete'}\n      >\n        {currentTag && (\n          <Translate>\n            Are you sure you want to delete the tag{' '}\n            <Param name=\"tag\" value={currentTag.verboseTitle} wrapper={<strong />} />?\n          </Translate>\n        )}\n      </RequestConfirmDelete>\n    </div>\n  );\n}\n\nTagManager.propTypes = {\n  eventId: PropTypes.number.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport dashboardURL from 'indico-url:event_editing.dashboard';\n\nimport React from 'react';\n\nimport {ManagementPageBackButton, ManagementPageSubTitle} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport TagManager from './TagManager';\n\nexport default function EditingTagManagement() {\n  const eventId = useNumericParam('event_id');\n  return (\n    <>\n      <ManagementPageBackButton url={dashboardURL({event_id: eventId})} />\n      <ManagementPageSubTitle title={Translate.string('Tags')} />\n      <TagManager eventId={eventId} />\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport dashboardURL from 'indico-url:event_editing.dashboard';\nimport editableTypeURL from 'indico-url:event_editing.manage_editable_type';\nimport editableListURL from 'indico-url:event_editing.manage_editable_type_list';\nimport manageFileTypesURL from 'indico-url:event_editing.manage_file_types';\nimport manageReviewConditionsURL from 'indico-url:event_editing.manage_review_conditions';\nimport manageTagsURL from 'indico-url:event_editing.manage_tags';\n\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport {routerPathFromFlask} from 'indico/react/util/routing';\n\nimport {\n  EditableTypeDashboard,\n  FileTypeManagement,\n  ReviewConditionsManagement,\n  EditableList,\n} from './editable_type';\nimport EditingManagementDashboard from './EditingManagementDashboard';\nimport EditingTagManagement from './tags';\n\nexport default function EditingManagement() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path={routerPathFromFlask(dashboardURL, ['event_id'])}\n          component={EditingManagementDashboard}\n        />\n        <Route\n          exact\n          path={routerPathFromFlask(manageTagsURL, ['event_id'])}\n          component={EditingTagManagement}\n        />\n        <Route\n          exact\n          path={routerPathFromFlask(editableTypeURL, ['event_id', 'type'])}\n          component={EditableTypeDashboard}\n        />\n        <Route\n          exact\n          path={routerPathFromFlask(manageFileTypesURL, ['event_id', 'type'])}\n          component={FileTypeManagement}\n        />\n        <Route\n          exact\n          path={routerPathFromFlask(manageReviewConditionsURL, ['event_id', 'type'])}\n          component={ReviewConditionsManagement}\n        />\n        <Route\n          exact\n          path={routerPathFromFlask(editableListURL, ['event_id', 'type'])}\n          component={EditableList}\n        />\n      </Switch>\n    </Router>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditingManagement from './EditingManagement';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const editingManagementContainer = document.querySelector('#editing-management');\n  if (!editingManagementContainer) {\n    return;\n  }\n  ReactDOM.render(<EditingManagement />, editingManagementContainer);\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"menu-bar\":\"events-editing-client-js-editing-page_layout-___MenuBar-module__menu-bar___F7zKi\",\"header\":\"events-editing-client-js-editing-page_layout-___MenuBar-module__header___1UePu\",\"capitalized\":\"events-editing-client-js-editing-page_layout-___MenuBar-module__capitalized___3SkJ9\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport contribDisplayURL from 'indico-url:contributions.display_contribution';\nimport editableTypeListURL from 'indico-url:event_editing.editable_type_list';\nimport manageEditableTypeURL from 'indico-url:event_editing.manage_editable_type';\nimport displayURL from 'indico-url:events.display';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Header, Icon, Menu} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\nimport Palette from 'indico/utils/palette';\n\nimport {EditableType, EditableEditingTitles} from '../../models';\n\nimport './MenuBar.module.scss';\n\nfunction EditableListMenu({eventId, editableType}) {\n  if (location.pathname === editableTypeListURL({event_id: eventId, type: editableType})) {\n    return (\n      <Menu vertical>\n        <Menu.Item active>\n          <Translate>Editable list</Translate>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n  return (\n    <Menu vertical>\n      <Menu.Item as={Link} to={editableTypeListURL({event_id: eventId, type: editableType})}>\n        <span style={{color: Palette.blue}}>\n          <Translate>Editable list</Translate>\n        </span>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nEditableListMenu.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n};\n\nexport default function MenuBar({eventId, menuData, editableType, contribId}) {\n  const displayViewURL =\n    contribId === null\n      ? displayURL({event_id: eventId})\n      : contribDisplayURL({event_id: eventId, contrib_id: contribId});\n  const managementViewURL = manageEditableTypeURL({event_id: eventId, type: editableType});\n  const {items: menuItems, showManagementLink, showEditableList} = menuData;\n\n  return (\n    <div styleName=\"menu-bar\">\n      <Header as=\"h2\" styleName=\"header\">\n        {EditableEditingTitles[editableType]}\n      </Header>\n      {showEditableList[editableType] && (\n        <EditableListMenu eventId={eventId} editableType={editableType} />\n      )}\n      {!!menuItems.length && (\n        <Menu vertical>\n          <Menu.Item header>\n            <span styleName=\"capitalized\" style={{color: Palette.black}}>\n              <Translate>other modules</Translate>\n            </span>\n          </Menu.Item>\n          {menuItems.map(item => (\n            <Menu.Item key={item.name} name={item.name} as=\"a\" href={item.url}>\n              <span style={{color: Palette.blue}}>\n                {item.icon && <Icon name={item.icon.replace('icon-', '')} />}\n                {item.title}\n              </span>\n            </Menu.Item>\n          ))}\n        </Menu>\n      )}\n      <Menu vertical>\n        <Menu.Item header>\n          <span styleName=\"capitalized\" style={{color: Palette.black}}>\n            <Translate>other views</Translate>\n          </span>\n        </Menu.Item>\n        <Menu.Item name=\"display\" as=\"a\" href={displayViewURL}>\n          <span style={{color: Palette.blue}}>\n            <Icon name=\"tv\" /> <Translate>Display</Translate>\n          </span>\n        </Menu.Item>\n        {showManagementLink && (\n          <Menu.Item name=\"management\" as=\"a\" href={managementViewURL}>\n            <span style={{color: Palette.blue}}>\n              <Icon name=\"pencil\" /> <Translate>Management</Translate>\n            </span>\n          </Menu.Item>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nconst menuEntryPropTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\n\nMenuBar.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  contribId: PropTypes.number,\n  menuData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(menuEntryPropTypes)).isRequired,\n    showManagementLink: PropTypes.bool.isRequired,\n    showEditableList: PropTypes.shape({\n      paper: PropTypes.bool.isRequired,\n      slides: PropTypes.bool.isRequired,\n      poster: PropTypes.bool.isRequired,\n    }).isRequired,\n  }).isRequired,\n  editableType: PropTypes.oneOf(Object.values(EditableType)).isRequired,\n};\n\nMenuBar.defaultProps = {\n  contribId: null,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editing-view\":\"events-editing-client-js-editing-page_layout-___EditingView-module__editing-view___hznyV\",\"contents\":\"events-editing-client-js-editing-page_layout-___EditingView-module__contents___Nqnqb\",\"timeline\":\"events-editing-client-js-editing-page_layout-___EditingView-module__timeline___mtBpq\",\"header\":\"events-editing-client-js-editing-page_layout-___EditingView-module__header___djqbH\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport menuEntriesURL from 'indico-url:event_editing.api_menu_entries';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Header} from 'semantic-ui-react';\n\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {useNumericParam} from 'indico/react/util/routing';\n\nimport MenuBar from './MenuBar';\n\nimport './EditingView.module.scss';\n\nexport default function EditingView({eventTitle, children}) {\n  const eventId = useNumericParam('event_id');\n  const contribId = useNumericParam('contrib_id');\n  const {type} = useParams();\n  const {data, lastData} = useIndicoAxios(menuEntriesURL({event_id: eventId}), {camelize: true});\n\n  const menuData = data || lastData;\n  if (!menuData) {\n    return null;\n  }\n\n  return (\n    <div styleName=\"editing-view\">\n      <MenuBar eventId={eventId} menuData={menuData} editableType={type} contribId={contribId} />\n      <div styleName=\"contents\">\n        <div styleName=\"timeline\">\n          <Header as=\"h2\" styleName=\"header\">\n            {eventTitle}\n          </Header>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nEditingView.propTypes = {\n  eventTitle: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {indicoAxios} from 'indico/utils/axios';\nimport {ajaxAction, submitFormAction} from 'indico/utils/redux';\n\nimport {getStaticData, getNewDetails} from './selectors';\n\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_DETAILS = 'SET_DETAILS';\nexport const SET_NEW_DETAILS = 'SET_NEW_DETAILS';\n\nexport function loadTimeline() {\n  return async (dispatch, getStore) => {\n    const {editableDetailsURL: url} = getStaticData(getStore());\n    return await ajaxAction(() => indicoAxios.get(url), SET_LOADING, SET_DETAILS)(dispatch);\n  };\n}\n\nexport function checkTimelineUpdates() {\n  return async (dispatch, getStore) => {\n    const {editableDetailsURL: url} = getStaticData(getStore());\n    return await ajaxAction(() => indicoAxios.get(url), null, SET_NEW_DETAILS)(dispatch);\n  };\n}\n\nexport function useUpdatedTimeline() {\n  return (dispatch, getStore) => {\n    dispatch({\n      type: SET_DETAILS,\n      data: getNewDetails(getStore()),\n    });\n  };\n}\n\nexport function reviewEditable(revision, formData) {\n  return submitFormAction(() => indicoAxios.post(revision.reviewURL, formData), null, () =>\n    loadTimeline()\n  );\n}\n\nexport function confirmEditableChanges(revision, formData) {\n  return submitFormAction(() => indicoAxios.post(revision.confirmURL, formData), null, () =>\n    loadTimeline()\n  );\n}\n\nexport function modifyReviewComment(revision, formData) {\n  return submitFormAction(() => indicoAxios.patch(revision.reviewURL, formData), null, () =>\n    loadTimeline()\n  );\n}\n\nexport function createRevisionComment(url, formData) {\n  return submitFormAction(() => indicoAxios.post(url, formData), null, () => loadTimeline());\n}\n\nexport function modifyRevisionComment(modifyURL, data) {\n  return ajaxAction(() => indicoAxios.patch(modifyURL, data), null, () => loadTimeline());\n}\n\nexport function deleteRevisionComment(url) {\n  return ajaxAction(() => indicoAxios.delete(url), null, () => loadTimeline());\n}\n\nexport function createRevision(url, files) {\n  return ajaxAction(() => indicoAxios.post(url, files), null, () => loadTimeline());\n}\n\nexport function resetReviews(url) {\n  return ajaxAction(() => indicoAxios.delete(url), null, () => loadTimeline());\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport deleteEditableURL from 'indico-url:event_editing.api_delete_editable';\nimport editableTypeListURL from 'indico-url:event_editing.editable_type_list';\n\nimport React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {Icon, Popup} from 'semantic-ui-react';\n\nimport {RequestConfirmDelete} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nimport {EditableType} from '../../models';\n\nimport * as selectors from './selectors';\n\nexport default function DeleteEditable() {\n  const {eventId, contributionId, editableType} = useSelector(selectors.getStaticData);\n  const allowed = useSelector(selectors.canDeleteEditable);\n  const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n\n  const title = {\n    [EditableType.paper]: Translate.string('Delete paper'),\n    [EditableType.slides]: Translate.string('Delete slide'),\n    [EditableType.poster]: Translate.string('Delete poster'),\n  }[editableType];\n\n  if (!allowed) {\n    return null;\n  }\n\n  const deleteEditable = async () => {\n    try {\n      await indicoAxios.delete(\n        deleteEditableURL({\n          event_id: eventId,\n          contrib_id: contributionId,\n          type: editableType,\n        })\n      );\n    } catch (error) {\n      handleAxiosError(error);\n      return true;\n    }\n    history.push(editableTypeListURL({event_id: eventId, type: editableType}));\n  };\n\n  return (\n    <>\n      <Popup\n        content={title}\n        trigger={<Icon name=\"trash\" onClick={() => setIsOpen(true)} color=\"grey\" link />}\n      />\n      <RequestConfirmDelete\n        header={title}\n        onClose={() => setIsOpen(false)}\n        requestFunc={deleteEditable}\n        open={isOpen}\n        persistent\n      >\n        <Translate>This operation is not reversible. Are you sure you want to procceed?</Translate>\n      </RequestConfirmDelete>\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport contributionDisplayURL from 'indico-url:contributions.display_contribution';\nimport assignMyselfURL from 'indico-url:event_editing.api_assign_editable_self';\nimport unassignEditorURL from 'indico-url:event_editing.api_unassign_editable';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Message, Icon} from 'semantic-ui-react';\n\nimport {MathJax} from 'indico/react/components';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nimport {loadTimeline} from './actions';\nimport DeleteEditable from './DeleteEditable';\nimport {getDetails} from './selectors';\n\nexport default function TimelineHeader({children, contribution, state, submitter, eventId}) {\n  const {\n    canAssignSelf,\n    canUnassign,\n    canPerformEditorActions,\n    type,\n    editor,\n    editingEnabled,\n    reviewConditionsValid,\n  } = useSelector(getDetails);\n  const dispatch = useDispatch();\n\n  const unassignEditor = async () => {\n    try {\n      await indicoAxios.delete(\n        unassignEditorURL({event_id: eventId, contrib_id: contribution.id, type})\n      );\n    } catch (error) {\n      return handleAxiosError(error);\n    }\n    dispatch(loadTimeline());\n  };\n\n  const assignMyself = async () => {\n    try {\n      await indicoAxios.put(\n        assignMyselfURL({event_id: eventId, contrib_id: contribution.id, type})\n      );\n    } catch (error) {\n      return handleAxiosError(error);\n    }\n    dispatch(loadTimeline());\n  };\n\n  return (\n    <>\n      <div className=\"submission-title flexrow\">\n        <MathJax>\n          <h3 className=\"f-self-strech\">\n            {contribution.title} <span className=\"submission-id\">#{contribution.friendlyId}</span>\n            {contribution.code && <span className=\"submission-code\">{contribution.code}</span>}\n          </h3>\n        </MathJax>\n        <div style={{marginLeft: 'auto'}}>\n          <DeleteEditable />\n        </div>\n      </div>\n      <div className=\"editable-public\">\n        <div className=\"review-summary flexrow f-a-center\">\n          <div className=\"review-summary-badge\">\n            {reviewConditionsValid ? (\n              <div className={`i-tag ${state.cssClass}`}>{state.title}</div>\n            ) : (\n              <div className=\"i-tag\">\n                <Translate>Not Ready</Translate>\n              </div>\n            )}\n          </div>\n          <div className=\"review-summary-content f-self-stretch\">\n            <div>\n              <Translate>\n                <Param name=\"submitterName\" value={submitter.fullName} wrapper={<strong />} />{' '}\n                submitted for the contribution{' '}\n                <Param\n                  name=\"contributionLink\"\n                  value={contribution.title}\n                  wrapper={\n                    <a\n                      href={contributionDisplayURL({\n                        event_id: eventId,\n                        contrib_id: contribution.id,\n                      })}\n                    />\n                  }\n                />\n              </Translate>\n              <br />\n              {editor ? (\n                <>\n                  <Translate>\n                    <Param name=\"editorName\" value={editor.fullName} wrapper={<strong />} /> is the\n                    assigned editor\n                  </Translate>\n                  {canUnassign && (\n                    <>\n                      {' ('}\n                      <a onClick={unassignEditor}>\n                        <Translate>unassign</Translate>\n                      </a>\n                      )\n                    </>\n                  )}\n                </>\n              ) : (\n                <>\n                  <Translate>No editor assigned</Translate>\n                  {canAssignSelf && (\n                    <>\n                      {' ('}\n                      <a onClick={assignMyself}>\n                        <Translate>assign myself</Translate>\n                      </a>\n                      )\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        {!reviewConditionsValid && (\n          <Message warning>\n            <Icon name=\"warning sign\" />\n            <Translate>This editable is not fulfilling reviewing conditions.</Translate>\n          </Message>\n        )}\n        {!editingEnabled && (\n          <Message warning>\n            <Icon name=\"warning sign\" />\n            <Translate>The Editing period hasn't started yet.</Translate>\n            {canPerformEditorActions && (\n              <>\n                {' '}\n                <Translate>Since you are a manager you can edit anyway.</Translate>\n              </>\n            )}\n          </Message>\n        )}\n        {children && <div className=\"review-item-content\">{children}</div>}\n      </div>\n    </>\n  );\n}\n\nTimelineHeader.propTypes = {\n  contribution: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    friendlyId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n  }).isRequired,\n  state: PropTypes.shape({\n    cssClass: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  submitter: PropTypes.shape({\n    fullName: PropTypes.string.isRequired,\n  }).isRequired,\n  eventId: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"file-display-wrapper\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-display-wrapper___+tJbp\",\"outdated\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__outdated___jJ99z\",\"file-display\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-display___fP19U\",\"file-type-display\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-type-display___hA+87\",\"file-list-display\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-list-display___nQG1e\",\"file-row\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-row___rfFnk\",\"file-name\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__file-name___crVch\",\"no-files\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__no-files___OS-B6\",\"download-tag-wrapper\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__download-tag-wrapper___7tItK\",\"tag-display\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__tag-display___jIME2\",\"download-button\":\"events-editing-client-js-editing-timeline-FileDisplay-___FileDisplay-module__download-button___JhgX2\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, Icon, Label, Popup} from 'semantic-ui-react';\n\nimport {TooltipIfTruncated} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {toClasses} from 'indico/react/util';\n\nimport {fileTypePropTypes, filePropTypes, mapFileTypes} from '../FileManager/util';\n\nimport './FileDisplay.module.scss';\n\nfunction FileListDisplay({files}) {\n  const stateIcon = {\n    modified: {\n      icon: 'dot circle',\n      color: 'yellow',\n      tooltip: Translate.string('This file was modified since the last revision.'),\n    },\n    added: {\n      icon: 'add circle',\n      color: 'green',\n      tooltip: Translate.string('This file was added since the last revision.'),\n    },\n  };\n\n  return (\n    <ul styleName=\"file-list-display\">\n      {files.map(({filename, uuid, downloadURL, state}) => (\n        <li key={uuid} styleName=\"file-row\">\n          <TooltipIfTruncated>\n            <span styleName=\"file-name\">\n              {state && (\n                <Popup\n                  trigger={<Icon name={stateIcon[state].icon} color={stateIcon[state].color} />}\n                  content={stateIcon[state].tooltip}\n                />\n              )}\n              <a href={downloadURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                {filename}\n              </a>\n            </span>\n          </TooltipIfTruncated>\n        </li>\n      ))}\n      {!files.length && (\n        <span styleName=\"no-files\">\n          <Translate>No files uploaded</Translate>\n        </span>\n      )}\n    </ul>\n  );\n}\n\nFileListDisplay.propTypes = {\n  files: PropTypes.arrayOf(PropTypes.shape(filePropTypes)).isRequired,\n};\n\nfunction FileTypeDisplay({fileType}) {\n  return (\n    <div styleName=\"file-type-display\">\n      <h3>{fileType.name}</h3>\n      <FileListDisplay files={fileType.files} />\n    </div>\n  );\n}\n\nFileTypeDisplay.propTypes = {\n  fileType: PropTypes.shape(fileTypePropTypes).isRequired,\n};\n\nexport default function FileDisplay({downloadURL, fileTypes, files, tags, outdated}) {\n  return (\n    <div\n      styleName={toClasses({\n        'file-display-wrapper': true,\n        'outdated': outdated && files.length > 0,\n      })}\n    >\n      {files.length !== 0 && (\n        <div styleName=\"file-display\">\n          {mapFileTypes(fileTypes, files).map(fileType => (\n            <FileTypeDisplay key={fileType.id} fileType={fileType} />\n          ))}\n        </div>\n      )}\n      <div styleName=\"download-tag-wrapper\">\n        <div styleName=\"tag-display\">\n          {tags.map(tag => (\n            <Label color={tag.color} key={tag.id}>\n              {tag.verboseTitle}\n            </Label>\n          ))}\n        </div>\n        {files.length !== 0 && (\n          <div>\n            <Button\n              as=\"a\"\n              href={downloadURL}\n              floated=\"right\"\n              styleName=\"download-button\"\n              icon\n              primary\n            >\n              <Icon name=\"download\" /> <Translate>Download ZIP</Translate>\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nFileDisplay.propTypes = {\n  downloadURL: PropTypes.string.isRequired,\n  fileTypes: PropTypes.arrayOf(PropTypes.shape(fileTypePropTypes)).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape(filePropTypes)).isRequired,\n  tags: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      verboseTitle: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  outdated: PropTypes.bool,\n};\n\nFileDisplay.defaultProps = {\n  outdated: false,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport createSubmitterRevisionURL from 'indico-url:event_editing.api_create_submitter_revision';\nimport uploadURL from 'indico-url:event_editing.api_upload';\n\nimport _ from 'lodash';\nimport React from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Form} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {FinalSubmitButton} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {createRevision} from './actions';\nimport {FinalFileManager} from './FileManager';\nimport {getFilesFromRevision} from './FileManager/util';\nimport * as selectors from './selectors';\n\nexport default function SubmitRevision() {\n  const {eventId, contributionId, editableType} = useSelector(selectors.getStaticData);\n  const fileTypes = useSelector(selectors.getFileTypes);\n  const lastRevision = useSelector(selectors.getLastRevision);\n  const lastRevisionWithFiles = useSelector(selectors.getLastRevisionWithFiles);\n  const dispatch = useDispatch();\n  const currentUser = {\n    fullName: Indico.User.name,\n    avatarURL: Indico.User.avatarURL,\n  };\n  const files = getFilesFromRevision(fileTypes, lastRevisionWithFiles);\n\n  const submitRevision = async formData => {\n    const rv = await dispatch(\n      createRevision(\n        createSubmitterRevisionURL({\n          event_id: eventId,\n          contrib_id: contributionId,\n          type: editableType,\n          revision_id: lastRevision.id,\n        }),\n        formData\n      )\n    );\n    if (rv.error) {\n      return rv.error;\n    }\n  };\n\n  return (\n    <FinalForm\n      initialValues={{files}}\n      initialValuesEqual={_.isEqual}\n      subscription={{}}\n      onSubmit={submitRevision}\n    >\n      {({handleSubmit}) => (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"i-timeline\">\n            <div className=\"i-timeline-item\">\n              <UserAvatar user={currentUser} />\n              <div className=\"i-timeline-item-box header-indicator-left\">\n                <div className=\"i-box-header flexrow\">\n                  <Translate>Upload corrected revision</Translate>\n                </div>\n                <div className=\"i-box-content\">\n                  <FinalFileManager\n                    name=\"files\"\n                    fileTypes={fileTypes}\n                    files={lastRevisionWithFiles.files}\n                    uploadURL={uploadURL({\n                      event_id: eventId,\n                      contrib_id: contributionId,\n                      type: editableType,\n                    })}\n                    mustChange\n                  />\n                  <FinalSubmitButton label={Translate.string('Submit new revision')} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Form>\n      )}\n    </FinalForm>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport {Field, Form as FinalForm} from 'react-final-form';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Divider, Form, Message} from 'semantic-ui-react';\n\nimport {FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {confirmEditableChanges} from './actions';\nimport {getLastRevision} from './selectors';\n\nimport './ChangesConfirmation.module.scss';\n\nexport default function ChangesConfirmation() {\n  const lastRevision = useSelector(getLastRevision);\n  const dispatch = useDispatch();\n\n  const confirmChanges = async formData => {\n    const rv = await dispatch(confirmEditableChanges(lastRevision, formData));\n    if (rv.error) {\n      return rv.error;\n    }\n  };\n\n  return (\n    <div>\n      <Divider />\n      <FinalForm onSubmit={confirmChanges} initialValues={{comment: ''}} subscription={{}}>\n        {fprops => (\n          <Form onSubmit={fprops.handleSubmit}>\n            <Message\n              info\n              size=\"tiny\"\n              icon=\"exclamation circle\"\n              header={Translate.string('Confirmation required')}\n              content={\n                <p>\n                  <Translate>\n                    Editor uploaded changes to your paper. Please download the updated files and\n                    verify their changes. If you reject them, you can upload a new version\n                    afterwards.\n                  </Translate>\n                </p>\n              }\n            />\n            <FinalTextArea\n              name=\"comment\"\n              placeholder={Translate.string('You can leave a comment if you wish')}\n            />\n            <Form.Group styleName=\"submit-buttons\">\n              <Field name=\"action\" subscription={{value: true}}>\n                {({input: {value: currentAction}}) => (\n                  <>\n                    <FinalSubmitButton\n                      label={Translate.string('Accept')}\n                      color=\"green\"\n                      icon=\"check\"\n                      onClick={() => {\n                        fprops.form.change('action', 'accept');\n                      }}\n                      disabledUntilChange={false}\n                      activeSubmitButton={currentAction === 'accept'}\n                    />\n                    <FinalSubmitButton\n                      label={Translate.string('Reject')}\n                      color=\"red\"\n                      icon=\"times\"\n                      onClick={() => {\n                        fprops.form.change('action', 'reject');\n                      }}\n                      disabledUntilChange={false}\n                      activeSubmitButton={currentAction === 'reject'}\n                    />\n                  </>\n                )}\n              </Field>\n            </Form.Group>\n          </Form>\n        )}\n      </FinalForm>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Button, Confirm, Divider} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nimport {loadTimeline} from './actions';\n\nimport './CustomActions.module.scss';\n\nexport default function CustomActions({url, actions}) {\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [submitting, setSubmitting] = useState(null);\n  const dispatch = useDispatch();\n\n  const triggerAction = async name => {\n    setConfirmAction(null);\n    setSubmitting(name);\n    let resp;\n    try {\n      resp = await indicoAxios.post(url, {action: name});\n    } catch (err) {\n      setSubmitting(null);\n      handleAxiosError(err);\n      return;\n    }\n\n    if (resp.data.redirect) {\n      location.href = resp.data.redirect;\n      return;\n    }\n\n    await dispatch(loadTimeline());\n    setSubmitting(null);\n  };\n\n  const handleActionClick = action => {\n    if (action.confirm) {\n      setConfirmAction(action);\n    } else {\n      triggerAction(action.name);\n    }\n  };\n\n  return (\n    <>\n      <Divider horizontal styleName=\"divider\">\n        <Translate>Actions</Translate>\n      </Divider>\n      <Button.Group floated=\"right\">\n        {actions.map(a => (\n          <Button\n            key={a.name}\n            content={a.title}\n            color={a.color}\n            icon={a.icon}\n            onClick={() => handleActionClick(a)}\n            disabled={!!submitting}\n            loading={submitting === a.name}\n          />\n        ))}\n      </Button.Group>\n      {confirmAction && (\n        <Confirm\n          size=\"mini\"\n          onCancel={() => setConfirmAction(null)}\n          onConfirm={() => triggerAction(confirmAction.name)}\n          header={Translate.string('Confirm action: {action}', {action: confirmAction.title})}\n          content={confirmAction.confirm}\n          confirmButton={Translate.string('OK')}\n          cancelButton={Translate.string('Cancel')}\n          open\n        />\n      )}\n    </>\n  );\n}\n\nCustomActions.propTypes = {\n  url: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      color: PropTypes.string,\n      icon: PropTypes.string,\n      confirm: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Icon, Popup} from 'semantic-ui-react';\n\nimport {RequestConfirm} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\n\nimport {resetReviews} from './actions';\n\nexport default function ResetReview({reviewURL}) {\n  const [submitting, setSubmitting] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const resetRevisions = async () => {\n    setSubmitting(true);\n    await dispatch(resetReviews(reviewURL));\n    setSubmitting(false);\n  };\n\n  return (\n    <>\n      <Popup\n        content={Translate.string('Undo review')}\n        trigger={\n          <Icon\n            name=\"undo\"\n            disabled={submitting}\n            onClick={() => setIsOpen(true)}\n            color=\"grey\"\n            size=\"large\"\n            link\n          />\n        }\n      />\n      <RequestConfirm\n        header={Translate.string('Reset review')}\n        confirmText={Translate.string('Reset')}\n        onClose={() => setIsOpen(false)}\n        requestFunc={resetRevisions}\n        open={isOpen}\n        negative\n      >\n        <Translate>Are you sure you want to reset the review?</Translate>\n      </RequestConfirm>\n    </>\n  );\n}\n\nResetReview.propTypes = {\n  reviewURL: PropTypes.string.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useDispatch} from 'react-redux';\nimport {Button, Form} from 'semantic-ui-react';\n\nimport {FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {RevisionTypeStates} from '../../models';\n\nimport {modifyReviewComment} from './actions';\nimport {blockPropTypes} from './util';\n\nimport './ReviewComment.module.scss';\n\nexport default function ReviewComment({block, canEdit}) {\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async formData => {\n    const rv = await dispatch(modifyReviewComment(block, formData));\n    if (rv.error) {\n      return rv.error;\n    }\n    setEditFormOpen(false);\n  };\n\n  return (\n    <div styleName=\"review-comment\">\n      {editFormOpen ? (\n        <div className=\"f-self-stretch\">\n          <FinalForm\n            onSubmit={handleSubmit}\n            initialValues={{text: block.comment}}\n            subscription={{submitting: true}}\n          >\n            {fprops => (\n              <Form onSubmit={fprops.handleSubmit}>\n                <FinalTextArea\n                  name=\"text\"\n                  placeholder={Translate.string('Leave a comment...')}\n                  autoFocus\n                  required={RevisionTypeStates[block.type.name] !== 'accepted'}\n                  hideValidationError\n                />\n                <Form.Group styleName=\"submit-buttons\" inline>\n                  <FinalSubmitButton label={Translate.string('Save changes')} />\n                  <Button\n                    disabled={fprops.submitting}\n                    content={Translate.string('Cancel')}\n                    onClick={() => {\n                      setEditFormOpen(false);\n                    }}\n                  />\n                </Form.Group>\n              </Form>\n            )}\n          </FinalForm>\n        </div>\n      ) : (\n        <div className=\"markdown-text\" dangerouslySetInnerHTML={{__html: block.commentHtml}} />\n      )}\n      <div styleName=\"action-buttons\">\n        {canEdit && (\n          <a\n            onClick={() => setEditFormOpen(!editFormOpen)}\n            className=\"i-link icon-edit\"\n            title={Translate.string('Edit review comment')}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nReviewComment.propTypes = {\n  block: PropTypes.shape(blockPropTypes).isRequired,\n  canEdit: PropTypes.bool.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form as FinalForm} from 'react-final-form';\nimport {useSelector} from 'react-redux';\nimport {Button, Form} from 'semantic-ui-react';\n\nimport {FinalCheckbox, FinalInput, FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport {getDetails} from './selectors';\n\nimport './CommentForm.module.scss';\n\nexport default function CommentForm({onSubmit, onToggleExpand, initialValues, expanded}) {\n  const {canCreateInternalComments} = useSelector(getDetails);\n  const [commentFormVisible, setCommentFormVisible] = useState(expanded);\n\n  const InputComponent = commentFormVisible ? FinalTextArea : FinalInput;\n  const inputProps = commentFormVisible ? {autoFocus: true} : {};\n  const onCommentClickHandler = () => {\n    if (!commentFormVisible) {\n      setCommentFormVisible(true);\n      onToggleExpand(true);\n    }\n  };\n  const handleSubmit = async (formData, form) => {\n    const rv = await onSubmit(formData, form);\n    if (!rv) {\n      setCommentFormVisible(false);\n      onToggleExpand(false);\n    }\n  };\n\n  return (\n    <div className=\"f-self-stretch\">\n      <FinalForm\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        subscription={{submitting: true}}\n      >\n        {fprops => (\n          <Form onSubmit={fprops.handleSubmit}>\n            <InputComponent\n              {...inputProps}\n              onFocus={onCommentClickHandler}\n              name=\"text\"\n              placeholder={Translate.string('Leave a comment...')}\n              hideValidationError\n              required\n            />\n            {commentFormVisible && (\n              <>\n                {canCreateInternalComments && (\n                  <FinalCheckbox\n                    label={Translate.string(\n                      'Restrict visibility of this comment to other editors only'\n                    )}\n                    name=\"internal\"\n                    toggle\n                  />\n                )}\n                <Form.Group styleName=\"submit-buttons\" inline>\n                  <FinalSubmitButton label={Translate.string('Comment')} />\n                  <Button\n                    disabled={fprops.submitting}\n                    content={Translate.string('Cancel')}\n                    onClick={() => {\n                      setCommentFormVisible(false);\n                      onToggleExpand(false);\n                      fprops.form.reset();\n                    }}\n                  />\n                </Form.Group>\n              </>\n            )}\n          </Form>\n        )}\n      </FinalForm>\n    </div>\n  );\n}\n\nCommentForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onToggleExpand: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    text: PropTypes.string,\n    internal: PropTypes.bool,\n  }),\n  expanded: PropTypes.bool,\n};\n\nCommentForm.defaultProps = {\n  initialValues: {\n    text: '',\n    internal: false,\n  },\n  expanded: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"disabled-item\":\"events-editing-client-js-editing-timeline-judgment-___JudgmentDropdownItems-module__disabled-item___ppRjC\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Dropdown, Popup} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport {hasPublishableFiles} from '../selectors';\n\nimport './JudgmentDropdownItems.module.scss';\n\nexport default function JudgmentDropdownItems({options, judgmentType, setJudgmentType}) {\n  const hasPublishables = useSelector(hasPublishableFiles);\n\n  return options.map(({value, text, color}) => (\n    <Popup\n      content={Translate.string(\n        'You cannot accept an editable that does not contain any publishable files.'\n      )}\n      trigger={\n        <Dropdown.Item\n          text={text}\n          label={{color, empty: true, circular: true}}\n          key={value}\n          selected={value === judgmentType}\n          styleName={!hasPublishables && value === 'accept' && 'disabled-item'}\n          onClick={evt => {\n            if (hasPublishables || value !== 'accept') {\n              setJudgmentType(value);\n            } else {\n              evt.stopPropagation();\n            }\n          }}\n        />\n      }\n      position=\"right center\"\n      key={value}\n      disabled={hasPublishables || value !== 'accept'}\n    />\n  ));\n}\n\nJudgmentDropdownItems.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      text: PropTypes.any,\n      color: PropTypes.string,\n      class: PropTypes.string,\n    })\n  ).isRequired,\n  judgmentType: PropTypes.string,\n  setJudgmentType: PropTypes.func.isRequired,\n};\n\nJudgmentDropdownItems.defaultProps = {\n  judgmentType: null,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, Dropdown} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\n\nimport JudgmentDropdownItems from './JudgmentDropdownItems';\n\nimport './JudgmentBoxHeader.module.scss';\n\nexport default function JudgmentBoxHeader({judgmentType, setJudgmentType, options, loading}) {\n  const option = options.find(x => x.value === judgmentType);\n\n  return (\n    <div styleName=\"choice-bar\">\n      <h3>\n        <Translate>Your decision</Translate>\n      </h3>\n      <div>\n        <Dropdown\n          value={judgmentType}\n          trigger={\n            <Dropdown.Text className=\"text\">\n              <div\n                className={`ui empty circular ${option.color} label`}\n                style={{marginRight: '0.5em', verticalAlign: '-10%'}}\n              />\n              {option.text}\n            </Dropdown.Text>\n          }\n          direction=\"left\"\n          disabled={loading}\n          button\n          floating\n        >\n          <Dropdown.Menu>\n            <JudgmentDropdownItems\n              options={options}\n              judgmentType={judgmentType}\n              setJudgmentType={setJudgmentType}\n            />\n          </Dropdown.Menu>\n        </Dropdown>\n        <Button icon=\"delete\" disabled={loading} onClick={() => setJudgmentType(null)} />\n      </div>\n    </div>\n  );\n}\n\nJudgmentBoxHeader.propTypes = {\n  judgmentType: PropTypes.string.isRequired,\n  setJudgmentType: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      text: PropTypes.string,\n      class: PropTypes.string,\n      color: PropTypes.string,\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tag-input\":\"events-editing-client-js-editing-timeline-judgment-___TagInput-module__tag-input___29n1x\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'semantic-ui-react';\n\nimport {FinalField, unsortedArraysEqual} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\n\nimport './TagInput.module.scss';\n\nconst optionPropTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  code: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  verboseTitle: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n});\n\n/**\n * A dropdown which allows tags to be searched and added\n */\nfunction TagInput({onChange, value, placeholder, options}) {\n  return (\n    <Dropdown\n      placeholder={placeholder}\n      styleName=\"tag-input\"\n      fluid\n      multiple\n      search\n      selection\n      value={value}\n      options={options.map(({id, verboseTitle, color}) => ({\n        value: id,\n        text: verboseTitle,\n        key: id,\n        color,\n      }))}\n      onChange={(_, {value: v}) => onChange(v)}\n      closeOnChange\n      renderLabel={({color, text}) => ({\n        color,\n        content: text,\n      })}\n    />\n  );\n}\n\nTagInput.propTypes = {\n  /** Called whenever the value changes (receives array of Strings) */\n  onChange: PropTypes.func.isRequired,\n  /** The default (initial) value */\n  value: PropTypes.arrayOf(PropTypes.number).isRequired,\n  /** The text placeholder which should should up in the input box */\n  placeholder: PropTypes.string,\n  /** The list of options to show as valid tags */\n  options: PropTypes.arrayOf(optionPropTypes).isRequired,\n};\n\nTagInput.defaultProps = {\n  placeholder: Translate.string('Tag code or title...'),\n};\n\n/** final-form-compatible <TagInput /> */\nexport default function FinalTagInput({name, ...rest}) {\n  return (\n    <FinalField\n      name={name}\n      component={TagInput}\n      format={v => v}\n      parse={v => v}\n      undefinedValue={[]}\n      isEqual={unsortedArraysEqual}\n      {...rest}\n    />\n  );\n}\n\nFinalTagInput.propTypes = {\n  /** The field's name */\n  name: PropTypes.string.isRequired,\n  /** The list of options to show as valid tags */\n  options: PropTypes.arrayOf(optionPropTypes).isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport uploadURL from 'indico-url:event_editing.api_upload';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Field} from 'react-final-form';\nimport {useSelector} from 'react-redux';\nimport {Form, Message} from 'semantic-ui-react';\n\nimport {Translate, Param, Plural, PluralTranslate, Singular} from 'indico/react/i18n';\n\nimport {FinalFileManager} from '../FileManager';\nimport * as selectors from '../selectors';\n\nexport default function UpdateFilesBox({visible, mustChange, requirePublishable}) {\n  const lastRevisionWithFiles = useSelector(selectors.getLastRevisionWithFiles);\n  const staticData = useSelector(selectors.getStaticData);\n  const {eventId, contributionId, editableType} = staticData;\n  const fileTypes = useSelector(selectors.getFileTypes);\n  const publishableFileTypes = useSelector(selectors.getPublishableFileTypes);\n\n  return (\n    <Form.Field style={{display: !visible ? 'none' : undefined}}>\n      <FinalFileManager\n        name=\"files\"\n        fileTypes={fileTypes}\n        files={lastRevisionWithFiles.files}\n        uploadURL={uploadURL({\n          event_id: eventId,\n          contrib_id: contributionId,\n          type: editableType,\n        })}\n        mustChange={mustChange}\n      />\n      <Field name=\"files\" subscription={{value: true}}>\n        {({input: {value: currentFiles}}) => {\n          if (\n            !requirePublishable ||\n            publishableFileTypes.some(fileType => fileType.id in currentFiles)\n          ) {\n            return null;\n          }\n          return (\n            <>\n              <Message visible warning>\n                <PluralTranslate count={publishableFileTypes.length}>\n                  <Singular>\n                    There are no publishable files. Please upload a{' '}\n                    <Param\n                      name=\"types\"\n                      wrapper={<strong />}\n                      value={publishableFileTypes.map(ft => ft.name).join(', ')}\n                    />{' '}\n                    file.\n                  </Singular>\n                  <Plural>\n                    There are no publishable files. Please upload a file in at least one of the\n                    following types:{' '}\n                    <Param\n                      name=\"types\"\n                      wrapper={<strong />}\n                      value={publishableFileTypes.map(ft => ft.name).join(', ')}\n                    />\n                  </Plural>\n                </PluralTranslate>\n              </Message>\n              <Field\n                name=\"_nopublishables\"\n                validate={() => Translate.string('There is no publishable file uploaded.')}\n                render={() => null}\n              />\n            </>\n          );\n        }}\n      </Field>\n    </Form.Field>\n  );\n}\n\nUpdateFilesBox.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  mustChange: PropTypes.bool.isRequired,\n  requirePublishable: PropTypes.bool.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport submitRevisionURL from 'indico-url:event_editing.api_create_submitter_revision';\n\nimport _ from 'lodash';\nimport React, {useState} from 'react';\nimport {Field, Form as FinalForm} from 'react-final-form';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Dropdown, Form} from 'semantic-ui-react';\n\nimport EditableSubmissionButton from 'indico/modules/events/editing/editing/EditableSubmissionButton';\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {FinalCheckbox, FinalSubmitButton, FinalTextArea} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\n\nimport {EditingReviewAction} from '../../models';\n\nimport {createRevisionComment, reviewEditable} from './actions';\nimport CommentForm from './CommentForm';\nimport {getFilesFromRevision} from './FileManager/util';\nimport JudgmentBoxHeader from './judgment/JudgmentBoxHeader';\nimport JudgmentDropdownItems from './judgment/JudgmentDropdownItems';\nimport FinalTagInput from './judgment/TagInput';\nimport UpdateFilesBox from './judgment/UpdateFilesBox';\nimport {\n  getLastRevision,\n  canJudgeLastRevision,\n  getDetails,\n  getStaticData,\n  canReviewLastRevision,\n  getLastRevisionWithFiles,\n  getNonSystemTags,\n} from './selectors';\n\nimport './ReviewForm.module.scss';\n\nconst judgmentOptions = [\n  {\n    value: EditingReviewAction.accept,\n    text: Translate.string('Accept'),\n    color: 'green',\n    class: 'accepted',\n  },\n  {\n    value: EditingReviewAction.reject,\n    text: Translate.string('Reject'),\n    color: 'black',\n    class: 'rejected',\n  },\n  {\n    value: EditingReviewAction.update,\n    text: Translate.string('Request approval'),\n    color: 'yellow',\n    class: 'needs-submitter-confirmation',\n  },\n  {\n    value: EditingReviewAction.requestUpdate,\n    text: Translate.string('Request changes'),\n    color: 'red',\n    class: 'needs-submitter-changes',\n  },\n];\n\nexport default function ReviewForm() {\n  const dispatch = useDispatch();\n  const lastRevision = useSelector(getLastRevision);\n  const lastRevisionWithFiles = useSelector(getLastRevisionWithFiles);\n  const canJudge = useSelector(canJudgeLastRevision);\n  const canReview = useSelector(canReviewLastRevision);\n  const {canPerformSubmitterActions, contribution, editor} = useSelector(getDetails);\n  const {eventId, editableType, fileTypes} = useSelector(getStaticData);\n  const tagOptions = useSelector(getNonSystemTags);\n  const currentUser = {\n    fullName: Indico.User.fullName,\n    avatarURL: Indico.User.avatarURL,\n  };\n\n  const [commentFormVisible, setCommentFormVisible] = useState(false);\n  const [judgmentType, setJudgmentType] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const files = getFilesFromRevision(fileTypes, lastRevisionWithFiles);\n\n  const createComment = async (formData, form) => {\n    const rv = await dispatch(createRevisionComment(lastRevision.createCommentURL, formData));\n    if (rv.error) {\n      return rv.error;\n    }\n    setTimeout(() => form.reset(), 0);\n  };\n\n  const handleSubmission = (type, formData) =>\n    indicoAxios.post(\n      submitRevisionURL({\n        event_id: eventId,\n        contrib_id: contribution.id,\n        type,\n        revision_id: lastRevision.id,\n      }),\n      formData\n    );\n\n  const judgmentForm = (\n    <div className=\"flexrow f-a-center\" styleName=\"judgment-form\">\n      <CommentForm onSubmit={createComment} onToggleExpand={setCommentFormVisible} />\n      {canPerformSubmitterActions && canReview && !editor && (\n        <>\n          <span className=\"comment-or-review\">\n            <Translate>or</Translate>\n          </span>\n          <EditableSubmissionButton\n            eventId={eventId}\n            contributionId={contribution.id}\n            contributionCode={contribution.code}\n            fileTypes={{[editableType]: fileTypes}}\n            uploadableFiles={lastRevisionWithFiles.files}\n            text={Translate.string('Submit files')}\n            onSubmit={handleSubmission}\n          />\n        </>\n      )}\n      {!commentFormVisible && canJudge && (\n        <div className=\"review-trigger flexrow\">\n          <span className=\"comment-or-review\">\n            <Translate>or</Translate>\n          </span>\n          <Dropdown\n            className=\"judgment-btn\"\n            text={Translate.string('Judge')}\n            direction=\"left\"\n            button\n            floating\n          >\n            <Dropdown.Menu>\n              <JudgmentDropdownItems options={judgmentOptions} setJudgmentType={setJudgmentType} />\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      )}\n    </div>\n  );\n\n  const handleReview = async formData => {\n    setLoading(true);\n    const data = _.omit(formData, [\n      'upload_changes',\n      ...(judgmentType === EditingReviewAction.reject ||\n      ([EditingReviewAction.accept, EditingReviewAction.requestUpdate].includes(judgmentType) &&\n        !formData.upload_changes)\n        ? ['files']\n        : []),\n    ]);\n    const rv = await dispatch(reviewEditable(lastRevision, {...data, action: judgmentType}));\n    setLoading(false);\n    if (rv.error) {\n      return rv.error;\n    }\n    setJudgmentType(null);\n  };\n\n  return (\n    <div className=\"i-timeline-item review-timeline-input\">\n      <UserAvatar user={currentUser} />\n      <div className=\"i-timeline-item-box footer-only header-indicator-left\">\n        <div className=\"i-box-footer\" style={{overflow: 'visible'}}>\n          {!judgmentType && judgmentForm}\n          <FinalForm\n            initialValues={{\n              comment: '',\n              tags: lastRevision.tags\n                .filter(t => !t.system)\n                .map(t => t.id)\n                .sort(),\n              files,\n              upload_changes: false,\n            }}\n            initialValuesEqual={_.isEqual}\n            subscription={{}}\n            onSubmit={handleReview}\n          >\n            {({handleSubmit}) =>\n              judgmentType && (\n                <Form id=\"judgment-form\" onSubmit={handleSubmit}>\n                  <JudgmentBoxHeader\n                    judgmentType={judgmentType}\n                    setJudgmentType={setJudgmentType}\n                    options={judgmentOptions}\n                    loading={loading}\n                  />\n                  <FinalTextArea\n                    name=\"comment\"\n                    placeholder={Translate.string('Leave a comment...')}\n                    hideValidationError\n                    autoFocus\n                    required={judgmentType !== EditingReviewAction.accept}\n                    /* otherwise changing required doesn't work properly if the field has been touched */\n                    key={judgmentType}\n                  />\n                  {[EditingReviewAction.accept, EditingReviewAction.requestUpdate].includes(\n                    judgmentType\n                  ) && (\n                    <FinalCheckbox\n                      name=\"upload_changes\"\n                      label={Translate.string('Upload files')}\n                      toggle\n                    />\n                  )}\n                  <Field name=\"upload_changes\" subscription={{value: true}}>\n                    {({input: {value: uploadChanges}}) => (\n                      <UpdateFilesBox\n                        visible={\n                          judgmentType === EditingReviewAction.update ||\n                          ([EditingReviewAction.accept, EditingReviewAction.requestUpdate].includes(\n                            judgmentType\n                          ) &&\n                            uploadChanges)\n                        }\n                        mustChange={judgmentType === EditingReviewAction.update || uploadChanges}\n                        requirePublishable={[\n                          EditingReviewAction.accept,\n                          EditingReviewAction.update,\n                        ].includes(judgmentType)}\n                      />\n                    )}\n                  </Field>\n                  <FinalTagInput name=\"tags\" options={tagOptions} />\n                  <div styleName=\"judgment-submit-button\">\n                    <FinalSubmitButton\n                      label={Translate.string('Judge')}\n                      disabledUntilChange={judgmentType !== EditingReviewAction.accept}\n                    />\n                  </div>\n                </Form>\n              )\n            }\n          </FinalForm>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Confirm} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {deleteRevisionComment, modifyRevisionComment} from './actions';\nimport CommentForm from './CommentForm';\nimport {getLastRevision} from './selectors';\nimport {blockItemPropTypes, INDICO_BOT_USER} from './util';\n\nexport default function Comment({\n  revisionId,\n  user,\n  createdDt,\n  modifiedDt,\n  html,\n  text,\n  internal,\n  system,\n  canModify,\n  modifyCommentURL,\n}) {\n  const [isDeletingComment, setIsDeletingComment] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [editCommentFormOpen, setEditCommentFormOpen] = useState(false);\n  const lastRevision = useSelector(getLastRevision);\n  const dispatch = useDispatch();\n  const commentUser = system ? INDICO_BOT_USER : user;\n\n  const modifyComment = async formData => {\n    const rv = await dispatch(modifyRevisionComment(modifyCommentURL, formData));\n    if (rv.error) {\n      return rv.error;\n    }\n  };\n\n  return (\n    <div className=\"i-timeline-item\">\n      <UserAvatar user={commentUser} />\n      <div className=\"flexrow i-timeline-item-content\">\n        <div className=\"i-timeline-item-box header-indicator-left\">\n          <div className=\"i-box-header flexrow\">\n            <div className=\"f-self-stretch\">\n              <Translate>\n                <Param name=\"userName\" value={commentUser.fullName} wrapper={<strong />} /> left a\n                comment\n              </Translate>{' '}\n              {internal && (\n                <i\n                  className=\"review-comment-visibility internal icon-shield\"\n                  title={Translate.string('Visible only to editors')}\n                />\n              )}\n              <time dateTime={serializeDate(createdDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}>\n                {serializeDate(createdDt, 'LLL')}\n              </time>{' '}\n              {modifiedDt && (\n                <time\n                  dateTime={serializeDate(modifiedDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}\n                  title={serializeDate(modifiedDt, 'LLL')}\n                >\n                  <span className=\"review-comment-edited\">\n                    <Translate>edited</Translate>\n                  </span>\n                </time>\n              )}\n            </div>\n            {canModify && lastRevision.id === revisionId && (\n              <div className=\"review-comment-action\">\n                <a\n                  onClick={() => setEditCommentFormOpen(!editCommentFormOpen)}\n                  className=\"i-link icon-edit\"\n                  title={Translate.string('Edit comment')}\n                />{' '}\n                <a\n                  onClick={() => setConfirmOpen(true)}\n                  className=\"i-link icon-cross\"\n                  title={Translate.string('Remove comment')}\n                />\n                <Confirm\n                  size=\"tiny\"\n                  header={Translate.string('Remove comment')}\n                  open={confirmOpen}\n                  content={Translate.string('Are you sure you want to remove this comment?')}\n                  closeOnDimmerClick={!isDeletingComment}\n                  closeOnEscape={!isDeletingComment}\n                  onCancel={() => setConfirmOpen(false)}\n                  onConfirm={async () => {\n                    setIsDeletingComment(true);\n\n                    const rv = await dispatch(deleteRevisionComment(modifyCommentURL));\n                    if (!rv.error) {\n                      setConfirmOpen(false);\n                    }\n\n                    setIsDeletingComment(false);\n                  }}\n                  cancelButton={\n                    <Button content={Translate.string('Cancel')} disabled={isDeletingComment} />\n                  }\n                  confirmButton={\n                    <Button\n                      content={Translate.string('Remove comment')}\n                      loading={isDeletingComment}\n                      disabled={isDeletingComment}\n                      negative\n                    />\n                  }\n                  closeIcon={!isDeletingComment}\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"i-box-content js-form-container\">\n            {editCommentFormOpen ? (\n              <CommentForm\n                onSubmit={modifyComment}\n                onToggleExpand={setEditCommentFormOpen}\n                initialValues={{text, internal}}\n                expanded\n              />\n            ) : (\n              <div className=\"markdown-text\" dangerouslySetInnerHTML={{__html: html}} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = blockItemPropTypes;\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport CommentItem from './CommentItem';\nimport {blockItemPropTypes} from './util';\n\nexport default function RevisionLog({items, children, separator}) {\n  return (\n    <div className=\"i-timeline\">\n      <div className=\"i-timeline with-line\">\n        <div className=\"i-timeline-connect-up\" />\n        {items.map(item => (\n          <CommentItem key={item.id} {...item} />\n        ))}\n        {children}\n      </div>\n      {separator && (\n        <>\n          <div className=\"i-timeline to-separator-wrapper\">\n            <div className=\"i-timeline-connect-down to-separator\" />\n          </div>\n          <div className=\"i-timeline-separator\" />\n        </>\n      )}\n    </div>\n  );\n}\n\nRevisionLog.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(blockItemPropTypes)).isRequired,\n  children: PropTypes.node,\n  separator: PropTypes.bool,\n};\n\nRevisionLog.defaultProps = {\n  children: null,\n  separator: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"undone-item\":\"events-editing-client-styles-___timeline-module__undone-item___z9JZG\",\"undone-indicator\":\"events-editing-client-styles-___timeline-module__undone-indicator___OIQ+U\",\"item-header\":\"events-editing-client-styles-___timeline-module__item-header___4uYJq\"};","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {Divider, Icon, Message} from 'semantic-ui-react';\n\nimport UserAvatar from 'indico/modules/events/reviewing/components/UserAvatar';\nimport {Param, Translate} from 'indico/react/i18n';\nimport {serializeDate} from 'indico/utils/date';\n\nimport {RevisionType, RevisionTypeStates} from '../../models';\n\nimport ChangesConfirmation from './ChangesConfirmation';\nimport CustomActions from './CustomActions';\nimport FileDisplay from './FileDisplay';\nimport ResetReview from './ResetReview';\nimport ReviewComment from './ReviewComment';\nimport ReviewForm from './ReviewForm';\nimport RevisionLog from './RevisionLog';\nimport * as selectors from './selectors';\nimport StateIndicator from './StateIndicator';\nimport {blockPropTypes, INDICO_BOT_USER} from './util';\n\nimport '../../../styles/timeline.module.scss';\nimport './TimelineItem.module.scss';\n\nexport default function TimelineItem({block, index}) {\n  const {createdDt, modifiedDt, isUndone} = block;\n  const lastTimelineBlock = useSelector(selectors.getLastTimelineBlock);\n  const lastValidTimelineBlock = useSelector(selectors.getLastValidTimelineBlock);\n  const lastTimelineBlockWithFiles = useSelector(selectors.getLastTimelineBlockWithFiles);\n  const needsSubmitterConfirmation = useSelector(selectors.needsSubmitterConfirmation);\n  const canPerformSubmitterActions = useSelector(selectors.canPerformSubmitterActions);\n  const canEditLastRevision = useSelector(selectors.canEditLastRevision);\n  const {canComment} = useSelector(selectors.getDetails);\n  const {fileTypes} = useSelector(selectors.getStaticData);\n  const isLastBlock = lastTimelineBlock.id === block.id;\n  const isLastValidBlock = lastValidTimelineBlock.id === block.id;\n  const isLastTimelineBlockWithFiles = lastTimelineBlockWithFiles.id === block.id;\n  const canEdit = isLastValidBlock && canEditLastRevision;\n  const hasContent =\n    block.commentHtml ||\n    !!block.files.length ||\n    !!block.tags.length ||\n    !!block.customActions.length;\n  const isAlwaysVisible = isLastValidBlock || isLastTimelineBlockWithFiles;\n  const [visibilityToggle, setVisibilityToggle] = useState(false);\n  const visible = visibilityToggle || isAlwaysVisible;\n  const user = block.type.name === RevisionType.replacement ? INDICO_BOT_USER : block.user;\n\n  return (\n    <>\n      <div className=\"i-timeline\">\n        <div className=\"i-timeline-item\" styleName={isUndone ? 'undone-item' : undefined}>\n          <UserAvatar user={user} />\n          <div\n            className={`i-timeline-item-box header-indicator-left ${\n              !visible || !hasContent ? 'header-only' : ''\n            }`}\n            id={`block-info-${block.id}`}\n          >\n            <div className=\"i-box-header flexrow\">\n              <div className=\"f-self-stretch\" styleName=\"item-header\">\n                {!!block.files.length && <span styleName=\"item-index\">#{index}</span>}{' '}\n                <span>\n                  {block.header ? (\n                    <strong>{block.header}</strong>\n                  ) : (\n                    <Translate>\n                      <Param name=\"submitterName\" value={user.fullName} wrapper={<strong />} /> has\n                      submitted files\n                    </Translate>\n                  )}\n                </span>{' '}\n                <time dateTime={serializeDate(createdDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}>\n                  {serializeDate(createdDt, 'LLL')}\n                </time>{' '}\n                {modifiedDt && (\n                  <time\n                    dateTime={serializeDate(modifiedDt, moment.HTML5_FMT.DATETIME_LOCAL_SECONDS)}\n                    title={serializeDate(modifiedDt, 'LLL')}\n                  >\n                    <span className=\"review-comment-edited\">\n                      <Translate>edited</Translate>\n                    </span>\n                  </time>\n                )}{' '}\n                {isUndone && (\n                  <Translate as=\"span\" styleName=\"undone-indicator\">\n                    Retracted\n                  </Translate>\n                )}\n              </div>\n              {visible && canEdit && <ResetReview reviewURL={block.reviewURL} />}\n              {!isAlwaysVisible && (hasContent || !!block.items.length) && (\n                <a\n                  className=\"i-link\"\n                  styleName=\"item-visibility-toggle\"\n                  onClick={() => setVisibilityToggle(!visible)}\n                >\n                  {visible ? <Translate>Hide</Translate> : <Translate>Show details</Translate>}\n                </a>\n              )}\n              <StateIndicator state={RevisionTypeStates[block.type.name]} circular />\n            </div>\n            {visible && hasContent && (\n              <div className=\"i-box-content\">\n                {isUndone && (\n                  <Message warning>\n                    <Icon name=\"warning sign\" />\n                    <Translate>This revision has been retracted by the editor.</Translate>\n                  </Message>\n                )}\n                {block.commentHtml && <ReviewComment block={block} canEdit={canEdit} />}\n                {block.commentHtml && !!(block.files.length || block.tags.length) && <Divider />}\n                <FileDisplay\n                  fileTypes={fileTypes}\n                  files={block.files}\n                  downloadURL={block.downloadFilesURL}\n                  tags={block.tags}\n                  outdated={!isLastTimelineBlockWithFiles}\n                />\n                {canPerformSubmitterActions && needsSubmitterConfirmation && isLastValidBlock && (\n                  <ChangesConfirmation />\n                )}\n                {!!block.customActions.length && (\n                  <CustomActions url={block.customActionURL} actions={block.customActions} />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {visible && (!!block.items.length || isLastBlock || isLastValidBlock) && (\n        <RevisionLog items={block.items} separator={isLastBlock}>\n          {isLastValidBlock && canComment && <ReviewForm />}\n        </RevisionLog>\n      )}\n    </>\n  );\n}\n\nTimelineItem.propTypes = {\n  block: PropTypes.shape(blockPropTypes).isRequired,\n  index: PropTypes.number.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Loader, Message} from 'semantic-ui-react';\n\nimport TimelineHeader from 'indico/modules/events/editing/editing/timeline/TimelineHeader';\nimport TimelineContent from 'indico/modules/events/reviewing/components/TimelineContent';\nimport {Param, Translate} from 'indico/react/i18n';\n\nimport * as actions from './actions';\nimport FileDisplay from './FileDisplay';\nimport * as selectors from './selectors';\nimport SubmitRevision from './SubmitRevision';\nimport TimelineItem from './TimelineItem';\n\nconst POLLING_SECONDS = 10;\n\nexport default function Timeline() {\n  const dispatch = useDispatch();\n  const details = useSelector(selectors.getDetails);\n  const isInitialEditableDetailsLoading = useSelector(selectors.isInitialEditableDetailsLoading);\n  const needsSubmitterChanges = useSelector(selectors.needsSubmitterChanges);\n  const canPerformSubmitterActions = useSelector(selectors.canPerformSubmitterActions);\n  const lastRevision = useSelector(selectors.getLastRevision);\n  const lastRevisionWithFiles = useSelector(selectors.getLastRevisionWithFiles);\n  const timelineBlocks = useSelector(selectors.getTimelineBlocks);\n  const {eventId, contributionId, editableType, fileTypes} = useSelector(selectors.getStaticData);\n  const isOutdated = useSelector(selectors.isTimelineOutdated);\n\n  useEffect(() => {\n    dispatch(actions.loadTimeline());\n  }, [contributionId, eventId, editableType, dispatch]);\n\n  useEffect(() => {\n    const task = setInterval(async () => {\n      dispatch(actions.checkTimelineUpdates());\n    }, POLLING_SECONDS * 1000);\n    return () => {\n      clearInterval(task);\n    };\n  }, [dispatch]);\n\n  const refresh = () => {\n    dispatch(actions.useUpdatedTimeline());\n  };\n\n  if (isInitialEditableDetailsLoading) {\n    return <Loader active />;\n  } else if (!details) {\n    return null;\n  }\n\n  return (\n    <>\n      {isOutdated && (\n        <Message\n          warning\n          header={Translate.string('This revision has been updated')}\n          content={\n            <Translate>\n              <Param name=\"link\" wrapper={<a onClick={refresh} />}>\n                Click here to refresh\n              </Param>{' '}\n              and see the most recent version.\n            </Translate>\n          }\n        />\n      )}\n      <TimelineHeader\n        contribution={details.contribution}\n        state={details.state}\n        submitter={timelineBlocks[0].user}\n        eventId={eventId}\n      >\n        {details.hasPublishedRevision && (\n          <FileDisplay\n            fileTypes={fileTypes}\n            files={lastRevisionWithFiles.files}\n            downloadURL={lastRevisionWithFiles.downloadFilesURL}\n            tags={lastRevision.tags}\n          />\n        )}\n      </TimelineHeader>\n      <TimelineContent blocks={timelineBlocks} itemComponent={TimelineItem} />\n      {canPerformSubmitterActions && needsSubmitterChanges && <SubmitRevision />}\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {camelizeKeys} from 'indico/utils/case';\n\nimport {SET_LOADING, SET_DETAILS, SET_NEW_DETAILS} from './actions';\nimport {processRevisions} from './util';\n\nexport const initialState = {\n  details: null,\n  newDetails: null,\n  timelineBlocks: null,\n  loading: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      return {...state, loading: true};\n    case SET_DETAILS: {\n      const details = camelizeKeys(action.data);\n      return {\n        ...state,\n        details,\n        newDetails: details,\n        loading: false,\n        timelineBlocks: processRevisions(details.revisions),\n      };\n    }\n    case SET_NEW_DETAILS: {\n      const newDetails = camelizeKeys(action.data);\n      return {...state, newDetails};\n    }\n    default:\n      return state;\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport editableDetailsURL from 'indico-url:event_editing.api_editable';\nimport fileTypesURL from 'indico-url:event_editing.api_file_types';\nimport tagsURL from 'indico-url:event_editing.api_tags';\n\nimport React from 'react';\nimport {Provider} from 'react-redux';\nimport {useParams} from 'react-router-dom';\nimport {Loader} from 'semantic-ui-react';\n\nimport {useIndicoAxios} from 'indico/react/hooks';\nimport {useNumericParam} from 'indico/react/util/routing';\nimport createReduxStore from 'indico/utils/redux';\n\nimport Timeline from './timeline';\nimport reducer from './timeline/reducer';\n\nexport default function ReduxTimeline() {\n  const eventId = useNumericParam('event_id');\n  const contributionId = useNumericParam('contrib_id');\n  const {type: editableType} = useParams();\n\n  const {data: fileTypes, loading: isLoadingFileTypes} = useIndicoAxios(\n    fileTypesURL({event_id: eventId, type: editableType}),\n    {camelize: true}\n  );\n\n  const {data: tags, loading: isLoadingTags} = useIndicoAxios(tagsURL({event_id: eventId}), {\n    camelize: true,\n  });\n\n  if (isLoadingFileTypes || isLoadingTags) {\n    return <Loader inline=\"centered\" active />;\n  } else if (!fileTypes || !tags) {\n    return null;\n  }\n\n  const store = createReduxStore(\n    'editing-timeline',\n    {timeline: reducer},\n    {\n      staticData: {\n        eventId,\n        contributionId,\n        editableType,\n        fileTypes,\n        tags,\n        editableDetailsURL: editableDetailsURL({\n          event_id: eventId,\n          contrib_id: contributionId,\n          type: editableType,\n        }),\n      },\n    }\n  );\n  return (\n    <Provider store={store}>\n      <Timeline />\n    </Provider>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport timelineURL from 'indico-url:event_editing.editable';\nimport editableTypeListURL from 'indico-url:event_editing.editable_type_list';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport {routerPathFromFlask} from 'indico/react/util/routing';\n\nimport {EditableList} from '../management/editable_type';\n\nimport EditingView from './page_layout';\nimport ReduxTimeline from './ReduxTimeline';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const editingElement = document.querySelector('#editing-view');\n\n  if (!editingElement) {\n    return;\n  }\n\n  const headerHeight =\n    document.querySelector('div.header').getBoundingClientRect().height +\n    document.querySelector('div.main-breadcrumb').getBoundingClientRect().height;\n  document.body.style.setProperty('--header-height', headerHeight);\n\n  const eventTitle = editingElement.dataset.eventTitle;\n\n  ReactDOM.render(\n    <Router>\n      <Route\n        path={[\n          routerPathFromFlask(timelineURL, ['event_id', 'contrib_id', 'type']),\n          routerPathFromFlask(editableTypeListURL, ['event_id', 'type']),\n        ]}\n      >\n        <EditingView eventTitle={eventTitle}>\n          <Switch>\n            <Route\n              exact\n              path={routerPathFromFlask(timelineURL, ['event_id', 'contrib_id', 'type'])}\n              component={ReduxTimeline}\n            />\n            <Route exact path={routerPathFromFlask(editableTypeListURL, ['event_id', 'type'])}>\n              <EditableList management={false} />\n            </Route>\n          </Switch>\n        </EditingView>\n      </Route>\n    </Router>,\n    editingElement\n  );\n});\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["Section","_ref","icon","label","description","children","React","className","propTypes","PropTypes","isRequired","assignMyselfURL","_buildFlaskURL","bind","endpoint","rules","args","converters","contrib_id","event_id","type","defaults","trace","data","isDynamic","fileTypesURL","editableListURL","NextEditable","eventId","editableType","onClose","management","fileTypes","loading","isLoadingFileTypes","useIndicoAxios","camelize","Loader","active","NextEditableDisplay","_ref2","editables","setEditables","useState","filters","setFilters","filteredSet","_setFilteredSet","Set","selectedEditable","setSelectedEditable","setLoading","currFilters","useRef","history","useHistory","setFilteredSet","value","has","id","filterOptions","useMemo","key","text","Translate","string","options","_uniq","map","e","contributionCode","filter","x","code","isMatch","editable","selectedOptions","includes","_flatten","c","contributionKeywords","keyword","some","k","_ref3","name","extensions","length","extension","exclusive","filteredEditables","_orderBy","_objectSpread","canAssignSelf","Modal","closeOnDimmerClick","open","Header","GetNextEditableTitles","Content","ListFilter","list","searchableId","contributionFriendlyId","searchableFields","editor","contributionTitle","fullName","onChangeFilters","async","filetypesKeyExpr","formatFilterOptions","extOptionExpr","extensionOptions","Object","keys","o","exec","has_no_files","newFilters","activeFilters","f","reduce","acc","_editables","_isEqual","current","response","indicoAxios","post","_pickBy","_filters","Array","isArray","has_files","handleAxiosError","camelizeKeys","getEditables","filtered","every","_ref4","onChangeList","Dimmer","Dimmable","dimmed","NextEditableTable","inverted","Actions","style","display","justifyContent","Button","onClick","color","put","contributionId","error","location","href","timelineURL","push","disabled","_ref5","codePresent","values","Table","basic","striped","Row","HeaderCell","width","Body","opacity","Cell","Checkbox","radio","checked","onChange","target","rel","EditableType","fileTypePropTypes","defaultProps","principalsURL","TeamManager","useNumericParam","favoriteUsersController","useFavoriteUsers","principals","isLoadingPrincipals","FinalModalForm","size","onSubmit","form","changedValues","getChangedValues","handleSubmitError","header","initialValues","initialValuesEqual","unloadPrompt","unloadPromptRouter","Message","FinalPrincipalList","withEventRoles","withCategoryRoles","anonymousTeamURL","contribsWithNoEditablesURL","enableEditingURL","emailMetadataURL","emailPreviewURL","emailSendURL","selfAssignURL","enableSubmissionURL","contactEditingTeamURL","dashboardURL","manageEditableTypeListURL","manageFileTypesURL","manageReviewConditionsURL","EditableTypeDashboard","useParams","editorManagerVisible","setEditorManagerVisible","selfAssignModalVisible","setSelfAssignModalVisible","selfAssignEnabled","toggleSelfAssign","selfAssignLoading","selfAssignSaving","useTogglableValue","anonymousTeamEnabled","toggleAnonymousTeam","anonymousTeamLoading","anonymousTeamSaving","submissionEnabled","toggleSubmission","submissionLoading","editingEnabled","toggleEditing","editingLoading","editorAssignmentDescription","paper","poster","slides","numEditables","count","ManagementPageSubTitle","title","EditableTypeTitles","ManagementPageBackButton","url","EmailContribAbstractRolesButton","objectContext","metadataURL","previewURL","sendURL","Link","to","toggle","contactEditingTeam","ajaxDialog","editableTypeURL","EditableTypeSubPageNav","ManagementPageTitle","ExtensionList","onFocus","onBlur","Dropdown","search","selection","multiple","allowAdditions","fluid","closeOnChange","noResultsMessage","additionLabel","handleChange","newValue","trim","replace","FileTypeModal","fileType","filenameTemplate","required","allowMultipleFiles","publishable","formData","filename_template","allow_multiple_files","isUsed","visible","warning","Icon","FinalInput","Param","wrapper","pattern","nullIfEmpty","FinalField","component","isEqual","unsortedArraysEqual","FinalCheckbox","createFileTypeURL","editFileTypeURL","file_type_id","initialState","operation","fileTypesReducer","state","action","StatusIcon","FileTypeManager","dispatch","useReducer","reFetch","lastData","inline","canDelete","isUsedInCondition","fileTypeId","ft","isLastPublishable","renderPopupContent","currentFileType","info","Segment","Label","ribbon","Popup","on","position","content","trigger","cursor","corner","TooltipIfTruncated","ext","primary","floated","fileTypeData","patch","editFileType","createFileType","undefined","RequestConfirmDelete","requestFunc","delete","deleteFileType","FileTypeManagement","ReviewConditionForm","types","onDismiss","useContext","ReviewConditionsContext","FinalForm","file_types","subscription","submitting","handleSubmit","Form","FinalDropdown","placeholder","hideValidationError","FinalSubmitButton","circular","editReviewConditionURL","condition_id","ConditionInfo","condId","onUpdate","disableActions","isEditing","setIsEditing","isDeleting","setIsDeleting","index","as","reviewConditionsURL","ReviewConditionsManager","isAdding","setIsAdding","eventConditionsSetting","eventConditions","reviewConditions","condition","find","reviewCondition","Divider","horizontal","ReviewConditionManagement","Provider","colors","replaced","needs_submitter_confirmation","rejected","accepted","needs_submitter_changes","ready_for_review","labelColors","Palette","orange","yellow","black","green","red","not_submitted","blue","StateIndicator","tooltip","monochrome","labelColor","gray","EditableStatus","ownKeys","r","t","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","apply","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","revisionStates","RevisionType","revision","editorName","user","changes_acceptance","changes_rejection","acceptance","files","rejection","replacement","reset","getRevisionHeader","revisions","INDICO_BOT_USER","userPropTypes","identifier","avatarURL","typePropTypes","blockItemPropTypes","revisionId","createdDt","modifiedDt","canModify","html","internal","system","isUndone","isEditorRevision","modifyCommentURL","blockPropTypes","comment","commentHtml","filePropTypes","items","customActions","customActionURL","downloadFilesURL","CommentButton","modalOpen","setModalOpen","CommentModal","FinalTextArea","autoFocus","applyJudgmentURL","assignEditorURL","assignSelfEditorURL","createCommentURL","editorsURL","canAssignSelfURL","editablesArchiveURL","archive_type","unassignEditorURL","EditableList","contribList","isLoadingContribList","editors","isLoadingEditors","manual","isLoadingCanAssignSelf","EditableListDisplay","initialContribList","sortBy","setSortBy","sortDirection","setSortDirection","setContribList","sortedList","setSortedList","contribsWithEditables","contribIdSet","setChecked","hasCheckedContribs","checkedSet","checkedContribsWithEditables","editorAssignments","fromEntries","activeRequest","setActiveRequest","assignmentConflict","setAssignmentConflict","skippedEditables","setSkippedEditables","editorOptions","_sortBy","judgmentOptions","empty","contrib","_uniqBy","keywords","tags","pre","cur","concat","_contrib$c$editable","tag","skippedEditablesWarning","PluralTranslate","columnHeaders","sortKeys","contribution","toLowerCase","revisionCount","status","sortFuncs","arr","sort","a","b","natSortCompare","_sortList","filteredResults","newList","SortDirection","DESC","reverse","_sort","filterableContribs","friendlyId","renderFuncs","renderTitle","renderStatus","rowIndex","renderCell","dataKey","fn","role","checkedEditablesRequest","urlFunc","urlData","_error$response","editor_conflict","force","updateCheckedEditablesRequest","rv","updatedEditables","Map","_mapper","get","patchList","checkedEditablesAssignmentRequest","editor_assignments","useEffect","document","body","classList","add","remove","Group","scrolling","selectOnBlur","selectOnNavigation","evt","_ref6","assignSelfEditor","_ref7","applyJudgment","downloadURL","row","WindowScroller","_ref8","height","isScrolling","onChildScroll","scrollTop","autoHeight","onScroll","headerHeight","rowHeight","rowCount","rowGetter","_ref9","rowStyle","_ref10","backgroundColor","pastelGray","Column","disableSort","headerRenderer","indeterminate","toggleSelectAll","dataChecked","cellRenderer","_ref11","dataIndex","newId","old","toggleSelectRow","_ref12","extraProps","_extends","Confirm","confirmButton","negative","cancelButton","onCancel","onConfirm","enabledEditableTypesURL","manageEditableTypeURL","EditableTypeList","editMode","setEditMode","enabledEditableTypes","isLoadingEnabledEditableTypes","enabledTypes","editable_types","assign","editableTypeOrder","fprops","checkServiceURL","connectServiceURL","disconnectServiceURL","checkServiceStatusURL","debounce","makeAsyncDebounce","ManageService","serviceURLInfo","setServiceURLInfo","connectOpen","setConnectOpen","disconnectOpen","setDisconnectOpen","checkPending","showConnect","showDisconnect","forceDisconnect","connected","service","version","canDisconnect","closeConnectModal","err","validate","validationError","v","resp","params","submitError","FORM_ERROR","fontWeight","manageTagsURL","EditingManagementDashboard","Indico","ExperimentalEditingService","renderColorLabel","colorName","alignItems","marginLeft","SUIPalette","availableColors","TagModal","createTagURL","editTagURL","tag_id","tagsURL","tagsReducer","TagManager","isLoadingTags","currentTag","verboseTitle","tagId","tagData","editTag","createTag","deleteTag","EditingTagManagement","EditingManagement","Router","Switch","Route","exact","path","routerPathFromFlask","ReviewConditionsManagement","addEventListener","editingManagementContainer","querySelector","ReactDOM","contribDisplayURL","editableTypeListURL","displayURL","EditableListMenu","pathname","Menu","vertical","Item","MenuBar","menuData","contribId","displayViewURL","managementViewURL","menuItems","showManagementLink","showEditableList","EditableEditingTitles","item","menuEntryPropTypes","menuEntriesURL","EditingView","eventTitle","SET_LOADING","SET_DETAILS","SET_NEW_DETAILS","loadTimeline","getStore","editableDetailsURL","getStaticData","ajaxAction","deleteEditableURL","DeleteEditable","useSelector","selectors","allowed","isOpen","setIsOpen","link","persistent","contributionDisplayURL","TimelineHeader","submitter","canUnassign","canPerformEditorActions","reviewConditionsValid","getDetails","useDispatch","MathJax","cssClass","_styleModuleImportMap","FileListDisplay","stateIcon","modified","added","filename","uuid","FileTypeDisplay","FileDisplay","outdated","_getClassName","toClasses","mapFileTypes","createSubmitterRevisionURL","revision_id","uploadURL","SubmitRevision","lastRevision","lastRevisionWithFiles","currentUser","User","getFilesFromRevision","createRevision","UserAvatar","FinalFileManager","mustChange","ChangesConfirmation","getLastRevision","submitFormAction","confirmURL","confirmEditableChanges","Field","input","currentAction","change","disabledUntilChange","activeSubmitButton","CustomActions","actions","confirmAction","setConfirmAction","setSubmitting","triggerAction","redirect","confirm","ResetReview","reviewURL","RequestConfirm","confirmText","ReviewComment","block","canEdit","editFormOpen","setEditFormOpen","modifyReviewComment","RevisionTypeStates","dangerouslySetInnerHTML","__html","CommentForm","onToggleExpand","expanded","canCreateInternalComments","commentFormVisible","setCommentFormVisible","InputComponent","inputProps","onCommentClickHandler","JudgmentDropdownItems","judgmentType","setJudgmentType","hasPublishables","hasPublishableFiles","selected","stopPropagation","class","JudgmentBoxHeader","option","Text","marginRight","verticalAlign","direction","button","floating","optionPropTypes","TagInput","_","renderLabel","FinalTagInput","rest","_objectWithoutProperties","_excluded","format","parse","undefinedValue","UpdateFilesBox","requirePublishable","staticData","publishableFileTypes","currentFiles","Singular","join","Plural","render","submitRevisionURL","EditingReviewAction","accept","reject","update","requestUpdate","ReviewForm","getLastRevisionWithFiles","canJudge","canJudgeLastRevision","canReview","canReviewLastRevision","canPerformSubmitterActions","tagOptions","getNonSystemTags","judgmentForm","createRevisionComment","setTimeout","EditableSubmissionButton","uploadableFiles","handleSubmission","overflow","upload_changes","_omit","reviewEditable","uploadChanges","Comment","isDeletingComment","setIsDeletingComment","confirmOpen","setConfirmOpen","editCommentFormOpen","setEditCommentFormOpen","commentUser","dateTime","serializeDate","moment","DATETIME_LOCAL_SECONDS","closeOnEscape","closeIcon","modifyURL","RevisionLog","separator","CommentItem","TimelineItem","lastTimelineBlock","lastValidTimelineBlock","lastTimelineBlockWithFiles","needsSubmitterConfirmation","canEditLastRevision","canComment","isLastBlock","isLastValidBlock","isLastTimelineBlockWithFiles","hasContent","isAlwaysVisible","visibilityToggle","setVisibilityToggle","POLLING_SECONDS","Timeline","details","isInitialEditableDetailsLoading","needsSubmitterChanges","timelineBlocks","isOutdated","task","setInterval","clearInterval","refresh","getNewDetails","hasPublishedRevision","TimelineContent","blocks","itemComponent","newDetails","reducer","i","_files","_files2","_tags","previousRevision","slice","_revision$files","getPreviousRevisionWithFiles","previousFilesUUIDs","previousFilenames","nextRevision","comments","ReduxTimeline","store","createReduxStore","timeline","editingElement","getBoundingClientRect","setProperty","dataset","baseIteratee","baseUniq","module","exports","array","iteratee"],"sourceRoot":""}